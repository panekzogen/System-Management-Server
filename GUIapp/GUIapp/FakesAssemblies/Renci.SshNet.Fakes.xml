<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Renci.SshNet.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.RenciSshNetDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Renci.SshNet</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimASCIIEncoding">
            <summary>Shim type of Renci.SshNet.Common.ASCIIEncoding</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.#ctor(Renci.SshNet.Common.ASCIIEncoding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.Constructor">
            <summary>Sets the shim of ASCIIEncoding.ASCIIEncoding()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.GetByteCountCharArrayInt32Int32">
            <summary>Sets the shim of ASCIIEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of ASCIIEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.GetCharCountByteArrayInt32Int32">
            <summary>Sets the shim of ASCIIEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Sets the shim of ASCIIEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.GetMaxByteCountInt32">
            <summary>Sets the shim of ASCIIEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.GetMaxCharCountInt32">
            <summary>Sets the shim of ASCIIEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.StaticConstructor">
            <summary>Sets the shim of ASCIIEncoding.ASCIIEncoding()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances.GetByteCountCharArrayInt32Int32">
            <summary>Sets the shim of ASCIIEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of ASCIIEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances.GetCharCountByteArrayInt32Int32">
            <summary>Sets the shim of ASCIIEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Sets the shim of ASCIIEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances.GetMaxByteCountInt32">
            <summary>Sets the shim of ASCIIEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimASCIIEncoding.AllInstances.GetMaxCharCountInt32">
            <summary>Sets the shim of ASCIIEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAsyncResult">
            <summary>Shim type of Renci.SshNet.Common.AsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult.#ctor(Renci.SshNet.Common.AsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AsyncStateGet">
            <summary>Sets the shim of AsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AsyncWaitHandleGet">
            <summary>Sets the shim of AsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.CompletedSynchronouslyGet">
            <summary>Sets the shim of AsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of AsyncResult.AsyncResult(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.EndInvoke">
            <summary>Sets the shim of AsyncResult.EndInvoke()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.EndInvokeCalledGet">
            <summary>Sets the shim of AsyncResult.get_EndInvokeCalled()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.EndInvokeCalledSetBoolean">
            <summary>Sets the shim of AsyncResult.set_EndInvokeCalled(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.IsCompletedGet">
            <summary>Sets the shim of AsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.SetAsCompletedExceptionBoolean">
            <summary>Sets the shim of AsyncResult.SetAsCompleted(Exception exception, Boolean completedSynchronously)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.AsyncStateGet">
            <summary>Sets the shim of AsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.AsyncWaitHandleGet">
            <summary>Sets the shim of AsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.CompletedSynchronouslyGet">
            <summary>Sets the shim of AsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.EndInvoke">
            <summary>Sets the shim of AsyncResult.EndInvoke()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.EndInvokeCalledGet">
            <summary>Sets the shim of AsyncResult.get_EndInvokeCalled()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.EndInvokeCalledSetBoolean">
            <summary>Sets the shim of AsyncResult.set_EndInvokeCalled(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.IsCompletedGet">
            <summary>Sets the shim of AsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult.AllInstances.SetAsCompletedExceptionBoolean">
            <summary>Sets the shim of AsyncResult.SetAsCompleted(Exception exception, Boolean completedSynchronously)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAsyncResult`1">
            <summary>Shim type of Renci.SshNet.Common.AsyncResult`1</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.#ctor(Renci.SshNet.Common.AsyncResult{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of AsyncResult`1.AsyncResult`1(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.EndInvoke">
            <summary>Sets the shim of AsyncResult`1.EndInvoke()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.SetAsCompletedT0Boolean">
            <summary>Sets the shim of AsyncResult`1.SetAsCompleted(!0 result, Boolean completedSynchronously)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.AllInstances.EndInvoke">
            <summary>Sets the shim of AsyncResult`1.EndInvoke()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAsyncResult`1.AllInstances.SetAsCompletedT0Boolean">
            <summary>Sets the shim of AsyncResult`1.SetAsCompleted(!0 result, Boolean completedSynchronously)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs">
            <summary>Shim type of Renci.SshNet.Common.AuthenticationBannerEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.#ctor(Renci.SshNet.Common.AuthenticationBannerEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.BannerMessageGet">
            <summary>Sets the shim of AuthenticationBannerEventArgs.get_BannerMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.BannerMessageSetString">
            <summary>Sets the shim of AuthenticationBannerEventArgs.set_BannerMessage(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.ConstructorStringStringString">
            <summary>Sets the shim of AuthenticationBannerEventArgs.AuthenticationBannerEventArgs(String username, String message, String language)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.LanguageGet">
            <summary>Sets the shim of AuthenticationBannerEventArgs.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.LanguageSetString">
            <summary>Sets the shim of AuthenticationBannerEventArgs.set_Language(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.AllInstances.BannerMessageGet">
            <summary>Sets the shim of AuthenticationBannerEventArgs.get_BannerMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.AllInstances.BannerMessageSetString">
            <summary>Sets the shim of AuthenticationBannerEventArgs.set_BannerMessage(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.AllInstances.LanguageGet">
            <summary>Sets the shim of AuthenticationBannerEventArgs.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationBannerEventArgs.AllInstances.LanguageSetString">
            <summary>Sets the shim of AuthenticationBannerEventArgs.set_Language(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs">
            <summary>Shim type of Renci.SshNet.Common.AuthenticationEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.#ctor(Renci.SshNet.Common.AuthenticationEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.ConstructorString">
            <summary>Sets the shim of AuthenticationEventArgs.AuthenticationEventArgs(String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.UsernameGet">
            <summary>Sets the shim of AuthenticationEventArgs.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.UsernameSetString">
            <summary>Sets the shim of AuthenticationEventArgs.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.AllInstances.UsernameGet">
            <summary>Sets the shim of AuthenticationEventArgs.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationEventArgs.AllInstances.UsernameSetString">
            <summary>Sets the shim of AuthenticationEventArgs.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs">
            <summary>Shim type of Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.#ctor(Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.ConstructorString">
            <summary>Sets the shim of AuthenticationPasswordChangeEventArgs.AuthenticationPasswordChangeEventArgs(String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.NewPasswordGet">
            <summary>Sets the shim of AuthenticationPasswordChangeEventArgs.get_NewPassword()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.NewPasswordSetByteArray">
            <summary>Sets the shim of AuthenticationPasswordChangeEventArgs.set_NewPassword(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.AllInstances.NewPasswordGet">
            <summary>Sets the shim of AuthenticationPasswordChangeEventArgs.get_NewPassword()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPasswordChangeEventArgs.AllInstances.NewPasswordSetByteArray">
            <summary>Sets the shim of AuthenticationPasswordChangeEventArgs.set_NewPassword(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt">
            <summary>Shim type of Renci.SshNet.Common.AuthenticationPrompt</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.#ctor(Renci.SshNet.Common.AuthenticationPrompt)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.ConstructorInt32BooleanString">
            <summary>Sets the shim of AuthenticationPrompt.AuthenticationPrompt(Int32 id, Boolean isEchoed, String request)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.IdGet">
            <summary>Sets the shim of AuthenticationPrompt.get_Id()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.IdSetInt32">
            <summary>Sets the shim of AuthenticationPrompt.set_Id(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.IsEchoedGet">
            <summary>Sets the shim of AuthenticationPrompt.get_IsEchoed()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.IsEchoedSetBoolean">
            <summary>Sets the shim of AuthenticationPrompt.set_IsEchoed(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.RequestGet">
            <summary>Sets the shim of AuthenticationPrompt.get_Request()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.RequestSetString">
            <summary>Sets the shim of AuthenticationPrompt.set_Request(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.ResponseGet">
            <summary>Sets the shim of AuthenticationPrompt.get_Response()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.ResponseSetString">
            <summary>Sets the shim of AuthenticationPrompt.set_Response(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.IdGet">
            <summary>Sets the shim of AuthenticationPrompt.get_Id()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.IdSetInt32">
            <summary>Sets the shim of AuthenticationPrompt.set_Id(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.IsEchoedGet">
            <summary>Sets the shim of AuthenticationPrompt.get_IsEchoed()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.IsEchoedSetBoolean">
            <summary>Sets the shim of AuthenticationPrompt.set_IsEchoed(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.RequestGet">
            <summary>Sets the shim of AuthenticationPrompt.get_Request()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.RequestSetString">
            <summary>Sets the shim of AuthenticationPrompt.set_Request(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.ResponseGet">
            <summary>Sets the shim of AuthenticationPrompt.get_Response()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPrompt.AllInstances.ResponseSetString">
            <summary>Sets the shim of AuthenticationPrompt.set_Response(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs">
            <summary>Shim type of Renci.SshNet.Common.AuthenticationPromptEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.#ctor(Renci.SshNet.Common.AuthenticationPromptEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.ConstructorStringStringStringIEnumerableOfAuthenticationPrompt">
            <summary>Sets the shim of AuthenticationPromptEventArgs.AuthenticationPromptEventArgs(String username, String instruction, String language, IEnumerable`1&lt;AuthenticationPrompt&gt; prompts)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.InstructionGet">
            <summary>Sets the shim of AuthenticationPromptEventArgs.get_Instruction()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.InstructionSetString">
            <summary>Sets the shim of AuthenticationPromptEventArgs.set_Instruction(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.LanguageGet">
            <summary>Sets the shim of AuthenticationPromptEventArgs.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.LanguageSetString">
            <summary>Sets the shim of AuthenticationPromptEventArgs.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.PromptsGet">
            <summary>Sets the shim of AuthenticationPromptEventArgs.get_Prompts()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.PromptsSetIEnumerableOfAuthenticationPrompt">
            <summary>Sets the shim of AuthenticationPromptEventArgs.set_Prompts(IEnumerable`1&lt;AuthenticationPrompt&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances.InstructionGet">
            <summary>Sets the shim of AuthenticationPromptEventArgs.get_Instruction()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances.InstructionSetString">
            <summary>Sets the shim of AuthenticationPromptEventArgs.set_Instruction(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances.LanguageGet">
            <summary>Sets the shim of AuthenticationPromptEventArgs.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances.LanguageSetString">
            <summary>Sets the shim of AuthenticationPromptEventArgs.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances.PromptsGet">
            <summary>Sets the shim of AuthenticationPromptEventArgs.get_Prompts()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimAuthenticationPromptEventArgs.AllInstances.PromptsSetIEnumerableOfAuthenticationPrompt">
            <summary>Sets the shim of AuthenticationPromptEventArgs.set_Prompts(IEnumerable`1&lt;AuthenticationPrompt&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimBigInteger">
            <summary>Shim type of Renci.SshNet.Common.BigInteger</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimBigInteger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimBigInteger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimBigInteger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.AbsBigInteger">
            <summary>Sets the shim of BigInteger.Abs(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.AddBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Add(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.AdditionOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Addition(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.BitScanBackwardUInt32">
            <summary>Sets the shim of BigInteger.BitScanBackward(UInt32 word)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.BitwiseAndOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_BitwiseAnd(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.BitwiseOrOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_BitwiseOr(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.CompareBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Compare(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.CoreAddUInt32ArrayUInt32">
            <summary>Sets the shim of BigInteger.CoreAdd(UInt32[] a, UInt32 b)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.CoreAddUInt32ArrayUInt32Array">
            <summary>Sets the shim of BigInteger.CoreAdd(UInt32[] a, UInt32[] b)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.CoreCompareUInt32ArrayUInt32Array">
            <summary>Sets the shim of BigInteger.CoreCompare(UInt32[] a, UInt32[] b)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.CoreSubUInt32ArrayUInt32">
            <summary>Sets the shim of BigInteger.CoreSub(UInt32[] a, UInt32 b)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.CoreSubUInt32ArrayUInt32Array">
            <summary>Sets the shim of BigInteger.CoreSub(UInt32[] a, UInt32[] b)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.DecrementOpBigInteger">
            <summary>Sets the shim of BigInteger.op_Decrement(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.DivModUnsignedUInt32ArrayUInt32ArrayUInt32ArrayOutUInt32ArrayOut">
            <summary>Sets the shim of BigInteger.DivModUnsigned(UInt32[] u, UInt32[] v, UInt32[]&amp; q, UInt32[]&amp; r)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.DivRemBigIntegerBigIntegerBigIntegerOut">
            <summary>Sets the shim of BigInteger.DivRem(BigInteger dividend, BigInteger divisor, BigInteger&amp; remainder)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.DivideBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Divide(BigInteger dividend, BigInteger divisor)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.DivisionOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Division(BigInteger dividend, BigInteger divisor)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.EqualityOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Equality(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.EqualityOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_Equality(BigInteger left, Int64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.EqualityOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_Equality(BigInteger left, UInt64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.EqualityOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_Equality(Int64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.EqualityOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_Equality(UInt64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExclusiveOrOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_ExclusiveOr(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerByte">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerDecimal">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerDouble">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerInt16">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerInt32">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerSByte">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerSingle">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerUInt16">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerUInt32">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_Explicit(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpDecimalBigInteger">
            <summary>Sets the shim of BigInteger.op_Explicit(Decimal value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpDoubleBigInteger">
            <summary>Sets the shim of BigInteger.op_Explicit(Double value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExplicitOpSingleBigInteger">
            <summary>Sets the shim of BigInteger.op_Explicit(Single value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ExponentByteArray">
            <summary>Sets the shim of BigInteger.Exponent(Byte[] v)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.FirstNonFFByteUInt32">
            <summary>Sets the shim of BigInteger.FirstNonFFByte(UInt32 word)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GetFormatException">
            <summary>Sets the shim of BigInteger.GetFormatException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GetNormalizeShiftUInt32">
            <summary>Sets the shim of BigInteger.GetNormalizeShift(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_GreaterThan(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_GreaterThan(BigInteger left, Int64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_GreaterThan(BigInteger left, UInt64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_GreaterThan(Int64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_GreaterThan(UInt64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOrEqualOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_GreaterThanOrEqual(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOrEqualOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_GreaterThanOrEqual(BigInteger left, Int64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOrEqualOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_GreaterThanOrEqual(BigInteger left, UInt64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOrEqualOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_GreaterThanOrEqual(Int64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreaterThanOrEqualOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_GreaterThanOrEqual(UInt64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.GreatestCommonDivisorBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.GreatestCommonDivisor(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpByteBigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(Byte value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpInt16BigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(Int16 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpInt32BigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpSByteBigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(SByte value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpUInt16BigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(UInt16 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpUInt32BigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ImplicitOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_Implicit(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.IncrementOpBigInteger">
            <summary>Sets the shim of BigInteger.op_Increment(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.InequalityOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Inequality(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.InequalityOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_Inequality(BigInteger left, Int64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.InequalityOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_Inequality(BigInteger left, UInt64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.InequalityOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_Inequality(Int64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.InequalityOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_Inequality(UInt64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LeftShiftOpBigIntegerInt32">
            <summary>Sets the shim of BigInteger.op_LeftShift(BigInteger value, Int32 shift)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_LessThan(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_LessThan(BigInteger left, Int64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_LessThan(BigInteger left, UInt64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_LessThan(Int64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_LessThan(UInt64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOrEqualOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_LessThanOrEqual(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOrEqualOpBigIntegerInt64">
            <summary>Sets the shim of BigInteger.op_LessThanOrEqual(BigInteger left, Int64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOrEqualOpBigIntegerUInt64">
            <summary>Sets the shim of BigInteger.op_LessThanOrEqual(BigInteger left, UInt64 right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOrEqualOpInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_LessThanOrEqual(Int64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LessThanOrEqualOpUInt64BigInteger">
            <summary>Sets the shim of BigInteger.op_LessThanOrEqual(UInt64 left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.Log10BigInteger">
            <summary>Sets the shim of BigInteger.Log10(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LogBigInteger">
            <summary>Sets the shim of BigInteger.Log(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.LogBigIntegerDouble">
            <summary>Sets the shim of BigInteger.Log(BigInteger value, Double baseValue)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MakeTwoComplementUInt32Array">
            <summary>Sets the shim of BigInteger.MakeTwoComplement(UInt32[] v)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MantissaByteArray">
            <summary>Sets the shim of BigInteger.Mantissa(Byte[] v)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MaxBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Max(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MinBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Min(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MinusOneGet">
            <summary>Sets the shim of BigInteger.get_MinusOne()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ModInverseBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.ModInverse(BigInteger bi, BigInteger modulus)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ModPowBigIntegerBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.ModPow(BigInteger value, BigInteger exponent, BigInteger modulus)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ModulusOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Modulus(BigInteger dividend, BigInteger divisor)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MultiplyBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Multiply(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.MultiplyOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Multiply(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.NegateBigInteger">
            <summary>Sets the shim of BigInteger.Negate(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.NegativeByteArray">
            <summary>Sets the shim of BigInteger.Negative(Byte[] v)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.NormalizeUInt32ArrayInt32UInt32ArrayInt32">
            <summary>Sets the shim of BigInteger.Normalize(UInt32[] u, Int32 l, UInt32[] un, Int32 shift)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.OneGet">
            <summary>Sets the shim of BigInteger.get_One()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.OnesComplementOpBigInteger">
            <summary>Sets the shim of BigInteger.op_OnesComplement(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ParseStringBooleanNumberStylesIFormatProviderBigIntegerOutExceptionOut">
            <summary>Sets the shim of BigInteger.Parse(String s, Boolean tryParse, NumberStyles style, IFormatProvider provider, BigInteger&amp; result, Exception&amp; exc)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ParseStringIFormatProvider">
            <summary>Sets the shim of BigInteger.Parse(String value, IFormatProvider provider)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ParseStringNumberStyles">
            <summary>Sets the shim of BigInteger.Parse(String value, NumberStyles style)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ParseStringNumberStylesIFormatProvider">
            <summary>Sets the shim of BigInteger.Parse(String value, NumberStyles style, IFormatProvider provider)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.PopulationCountUInt32">
            <summary>Sets the shim of BigInteger.PopulationCount(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.PositiveModBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.PositiveMod(BigInteger dividend, BigInteger divisor)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.PowBigIntegerInt32">
            <summary>Sets the shim of BigInteger.Pow(BigInteger value, Int32 exponent)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ProcessTrailingWhitespaceBooleanStringInt32ExceptionRef">
            <summary>Sets the shim of BigInteger.ProcessTrailingWhitespace(Boolean tryParse, String s, Int32 position, Exception&amp; exc)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.RandomInt32">
            <summary>Sets the shim of BigInteger.Random(Int32 bitLength)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.RemainderBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Remainder(BigInteger dividend, BigInteger divisor)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ResizeByteArrayInt32">
            <summary>Sets the shim of BigInteger.Resize(Byte[] v, Int32 len)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ResizeUInt32ArrayInt32">
            <summary>Sets the shim of BigInteger.Resize(UInt32[] v, Int32 len)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.RightShiftOpBigIntegerInt32">
            <summary>Sets the shim of BigInteger.op_RightShift(BigInteger value, Int32 shift)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.StaticConstructor">
            <summary>Sets the shim of BigInteger.BigInteger()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.SubtractBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.Subtract(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.SubtractionOpBigIntegerBigInteger">
            <summary>Sets the shim of BigInteger.op_Subtraction(BigInteger left, BigInteger right)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.TopByteUInt32">
            <summary>Sets the shim of BigInteger.TopByte(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.TryParseStringBigIntegerOut">
            <summary>Sets the shim of BigInteger.TryParse(String value, BigInteger&amp; result)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.TryParseStringNumberStylesCultureInfoBigIntegerOut">
            <summary>Sets the shim of BigInteger.TryParse(String value, NumberStyles style, CultureInfo cultureInfo, BigInteger&amp; result)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.UnaryNegationOpBigInteger">
            <summary>Sets the shim of BigInteger.op_UnaryNegation(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.UnaryPlusOpBigInteger">
            <summary>Sets the shim of BigInteger.op_UnaryPlus(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.UnnormalizeUInt32ArrayUInt32ArrayOutInt32">
            <summary>Sets the shim of BigInteger.Unnormalize(UInt32[] un, UInt32[]&amp; r, Int32 shift)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimBigInteger.ZeroGet">
            <summary>Sets the shim of BigInteger.get_Zero()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimBigInteger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimDerData">
            <summary>Shim type of Renci.SshNet.Common.DerData</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimDerData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimDerData.#ctor(Renci.SshNet.Common.DerData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimDerData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimDerData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.Constructor">
            <summary>Sets the shim of DerData.DerData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.ConstructorByteArray">
            <summary>Sets the shim of DerData.DerData(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.Encode">
            <summary>Sets the shim of DerData.Encode()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.GetLengthInt32">
            <summary>Sets the shim of DerData.GetLength(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.IsEndOfDataGet">
            <summary>Sets the shim of DerData.get_IsEndOfData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.ReadBigInteger">
            <summary>Sets the shim of DerData.ReadBigInteger()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.ReadByte">
            <summary>Sets the shim of DerData.ReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.ReadBytesInt32">
            <summary>Sets the shim of DerData.ReadBytes(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.ReadInteger">
            <summary>Sets the shim of DerData.ReadInteger()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.ReadLength">
            <summary>Sets the shim of DerData.ReadLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteBigInteger">
            <summary>Sets the shim of DerData.Write(BigInteger data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteBoolean">
            <summary>Sets the shim of DerData.Write(Boolean data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteByteArray">
            <summary>Sets the shim of DerData.Write(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteBytesIEnumerableOfByte">
            <summary>Sets the shim of DerData.WriteBytes(IEnumerable`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteDerData">
            <summary>Sets the shim of DerData.Write(DerData data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteNull">
            <summary>Sets the shim of DerData.WriteNull()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteObjectIdentifier">
            <summary>Sets the shim of DerData.Write(ObjectIdentifier identifier)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.WriteUInt32">
            <summary>Sets the shim of DerData.Write(UInt32 data)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.Encode">
            <summary>Sets the shim of DerData.Encode()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.GetLengthInt32">
            <summary>Sets the shim of DerData.GetLength(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.IsEndOfDataGet">
            <summary>Sets the shim of DerData.get_IsEndOfData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.ReadBigInteger">
            <summary>Sets the shim of DerData.ReadBigInteger()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.ReadByte">
            <summary>Sets the shim of DerData.ReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.ReadBytesInt32">
            <summary>Sets the shim of DerData.ReadBytes(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.ReadInteger">
            <summary>Sets the shim of DerData.ReadInteger()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.ReadLength">
            <summary>Sets the shim of DerData.ReadLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteBigInteger">
            <summary>Sets the shim of DerData.Write(BigInteger data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteBoolean">
            <summary>Sets the shim of DerData.Write(Boolean data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteByteArray">
            <summary>Sets the shim of DerData.Write(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteBytesIEnumerableOfByte">
            <summary>Sets the shim of DerData.WriteBytes(IEnumerable`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteDerData">
            <summary>Sets the shim of DerData.Write(DerData data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteNull">
            <summary>Sets the shim of DerData.WriteNull()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteObjectIdentifier">
            <summary>Sets the shim of DerData.Write(ObjectIdentifier identifier)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimDerData.AllInstances.WriteUInt32">
            <summary>Sets the shim of DerData.Write(UInt32 data)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs">
            <summary>Shim type of Renci.SshNet.Common.ExceptionEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.#ctor(Renci.SshNet.Common.ExceptionEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.ConstructorException">
            <summary>Sets the shim of ExceptionEventArgs.ExceptionEventArgs(Exception exception)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.ExceptionGet">
            <summary>Sets the shim of ExceptionEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.ExceptionSetException">
            <summary>Sets the shim of ExceptionEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ExceptionEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimExceptionEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ExceptionEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs">
            <summary>Shim type of Renci.SshNet.Common.HostKeyEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.#ctor(Renci.SshNet.Common.HostKeyEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.CanTrustGet">
            <summary>Sets the shim of HostKeyEventArgs.get_CanTrust()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.CanTrustSetBoolean">
            <summary>Sets the shim of HostKeyEventArgs.set_CanTrust(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.ConstructorKeyHostAlgorithm">
            <summary>Sets the shim of HostKeyEventArgs.HostKeyEventArgs(KeyHostAlgorithm host)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.FingerPrintGet">
            <summary>Sets the shim of HostKeyEventArgs.get_FingerPrint()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.FingerPrintSetByteArray">
            <summary>Sets the shim of HostKeyEventArgs.set_FingerPrint(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.HostKeyGet">
            <summary>Sets the shim of HostKeyEventArgs.get_HostKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.HostKeyNameGet">
            <summary>Sets the shim of HostKeyEventArgs.get_HostKeyName()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.HostKeyNameSetString">
            <summary>Sets the shim of HostKeyEventArgs.set_HostKeyName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.HostKeySetByteArray">
            <summary>Sets the shim of HostKeyEventArgs.set_HostKey(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.KeyLengthGet">
            <summary>Sets the shim of HostKeyEventArgs.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.KeyLengthSetInt32">
            <summary>Sets the shim of HostKeyEventArgs.set_KeyLength(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.CanTrustGet">
            <summary>Sets the shim of HostKeyEventArgs.get_CanTrust()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.CanTrustSetBoolean">
            <summary>Sets the shim of HostKeyEventArgs.set_CanTrust(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.FingerPrintGet">
            <summary>Sets the shim of HostKeyEventArgs.get_FingerPrint()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.FingerPrintSetByteArray">
            <summary>Sets the shim of HostKeyEventArgs.set_FingerPrint(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.HostKeyGet">
            <summary>Sets the shim of HostKeyEventArgs.get_HostKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.HostKeyNameGet">
            <summary>Sets the shim of HostKeyEventArgs.get_HostKeyName()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.HostKeyNameSetString">
            <summary>Sets the shim of HostKeyEventArgs.set_HostKeyName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.HostKeySetByteArray">
            <summary>Sets the shim of HostKeyEventArgs.set_HostKey(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.KeyLengthGet">
            <summary>Sets the shim of HostKeyEventArgs.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimHostKeyEventArgs.AllInstances.KeyLengthSetInt32">
            <summary>Sets the shim of HostKeyEventArgs.set_KeyLength(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimNetConfServerException">
            <summary>Shim type of Renci.SshNet.Common.NetConfServerException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimNetConfServerException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimNetConfServerException.#ctor(Renci.SshNet.Common.NetConfServerException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimNetConfServerException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimNetConfServerException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimNetConfServerException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimNetConfServerException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimNetConfServerException.Constructor">
            <summary>Sets the shim of NetConfServerException.NetConfServerException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimNetConfServerException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NetConfServerException.NetConfServerException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimNetConfServerException.ConstructorString">
            <summary>Sets the shim of NetConfServerException.NetConfServerException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimNetConfServerException.ConstructorStringException">
            <summary>Sets the shim of NetConfServerException.NetConfServerException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimNetConfServerException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimObjectIdentifier">
            <summary>Shim type of Renci.SshNet.Common.ObjectIdentifier</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimObjectIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimObjectIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimObjectIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimObjectIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimObjectIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimPipeStream">
            <summary>Shim type of Renci.SshNet.Common.PipeStream</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPipeStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPipeStream.#ctor(Renci.SshNet.Common.PipeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPipeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPipeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPipeStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.BlockLastReadBufferGet">
            <summary>Sets the shim of PipeStream.get_BlockLastReadBuffer()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.BlockLastReadBufferSetBoolean">
            <summary>Sets the shim of PipeStream.set_BlockLastReadBuffer(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.CanReadGet">
            <summary>Sets the shim of PipeStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.CanSeekGet">
            <summary>Sets the shim of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.CanWriteGet">
            <summary>Sets the shim of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.Constructor">
            <summary>Sets the shim of PipeStream.PipeStream()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.Flush">
            <summary>Sets the shim of PipeStream.Flush()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.LengthGet">
            <summary>Sets the shim of PipeStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.MaxBufferLengthGet">
            <summary>Sets the shim of PipeStream.get_MaxBufferLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.MaxBufferLengthSetInt64">
            <summary>Sets the shim of PipeStream.set_MaxBufferLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.PositionGet">
            <summary>Sets the shim of PipeStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.PositionSetInt64">
            <summary>Sets the shim of PipeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.ReadAvailableInt32">
            <summary>Sets the shim of PipeStream.ReadAvailable(Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.SetLengthInt64">
            <summary>Sets the shim of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.BlockLastReadBufferGet">
            <summary>Sets the shim of PipeStream.get_BlockLastReadBuffer()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.BlockLastReadBufferSetBoolean">
            <summary>Sets the shim of PipeStream.set_BlockLastReadBuffer(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.CanReadGet">
            <summary>Sets the shim of PipeStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.Flush">
            <summary>Sets the shim of PipeStream.Flush()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.LengthGet">
            <summary>Sets the shim of PipeStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.MaxBufferLengthGet">
            <summary>Sets the shim of PipeStream.get_MaxBufferLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.MaxBufferLengthSetInt64">
            <summary>Sets the shim of PipeStream.set_MaxBufferLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.PositionGet">
            <summary>Sets the shim of PipeStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of PipeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.ReadAvailableInt32">
            <summary>Sets the shim of PipeStream.ReadAvailable(Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPipeStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs">
            <summary>Shim type of Renci.SshNet.Common.PortForwardEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.#ctor(Renci.SshNet.Common.PortForwardEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.ConstructorStringUInt32">
            <summary>Sets the shim of PortForwardEventArgs.PortForwardEventArgs(String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.OriginatorHostGet">
            <summary>Sets the shim of PortForwardEventArgs.get_OriginatorHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.OriginatorHostSetString">
            <summary>Sets the shim of PortForwardEventArgs.set_OriginatorHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.OriginatorPortGet">
            <summary>Sets the shim of PortForwardEventArgs.get_OriginatorPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.OriginatorPortSetUInt32">
            <summary>Sets the shim of PortForwardEventArgs.set_OriginatorPort(UInt32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.AllInstances.OriginatorHostGet">
            <summary>Sets the shim of PortForwardEventArgs.get_OriginatorHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.AllInstances.OriginatorHostSetString">
            <summary>Sets the shim of PortForwardEventArgs.set_OriginatorHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.AllInstances.OriginatorPortGet">
            <summary>Sets the shim of PortForwardEventArgs.get_OriginatorPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimPortForwardEventArgs.AllInstances.OriginatorPortSetUInt32">
            <summary>Sets the shim of PortForwardEventArgs.set_OriginatorPort(UInt32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimProxyException">
            <summary>Shim type of Renci.SshNet.Common.ProxyException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimProxyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimProxyException.#ctor(Renci.SshNet.Common.ProxyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimProxyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimProxyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimProxyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimProxyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimProxyException.Constructor">
            <summary>Sets the shim of ProxyException.ProxyException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimProxyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyException.ProxyException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimProxyException.ConstructorString">
            <summary>Sets the shim of ProxyException.ProxyException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimProxyException.ConstructorStringException">
            <summary>Sets the shim of ProxyException.ProxyException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimProxyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs">
            <summary>Shim type of Renci.SshNet.Common.ScpDownloadEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.#ctor(Renci.SshNet.Common.ScpDownloadEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.ConstructorStringInt64Int64">
            <summary>Sets the shim of ScpDownloadEventArgs.ScpDownloadEventArgs(String filename, Int64 size, Int64 downloaded)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.DownloadedGet">
            <summary>Sets the shim of ScpDownloadEventArgs.get_Downloaded()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.DownloadedSetInt64">
            <summary>Sets the shim of ScpDownloadEventArgs.set_Downloaded(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.FilenameGet">
            <summary>Sets the shim of ScpDownloadEventArgs.get_Filename()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.FilenameSetString">
            <summary>Sets the shim of ScpDownloadEventArgs.set_Filename(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.SizeGet">
            <summary>Sets the shim of ScpDownloadEventArgs.get_Size()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.SizeSetInt64">
            <summary>Sets the shim of ScpDownloadEventArgs.set_Size(Int64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances.DownloadedGet">
            <summary>Sets the shim of ScpDownloadEventArgs.get_Downloaded()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances.DownloadedSetInt64">
            <summary>Sets the shim of ScpDownloadEventArgs.set_Downloaded(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances.FilenameGet">
            <summary>Sets the shim of ScpDownloadEventArgs.get_Filename()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances.FilenameSetString">
            <summary>Sets the shim of ScpDownloadEventArgs.set_Filename(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances.SizeGet">
            <summary>Sets the shim of ScpDownloadEventArgs.get_Size()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpDownloadEventArgs.AllInstances.SizeSetInt64">
            <summary>Sets the shim of ScpDownloadEventArgs.set_Size(Int64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimScpException">
            <summary>Shim type of Renci.SshNet.Common.ScpException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpException.#ctor(Renci.SshNet.Common.ScpException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpException.Constructor">
            <summary>Sets the shim of ScpException.ScpException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ScpException.ScpException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpException.ConstructorString">
            <summary>Sets the shim of ScpException.ScpException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpException.ConstructorStringException">
            <summary>Sets the shim of ScpException.ScpException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimScpException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs">
            <summary>Shim type of Renci.SshNet.Common.ScpUploadEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.#ctor(Renci.SshNet.Common.ScpUploadEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.ConstructorStringInt64Int64">
            <summary>Sets the shim of ScpUploadEventArgs.ScpUploadEventArgs(String filename, Int64 size, Int64 uploaded)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.FilenameGet">
            <summary>Sets the shim of ScpUploadEventArgs.get_Filename()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.FilenameSetString">
            <summary>Sets the shim of ScpUploadEventArgs.set_Filename(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.SizeGet">
            <summary>Sets the shim of ScpUploadEventArgs.get_Size()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.SizeSetInt64">
            <summary>Sets the shim of ScpUploadEventArgs.set_Size(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.UploadedGet">
            <summary>Sets the shim of ScpUploadEventArgs.get_Uploaded()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.UploadedSetInt64">
            <summary>Sets the shim of ScpUploadEventArgs.set_Uploaded(Int64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances.FilenameGet">
            <summary>Sets the shim of ScpUploadEventArgs.get_Filename()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances.FilenameSetString">
            <summary>Sets the shim of ScpUploadEventArgs.set_Filename(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances.SizeGet">
            <summary>Sets the shim of ScpUploadEventArgs.get_Size()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances.SizeSetInt64">
            <summary>Sets the shim of ScpUploadEventArgs.set_Size(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances.UploadedGet">
            <summary>Sets the shim of ScpUploadEventArgs.get_Uploaded()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimScpUploadEventArgs.AllInstances.UploadedSetInt64">
            <summary>Sets the shim of ScpUploadEventArgs.set_Uploaded(Int64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSemaphoreLight">
            <summary>Shim type of Renci.SshNet.Common.SemaphoreLight</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.#ctor(Renci.SshNet.Common.SemaphoreLight)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.ConstructorInt32">
            <summary>Sets the shim of SemaphoreLight.SemaphoreLight(Int32 initialCount)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.CurrentCountGet">
            <summary>Sets the shim of SemaphoreLight.get_CurrentCount()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.Release">
            <summary>Sets the shim of SemaphoreLight.Release()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.ReleaseInt32">
            <summary>Sets the shim of SemaphoreLight.Release(Int32 releaseCount)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.Wait">
            <summary>Sets the shim of SemaphoreLight.Wait()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.AllInstances.CurrentCountGet">
            <summary>Sets the shim of SemaphoreLight.get_CurrentCount()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.AllInstances.Release">
            <summary>Sets the shim of SemaphoreLight.Release()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.AllInstances.ReleaseInt32">
            <summary>Sets the shim of SemaphoreLight.Release(Int32 releaseCount)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSemaphoreLight.AllInstances.Wait">
            <summary>Sets the shim of SemaphoreLight.Wait()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException">
            <summary>Shim type of Renci.SshNet.Common.SftpPathNotFoundException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.#ctor(Renci.SshNet.Common.SftpPathNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.Constructor">
            <summary>Sets the shim of SftpPathNotFoundException.SftpPathNotFoundException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SftpPathNotFoundException.SftpPathNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.ConstructorString">
            <summary>Sets the shim of SftpPathNotFoundException.SftpPathNotFoundException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.ConstructorStringException">
            <summary>Sets the shim of SftpPathNotFoundException.SftpPathNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSftpPathNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException">
            <summary>Shim type of Renci.SshNet.Common.SftpPermissionDeniedException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.#ctor(Renci.SshNet.Common.SftpPermissionDeniedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.Constructor">
            <summary>Sets the shim of SftpPermissionDeniedException.SftpPermissionDeniedException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SftpPermissionDeniedException.SftpPermissionDeniedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.ConstructorString">
            <summary>Sets the shim of SftpPermissionDeniedException.SftpPermissionDeniedException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.ConstructorStringException">
            <summary>Sets the shim of SftpPermissionDeniedException.SftpPermissionDeniedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSftpPermissionDeniedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs">
            <summary>Shim type of Renci.SshNet.Common.ShellDataEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.#ctor(Renci.SshNet.Common.ShellDataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.ConstructorByteArray">
            <summary>Sets the shim of ShellDataEventArgs.ShellDataEventArgs(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.ConstructorString">
            <summary>Sets the shim of ShellDataEventArgs.ShellDataEventArgs(String line)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.DataGet">
            <summary>Sets the shim of ShellDataEventArgs.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.DataSetByteArray">
            <summary>Sets the shim of ShellDataEventArgs.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.LineGet">
            <summary>Sets the shim of ShellDataEventArgs.get_Line()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.LineSetString">
            <summary>Sets the shim of ShellDataEventArgs.set_Line(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.AllInstances.DataGet">
            <summary>Sets the shim of ShellDataEventArgs.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.AllInstances.DataSetByteArray">
            <summary>Sets the shim of ShellDataEventArgs.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.AllInstances.LineGet">
            <summary>Sets the shim of ShellDataEventArgs.get_Line()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimShellDataEventArgs.AllInstances.LineSetString">
            <summary>Sets the shim of ShellDataEventArgs.set_Line(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException">
            <summary>Shim type of Renci.SshNet.Common.SshAuthenticationException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.#ctor(Renci.SshNet.Common.SshAuthenticationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.Constructor">
            <summary>Sets the shim of SshAuthenticationException.SshAuthenticationException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SshAuthenticationException.SshAuthenticationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.ConstructorString">
            <summary>Sets the shim of SshAuthenticationException.SshAuthenticationException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.ConstructorStringException">
            <summary>Sets the shim of SshAuthenticationException.SshAuthenticationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshAuthenticationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshConnectionException">
            <summary>Shim type of Renci.SshNet.Common.SshConnectionException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshConnectionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshConnectionException.#ctor(Renci.SshNet.Common.SshConnectionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshConnectionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshConnectionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshConnectionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.Constructor">
            <summary>Sets the shim of SshConnectionException.SshConnectionException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SshConnectionException.SshConnectionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.ConstructorString">
            <summary>Sets the shim of SshConnectionException.SshConnectionException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.ConstructorStringDisconnectReason">
            <summary>Sets the shim of SshConnectionException.SshConnectionException(String message, DisconnectReason disconnectReasonCode)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.ConstructorStringDisconnectReasonException">
            <summary>Sets the shim of SshConnectionException.SshConnectionException(String message, DisconnectReason disconnectReasonCode, Exception inner)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.ConstructorStringException">
            <summary>Sets the shim of SshConnectionException.SshConnectionException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.DisconnectReasonGet">
            <summary>Sets the shim of SshConnectionException.get_DisconnectReason()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.DisconnectReasonSetDisconnectReason">
            <summary>Sets the shim of SshConnectionException.set_DisconnectReason(DisconnectReason value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SshConnectionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshConnectionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.AllInstances.DisconnectReasonGet">
            <summary>Sets the shim of SshConnectionException.get_DisconnectReason()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.AllInstances.DisconnectReasonSetDisconnectReason">
            <summary>Sets the shim of SshConnectionException.set_DisconnectReason(DisconnectReason value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshConnectionException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SshConnectionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshData">
            <summary>Shim type of Renci.SshNet.Common.SshData</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshData.#ctor(Renci.SshNet.Common.SshData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshData.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of SshData.OfType()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.Constructor">
            <summary>Sets the shim of SshData.SshData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.GetBytes">
            <summary>Sets the shim of SshData.GetBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.IsEndOfDataGet">
            <summary>Sets the shim of SshData.get_IsEndOfData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.LoadByteArray">
            <summary>Sets the shim of SshData.Load(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.LoadBytesByteArray">
            <summary>Sets the shim of SshData.LoadBytes(Byte[] bytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadAsciiString">
            <summary>Sets the shim of SshData.ReadAsciiString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadBigInt">
            <summary>Sets the shim of SshData.ReadBigInt()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadBinaryString">
            <summary>Sets the shim of SshData.ReadBinaryString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadBoolean">
            <summary>Sets the shim of SshData.ReadBoolean()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadByte">
            <summary>Sets the shim of SshData.ReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadBytes">
            <summary>Sets the shim of SshData.ReadBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadBytesInt32">
            <summary>Sets the shim of SshData.ReadBytes(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadExtensionPair">
            <summary>Sets the shim of SshData.ReadExtensionPair()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadInt64">
            <summary>Sets the shim of SshData.ReadInt64()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadNamesList">
            <summary>Sets the shim of SshData.ReadNamesList()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadString">
            <summary>Sets the shim of SshData.ReadString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadStringEncoding">
            <summary>Sets the shim of SshData.ReadString(Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadUInt16">
            <summary>Sets the shim of SshData.ReadUInt16()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadUInt32">
            <summary>Sets the shim of SshData.ReadUInt32()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ReadUInt64">
            <summary>Sets the shim of SshData.ReadUInt64()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ResetReader">
            <summary>Sets the shim of SshData.ResetReader()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.StaticConstructor">
            <summary>Sets the shim of SshData.SshData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteAsciiString">
            <summary>Sets the shim of SshData.WriteAscii(String data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteBigInteger">
            <summary>Sets the shim of SshData.Write(BigInteger data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteBinaryStringByteArray">
            <summary>Sets the shim of SshData.WriteBinaryString(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteBoolean">
            <summary>Sets the shim of SshData.Write(Boolean data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteByte">
            <summary>Sets the shim of SshData.Write(Byte data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteIDictionaryOfStringString">
            <summary>Sets the shim of SshData.Write(IDictionary`2&lt;String,String&gt; data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteIEnumerableOfByte">
            <summary>Sets the shim of SshData.Write(IEnumerable`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteInt64">
            <summary>Sets the shim of SshData.Write(Int64 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteString">
            <summary>Sets the shim of SshData.Write(String data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteStringArray">
            <summary>Sets the shim of SshData.Write(String[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteStringEncoding">
            <summary>Sets the shim of SshData.Write(String data, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteUInt16">
            <summary>Sets the shim of SshData.Write(UInt16 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteUInt32">
            <summary>Sets the shim of SshData.Write(UInt32 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.WriteUInt64">
            <summary>Sets the shim of SshData.Write(UInt64 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.ZeroReaderIndexGet">
            <summary>Sets the shim of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Renci.SshNet.Common.SshData,``0})">
            <summary>Sets the shim of SshData.OfType()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.GetBytes">
            <summary>Sets the shim of SshData.GetBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.IsEndOfDataGet">
            <summary>Sets the shim of SshData.get_IsEndOfData()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.LoadByteArray">
            <summary>Sets the shim of SshData.Load(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.LoadBytesByteArray">
            <summary>Sets the shim of SshData.LoadBytes(Byte[] bytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadAsciiString">
            <summary>Sets the shim of SshData.ReadAsciiString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadBigInt">
            <summary>Sets the shim of SshData.ReadBigInt()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadBinaryString">
            <summary>Sets the shim of SshData.ReadBinaryString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadBoolean">
            <summary>Sets the shim of SshData.ReadBoolean()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadByte">
            <summary>Sets the shim of SshData.ReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadBytes">
            <summary>Sets the shim of SshData.ReadBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadBytesInt32">
            <summary>Sets the shim of SshData.ReadBytes(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadExtensionPair">
            <summary>Sets the shim of SshData.ReadExtensionPair()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadInt64">
            <summary>Sets the shim of SshData.ReadInt64()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadNamesList">
            <summary>Sets the shim of SshData.ReadNamesList()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadString">
            <summary>Sets the shim of SshData.ReadString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadStringEncoding">
            <summary>Sets the shim of SshData.ReadString(Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadUInt16">
            <summary>Sets the shim of SshData.ReadUInt16()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadUInt32">
            <summary>Sets the shim of SshData.ReadUInt32()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ReadUInt64">
            <summary>Sets the shim of SshData.ReadUInt64()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ResetReader">
            <summary>Sets the shim of SshData.ResetReader()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteAsciiString">
            <summary>Sets the shim of SshData.WriteAscii(String data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteBigInteger">
            <summary>Sets the shim of SshData.Write(BigInteger data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteBinaryStringByteArray">
            <summary>Sets the shim of SshData.WriteBinaryString(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteBoolean">
            <summary>Sets the shim of SshData.Write(Boolean data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteByte">
            <summary>Sets the shim of SshData.Write(Byte data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteIDictionaryOfStringString">
            <summary>Sets the shim of SshData.Write(IDictionary`2&lt;String,String&gt; data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteIEnumerableOfByte">
            <summary>Sets the shim of SshData.Write(IEnumerable`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteInt64">
            <summary>Sets the shim of SshData.Write(Int64 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteString">
            <summary>Sets the shim of SshData.Write(String data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteStringArray">
            <summary>Sets the shim of SshData.Write(String[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteStringEncoding">
            <summary>Sets the shim of SshData.Write(String data, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteUInt16">
            <summary>Sets the shim of SshData.Write(UInt16 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteUInt32">
            <summary>Sets the shim of SshData.Write(UInt32 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.WriteUInt64">
            <summary>Sets the shim of SshData.Write(UInt64 data)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshData.AllInstances.ZeroReaderIndexGet">
            <summary>Sets the shim of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshException">
            <summary>Shim type of Renci.SshNet.Common.SshException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshException.#ctor(Renci.SshNet.Common.SshException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.Constructor">
            <summary>Sets the shim of SshException.SshException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SshException.SshException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.ConstructorString">
            <summary>Sets the shim of SshException.SshException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.ConstructorStringException">
            <summary>Sets the shim of SshException.SshException(String message, Exception inner)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException">
            <summary>Shim type of Renci.SshNet.Common.SshOperationTimeoutException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.#ctor(Renci.SshNet.Common.SshOperationTimeoutException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.Constructor">
            <summary>Sets the shim of SshOperationTimeoutException.SshOperationTimeoutException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SshOperationTimeoutException.SshOperationTimeoutException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.ConstructorString">
            <summary>Sets the shim of SshOperationTimeoutException.SshOperationTimeoutException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.ConstructorStringException">
            <summary>Sets the shim of SshOperationTimeoutException.SshOperationTimeoutException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshOperationTimeoutException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException">
            <summary>Shim type of Renci.SshNet.Common.SshPassPhraseNullOrEmptyException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.#ctor(Renci.SshNet.Common.SshPassPhraseNullOrEmptyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.Constructor">
            <summary>Sets the shim of SshPassPhraseNullOrEmptyException.SshPassPhraseNullOrEmptyException()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SshPassPhraseNullOrEmptyException.SshPassPhraseNullOrEmptyException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.ConstructorString">
            <summary>Sets the shim of SshPassPhraseNullOrEmptyException.SshPassPhraseNullOrEmptyException(String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.ConstructorStringException">
            <summary>Sets the shim of SshPassPhraseNullOrEmptyException.SshPassPhraseNullOrEmptyException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.ShimSshPassPhraseNullOrEmptyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubASCIIEncoding">
            <summary>Stub type of Renci.SshNet.Common.ASCIIEncoding</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.BodyNameGet">
            <summary>Sets the stub of Encoding.get_BodyName()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.Clone">
            <summary>Sets the stub of Encoding.Clone()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.Clone01">
            <summary>Sets the stub of Encoding.Clone()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.CodePageGet">
            <summary>Sets the stub of Encoding.get_CodePage()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.EncodingNameGet">
            <summary>Sets the stub of Encoding.get_EncodingName()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.Equals(System.Object)">
            <summary>Sets the stub of Encoding.Equals(Object value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.EqualsObject">
            <summary>Sets the stub of Encoding.Equals(Object value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCount(System.String)">
            <summary>Sets the stub of Encoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCount(System.Char[])">
            <summary>Sets the stub of Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
            <summary>Sets the stub of Encoding.GetByteCount(Char* chars, Int32 count)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of ASCIIEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCountCharArray">
            <summary>Sets the stub of Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCountCharArrayInt32Int32">
            <summary>Sets the stub of ASCIIEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetByteCountString">
            <summary>Sets the stub of Encoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
            <summary>Sets the stub of Encoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytes(System.String)">
            <summary>Sets the stub of Encoding.GetBytes(String s)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytes(System.Char[])">
            <summary>Sets the stub of Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of ASCIIEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytesCharArray">
            <summary>Sets the stub of Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytesCharArrayInt32Int32">
            <summary>Sets the stub of Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of ASCIIEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytesString">
            <summary>Sets the stub of Encoding.GetBytes(String s)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetBytesStringInt32Int32ByteArrayInt32">
            <summary>Sets the stub of Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharCount(System.Byte[])">
            <summary>Sets the stub of Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
            <summary>Sets the stub of Encoding.GetCharCount(Byte* bytes, Int32 count)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of ASCIIEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharCountByteArray">
            <summary>Sets the stub of Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharCountByteArrayInt32Int32">
            <summary>Sets the stub of ASCIIEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
            <summary>Sets the stub of Encoding.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetChars(System.Byte[])">
            <summary>Sets the stub of Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Sets the stub of ASCIIEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharsByteArray">
            <summary>Sets the stub of Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharsByteArrayInt32Int32">
            <summary>Sets the stub of Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Sets the stub of ASCIIEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetDecoder">
            <summary>Sets the stub of Encoding.GetDecoder()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetDecoder01">
            <summary>Sets the stub of Encoding.GetDecoder()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetEncoder">
            <summary>Sets the stub of Encoding.GetEncoder()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetEncoder01">
            <summary>Sets the stub of Encoding.GetEncoder()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetHashCode">
            <summary>Sets the stub of Encoding.GetHashCode()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetHashCode01">
            <summary>Sets the stub of Encoding.GetHashCode()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetMaxByteCount(System.Int32)">
            <summary>Sets the stub of ASCIIEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetMaxByteCountInt32">
            <summary>Sets the stub of ASCIIEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetMaxCharCount(System.Int32)">
            <summary>Sets the stub of ASCIIEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetMaxCharCountInt32">
            <summary>Sets the stub of ASCIIEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetPreamble">
            <summary>Sets the stub of Encoding.GetPreamble()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetPreamble01">
            <summary>Sets the stub of Encoding.GetPreamble()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetString(System.Byte[])">
            <summary>Sets the stub of Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetStringByteArray">
            <summary>Sets the stub of Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.GetStringByteArrayInt32Int32">
            <summary>Sets the stub of Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.HeaderNameGet">
            <summary>Sets the stub of Encoding.get_HeaderName()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.InitializeStub">
            <summary>Initializes a new instance of type StubASCIIEncoding</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
            <summary>Sets the stub of Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsAlwaysNormalizedNormalizationForm">
            <summary>Sets the stub of Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsBrowserDisplayGet">
            <summary>Sets the stub of Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsBrowserSaveGet">
            <summary>Sets the stub of Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsMailNewsDisplayGet">
            <summary>Sets the stub of Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsMailNewsSaveGet">
            <summary>Sets the stub of Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsSingleByteGet">
            <summary>Sets the stub of Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.WebNameGet">
            <summary>Sets the stub of Encoding.get_WebName()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubASCIIEncoding.WindowsCodePageGet">
            <summary>Sets the stub of Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.BodyName">
            <summary>Sets the stub of Encoding.get_BodyName()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.CodePage">
            <summary>Sets the stub of Encoding.get_CodePage()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.EncodingName">
            <summary>Sets the stub of Encoding.get_EncodingName()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.HeaderName">
            <summary>Sets the stub of Encoding.get_HeaderName()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsBrowserDisplay">
            <summary>Sets the stub of Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsBrowserSave">
            <summary>Sets the stub of Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsMailNewsDisplay">
            <summary>Sets the stub of Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsMailNewsSave">
            <summary>Sets the stub of Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.IsSingleByte">
            <summary>Sets the stub of Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.WebName">
            <summary>Sets the stub of Encoding.get_WebName()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubASCIIEncoding.WindowsCodePage">
            <summary>Sets the stub of Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAsyncResult">
            <summary>Stub type of Renci.SshNet.Common.AsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAsyncResult.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncResult</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAsyncResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAsyncResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAsyncResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAsyncResult`1">
            <summary>Stub type of Renci.SshNet.Common.AsyncResult`1</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAsyncResult`1.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncResult</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAsyncResult`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAsyncResult`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAsyncResult`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAuthenticationBannerEventArgs">
            <summary>Stub type of Renci.SshNet.Common.AuthenticationBannerEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationBannerEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationBannerEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationBannerEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationBannerEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationBannerEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAuthenticationEventArgs">
            <summary>Stub type of Renci.SshNet.Common.AuthenticationEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAuthenticationPasswordChangeEventArgs">
            <summary>Stub type of Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationPasswordChangeEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationPasswordChangeEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationPasswordChangeEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPasswordChangeEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPasswordChangeEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPasswordChangeEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAuthenticationPrompt">
            <summary>Stub type of Renci.SshNet.Common.AuthenticationPrompt</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationPrompt.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationPrompt</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPrompt.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPrompt.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPrompt.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubAuthenticationPromptEventArgs">
            <summary>Stub type of Renci.SshNet.Common.AuthenticationPromptEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Renci.SshNet.Common.AuthenticationPrompt})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubAuthenticationPromptEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationPromptEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPromptEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPromptEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubAuthenticationPromptEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubDerData">
            <summary>Stub type of Renci.SshNet.Common.DerData</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubDerData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubDerData.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubDerData.InitializeStub">
            <summary>Initializes a new instance of type StubDerData</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubDerData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubDerData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubDerData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubExceptionEventArgs">
            <summary>Stub type of Renci.SshNet.Common.ExceptionEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubExceptionEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubExceptionEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubExceptionEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubExceptionEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubExceptionEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubHostKeyEventArgs">
            <summary>Stub type of Renci.SshNet.Common.HostKeyEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubHostKeyEventArgs.#ctor(Renci.SshNet.Security.KeyHostAlgorithm)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubHostKeyEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubHostKeyEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubHostKeyEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubHostKeyEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubHostKeyEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubNetConfServerException">
            <summary>Stub type of Renci.SshNet.Common.NetConfServerException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNetConfServerException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNetConfServerException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.InitializeStub">
            <summary>Initializes a new instance of type StubNetConfServerException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubNetConfServerException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubNetConfServerException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubNetConfServerException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubPipeStream">
            <summary>Stub type of Renci.SshNet.Common.PipeStream</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubPipeStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubPipeStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubPipeStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.CanReadGet">
            <summary>Sets the stub of PipeStream.get_CanRead()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.CanSeekGet">
            <summary>Sets the stub of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.CanWriteGet">
            <summary>Sets the stub of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.Dispose(System.Boolean)">
            <summary>Sets the stub of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.DisposeBoolean">
            <summary>Sets the stub of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.Flush">
            <summary>Sets the stub of PipeStream.Flush()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.Flush01">
            <summary>Sets the stub of PipeStream.Flush()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.InitializeStub">
            <summary>Initializes a new instance of type StubPipeStream</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.LengthGet">
            <summary>Sets the stub of PipeStream.get_Length()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.PositionGet">
            <summary>Sets the stub of PipeStream.get_Position()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.PositionSetInt64">
            <summary>Sets the stub of PipeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of PipeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of PipeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.SetLength(System.Int64)">
            <summary>Sets the stub of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.SetLengthInt64">
            <summary>Sets the stub of PipeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubPipeStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubPipeStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.CanRead">
            <summary>Sets the stub of PipeStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.CanSeek">
            <summary>Sets the stub of PipeStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.CanWrite">
            <summary>Sets the stub of PipeStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.Length">
            <summary>Sets the stub of PipeStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.Position">
            <summary>Sets the stub of PipeStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubPipeStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubProxyException">
            <summary>Stub type of Renci.SshNet.Common.ProxyException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubProxyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubProxyException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.InitializeStub">
            <summary>Initializes a new instance of type StubProxyException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubProxyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubProxyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubProxyException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubScpDownloadEventArgs">
            <summary>Stub type of Renci.SshNet.Common.ScpDownloadEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpDownloadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpDownloadEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubScpDownloadEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpDownloadEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpDownloadEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpDownloadEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubScpException">
            <summary>Stub type of Renci.SshNet.Common.ScpException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubScpException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubScpException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.InitializeStub">
            <summary>Initializes a new instance of type StubScpException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubScpException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubScpUploadEventArgs">
            <summary>Stub type of Renci.SshNet.Common.ScpUploadEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpUploadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubScpUploadEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubScpUploadEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpUploadEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpUploadEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubScpUploadEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSemaphoreLight">
            <summary>Stub type of Renci.SshNet.Common.SemaphoreLight</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSemaphoreLight.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSemaphoreLight.InitializeStub">
            <summary>Initializes a new instance of type StubSemaphoreLight</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSemaphoreLight.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSemaphoreLight.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSemaphoreLight.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException">
            <summary>Stub type of Renci.SshNet.Common.SftpPathNotFoundException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSftpPathNotFoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSftpPathNotFoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type StubSftpPathNotFoundException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPathNotFoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException">
            <summary>Stub type of Renci.SshNet.Common.SftpPermissionDeniedException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSftpPermissionDeniedException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSftpPermissionDeniedException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.InitializeStub">
            <summary>Initializes a new instance of type StubSftpPermissionDeniedException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSftpPermissionDeniedException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubShellDataEventArgs">
            <summary>Stub type of Renci.SshNet.Common.ShellDataEventArgs</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubShellDataEventArgs.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubShellDataEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubShellDataEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubShellDataEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubShellDataEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubShellDataEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubShellDataEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSshAuthenticationException">
            <summary>Stub type of Renci.SshNet.Common.SshAuthenticationException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSshAuthenticationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSshAuthenticationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.InitializeStub">
            <summary>Initializes a new instance of type StubSshAuthenticationException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshAuthenticationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSshConnectionException">
            <summary>Stub type of Renci.SshNet.Common.SshConnectionException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSshConnectionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSshConnectionException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshConnectionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshConnectionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.InitializeStub">
            <summary>Initializes a new instance of type StubSshConnectionException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshConnectionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshConnectionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshConnectionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSshData">
            <summary>Stub type of Renci.SshNet.Common.SshData</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshData.GetBytes">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshData.GetBytes01">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshData.InitializeStub">
            <summary>Initializes a new instance of type StubSshData</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshData.LoadData">
            <summary>Sets the stub of SshData.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshData.LoadData01">
            <summary>Sets the stub of SshData.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshData.SaveData">
            <summary>Sets the stub of SshData.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshData.SaveData01">
            <summary>Sets the stub of SshData.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshData.ZeroReaderIndexGet">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshData.ZeroReaderIndex">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSshException">
            <summary>Stub type of Renci.SshNet.Common.SshException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSshException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSshException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.InitializeStub">
            <summary>Initializes a new instance of type StubSshException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException">
            <summary>Stub type of Renci.SshNet.Common.SshOperationTimeoutException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSshOperationTimeoutException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSshOperationTimeoutException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.InitializeStub">
            <summary>Initializes a new instance of type StubSshOperationTimeoutException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshOperationTimeoutException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException">
            <summary>Stub type of Renci.SshNet.Common.SshPassPhraseNullOrEmptyException</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSshPassPhraseNullOrEmptyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSshPassPhraseNullOrEmptyException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of SshException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.InitializeStub">
            <summary>Initializes a new instance of type StubSshPassPhraseNullOrEmptyException</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Renci.SshNet.Common.Fakes.StubSshPassPhraseNullOrEmptyException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.ShimCompressor">
            <summary>Shim type of Renci.SshNet.Compression.Compressor</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimCompressor.#ctor(Renci.SshNet.Compression.Compressor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimCompressor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimCompressor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimCompressor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.CompressByteArray">
            <summary>Sets the shim of Compressor.Compress(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.Constructor">
            <summary>Sets the shim of Compressor.Compressor()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.DecompressByteArray">
            <summary>Sets the shim of Compressor.Decompress(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.Dispose">
            <summary>Sets the shim of Compressor.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.DisposeBoolean">
            <summary>Sets the shim of Compressor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.InitSession">
            <summary>Sets the shim of Compressor.Init(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.IsActiveGet">
            <summary>Sets the shim of Compressor.get_IsActive()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.IsActiveSetBoolean">
            <summary>Sets the shim of Compressor.set_IsActive(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.SessionGet">
            <summary>Sets the shim of Compressor.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.SessionSetSession">
            <summary>Sets the shim of Compressor.set_Session(Session value)</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.CompressByteArray">
            <summary>Sets the shim of Compressor.Compress(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.DecompressByteArray">
            <summary>Sets the shim of Compressor.Decompress(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.Dispose">
            <summary>Sets the shim of Compressor.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Compressor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.InitSession">
            <summary>Sets the shim of Compressor.Init(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.IsActiveGet">
            <summary>Sets the shim of Compressor.get_IsActive()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.IsActiveSetBoolean">
            <summary>Sets the shim of Compressor.set_IsActive(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.SessionGet">
            <summary>Sets the shim of Compressor.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimCompressor.AllInstances.SessionSetSession">
            <summary>Sets the shim of Compressor.set_Session(Session value)</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh">
            <summary>Shim type of Renci.SshNet.Compression.ZlibOpenSsh</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.#ctor(Renci.SshNet.Compression.ZlibOpenSsh)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.Constructor">
            <summary>Sets the shim of ZlibOpenSsh.ZlibOpenSsh()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.InitSession">
            <summary>Sets the shim of ZlibOpenSsh.Init(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.NameGet">
            <summary>Sets the shim of ZlibOpenSsh.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of ZlibOpenSsh.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.AllInstances.InitSession">
            <summary>Sets the shim of ZlibOpenSsh.Init(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.AllInstances.NameGet">
            <summary>Sets the shim of ZlibOpenSsh.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibOpenSsh.AllInstances.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of ZlibOpenSsh.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.ShimZlibStream">
            <summary>Shim type of Renci.SshNet.Compression.ZlibStream</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibStream.#ctor(Renci.SshNet.Compression.ZlibStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.ShimZlibStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibStream.ConstructorStreamCompressionMode">
            <summary>Sets the shim of ZlibStream.ZlibStream(Stream stream, CompressionMode mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of ZlibStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.ShimZlibStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.ShimZlibStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of ZlibStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.StubCompressor">
            <summary>Stub type of Renci.SshNet.Compression.Compressor</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubCompressor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubCompressor.Compress(System.Byte[])">
            <summary>Sets the stub of Compressor.Compress(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubCompressor.CompressByteArray">
            <summary>Sets the stub of Compressor.Compress(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubCompressor.Decompress(System.Byte[])">
            <summary>Sets the stub of Compressor.Decompress(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubCompressor.DecompressByteArray">
            <summary>Sets the stub of Compressor.Decompress(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubCompressor.Dispose(System.Boolean)">
            <summary>Sets the stub of Compressor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubCompressor.DisposeBoolean">
            <summary>Sets the stub of Compressor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubCompressor.Init(Renci.SshNet.Session)">
            <summary>Sets the stub of Compressor.Init(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubCompressor.InitSession">
            <summary>Sets the stub of Compressor.Init(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubCompressor.InitializeStub">
            <summary>Initializes a new instance of type StubCompressor</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubCompressor.NameGet">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubCompressor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubCompressor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubCompressor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubCompressor.Name">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh">
            <summary>Stub type of Renci.SshNet.Compression.ZlibOpenSsh</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.Compress(System.Byte[])">
            <summary>Sets the stub of Compressor.Compress(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.CompressByteArray">
            <summary>Sets the stub of Compressor.Compress(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.Decompress(System.Byte[])">
            <summary>Sets the stub of Compressor.Decompress(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.DecompressByteArray">
            <summary>Sets the stub of Compressor.Decompress(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.Dispose(System.Boolean)">
            <summary>Sets the stub of Compressor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.DisposeBoolean">
            <summary>Sets the stub of Compressor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.Init(Renci.SshNet.Session)">
            <summary>Sets the stub of ZlibOpenSsh.Init(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.InitSession">
            <summary>Sets the stub of ZlibOpenSsh.Init(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.InitializeStub">
            <summary>Initializes a new instance of type StubZlibOpenSsh</summary>
        </member>
        <member name="F:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.NameGet">
            <summary>Sets the stub of ZlibOpenSsh.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibOpenSsh.Name">
            <summary>Sets the stub of ZlibOpenSsh.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Fakes.StubZlibStream">
            <summary>Stub type of Renci.SshNet.Compression.ZlibStream</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibStream.#ctor(System.IO.Stream,Renci.SshNet.Compression.CompressionMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Fakes.StubZlibStream.InitializeStub">
            <summary>Initializes a new instance of type StubZlibStream</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Compression.Fakes.StubZlibStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimAuthenticationMethod">
            <summary>Shim type of Renci.SshNet.AuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimAuthenticationMethod.#ctor(Renci.SshNet.AuthenticationMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimAuthenticationMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimAuthenticationMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllowedAuthenticationsGet">
            <summary>Sets the shim of AuthenticationMethod.get_AllowedAuthentications()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllowedAuthenticationsSetIEnumerableOfString">
            <summary>Sets the shim of AuthenticationMethod.set_AllowedAuthentications(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.ConstructorString">
            <summary>Sets the shim of AuthenticationMethod.AuthenticationMethod(String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.ErrorMessageGet">
            <summary>Sets the shim of AuthenticationMethod.get_ErrorMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.ErrorMessageSetString">
            <summary>Sets the shim of AuthenticationMethod.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.UsernameGet">
            <summary>Sets the shim of AuthenticationMethod.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.UsernameSetString">
            <summary>Sets the shim of AuthenticationMethod.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances.AllowedAuthenticationsGet">
            <summary>Sets the shim of AuthenticationMethod.get_AllowedAuthentications()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances.AllowedAuthenticationsSetIEnumerableOfString">
            <summary>Sets the shim of AuthenticationMethod.set_AllowedAuthentications(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of AuthenticationMethod.get_ErrorMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances.ErrorMessageSetString">
            <summary>Sets the shim of AuthenticationMethod.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances.UsernameGet">
            <summary>Sets the shim of AuthenticationMethod.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimAuthenticationMethod.AllInstances.UsernameSetString">
            <summary>Sets the shim of AuthenticationMethod.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimBaseClient">
            <summary>Shim type of Renci.SshNet.BaseClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimBaseClient.#ctor(Renci.SshNet.BaseClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimBaseClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimBaseClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimBaseClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.Connect">
            <summary>Sets the shim of BaseClient.Connect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.ConnectionInfoGet">
            <summary>Sets the shim of BaseClient.get_ConnectionInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.ConnectionInfoSetConnectionInfo">
            <summary>Sets the shim of BaseClient.set_ConnectionInfo(ConnectionInfo value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.ConstructorConnectionInfo">
            <summary>Sets the shim of BaseClient.BaseClient(ConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.Disconnect">
            <summary>Sets the shim of BaseClient.Disconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.Dispose">
            <summary>Sets the shim of BaseClient.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.DisposeBoolean">
            <summary>Sets the shim of BaseClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of BaseClient.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of BaseClient.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.HostKeyReceivedAddEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of BaseClient.add_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.HostKeyReceivedRemoveEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of BaseClient.remove_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.IsConnectedGet">
            <summary>Sets the shim of BaseClient.get_IsConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.KeepAliveIntervalGet">
            <summary>Sets the shim of BaseClient.get_KeepAliveInterval()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.KeepAliveIntervalSetTimeSpan">
            <summary>Sets the shim of BaseClient.set_KeepAliveInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.OnConnected">
            <summary>Sets the shim of BaseClient.OnConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.OnConnecting">
            <summary>Sets the shim of BaseClient.OnConnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.OnDisconnected">
            <summary>Sets the shim of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.OnDisconnecting">
            <summary>Sets the shim of BaseClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.SendKeepAlive">
            <summary>Sets the shim of BaseClient.SendKeepAlive()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.SessionGet">
            <summary>Sets the shim of BaseClient.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.SessionSetSession">
            <summary>Sets the shim of BaseClient.set_Session(Session value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of BaseClient.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.Session_HostKeyReceivedObjectHostKeyEventArgs">
            <summary>Sets the shim of BaseClient.Session_HostKeyReceived(Object sender, HostKeyEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient._set_KeepAliveIntervalb__0Object">
            <summary>Sets the shim of BaseClient.&lt;set_KeepAliveInterval&gt;b__0(Object state)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimBaseClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.Connect">
            <summary>Sets the shim of BaseClient.Connect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.ConnectionInfoGet">
            <summary>Sets the shim of BaseClient.get_ConnectionInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.ConnectionInfoSetConnectionInfo">
            <summary>Sets the shim of BaseClient.set_ConnectionInfo(ConnectionInfo value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.Disconnect">
            <summary>Sets the shim of BaseClient.Disconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.Dispose">
            <summary>Sets the shim of BaseClient.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BaseClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of BaseClient.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of BaseClient.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.HostKeyReceivedAddEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of BaseClient.add_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.HostKeyReceivedRemoveEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of BaseClient.remove_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.IsConnectedGet">
            <summary>Sets the shim of BaseClient.get_IsConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.KeepAliveIntervalGet">
            <summary>Sets the shim of BaseClient.get_KeepAliveInterval()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.KeepAliveIntervalSetTimeSpan">
            <summary>Sets the shim of BaseClient.set_KeepAliveInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.OnConnected">
            <summary>Sets the shim of BaseClient.OnConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.OnConnecting">
            <summary>Sets the shim of BaseClient.OnConnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.OnDisconnected">
            <summary>Sets the shim of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.OnDisconnecting">
            <summary>Sets the shim of BaseClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.SendKeepAlive">
            <summary>Sets the shim of BaseClient.SendKeepAlive()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.SessionGet">
            <summary>Sets the shim of BaseClient.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.SessionSetSession">
            <summary>Sets the shim of BaseClient.set_Session(Session value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of BaseClient.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances.Session_HostKeyReceivedObjectHostKeyEventArgs">
            <summary>Sets the shim of BaseClient.Session_HostKeyReceived(Object sender, HostKeyEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimBaseClient.AllInstances._set_KeepAliveIntervalb__0Object">
            <summary>Sets the shim of BaseClient.&lt;set_KeepAliveInterval&gt;b__0(Object state)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimCipherInfo">
            <summary>Shim type of Renci.SshNet.CipherInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCipherInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCipherInfo.#ctor(Renci.SshNet.CipherInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCipherInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCipherInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.CipherGet">
            <summary>Sets the shim of CipherInfo.get_Cipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.CipherSetFuncOfByteArrayByteArrayCipher">
            <summary>Sets the shim of CipherInfo.set_Cipher(Func`3&lt;Byte[],Byte[],Cipher&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.ConstructorInt32FuncOfByteArrayByteArrayCipher">
            <summary>Sets the shim of CipherInfo.CipherInfo(Int32 keySize, Func`3&lt;Byte[],Byte[],Cipher&gt; cipher)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.KeySizeGet">
            <summary>Sets the shim of CipherInfo.get_KeySize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.KeySizeSetInt32">
            <summary>Sets the shim of CipherInfo.set_KeySize(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimCipherInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.AllInstances.CipherGet">
            <summary>Sets the shim of CipherInfo.get_Cipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.AllInstances.CipherSetFuncOfByteArrayByteArrayCipher">
            <summary>Sets the shim of CipherInfo.set_Cipher(Func`3&lt;Byte[],Byte[],Cipher&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.AllInstances.KeySizeGet">
            <summary>Sets the shim of CipherInfo.get_KeySize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCipherInfo.AllInstances.KeySizeSetInt32">
            <summary>Sets the shim of CipherInfo.set_KeySize(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimCommandAsyncResult">
            <summary>Shim type of Renci.SshNet.CommandAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCommandAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCommandAsyncResult.#ctor(Renci.SshNet.CommandAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCommandAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCommandAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimCommandAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AsyncStateGet">
            <summary>Sets the shim of CommandAsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AsyncStateSetObject">
            <summary>Sets the shim of CommandAsyncResult.set_AsyncState(Object value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AsyncWaitHandleGet">
            <summary>Sets the shim of CommandAsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AsyncWaitHandleSetWaitHandle">
            <summary>Sets the shim of CommandAsyncResult.set_AsyncWaitHandle(WaitHandle value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.BytesReceivedGet">
            <summary>Sets the shim of CommandAsyncResult.get_BytesReceived()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.BytesReceivedSetInt32">
            <summary>Sets the shim of CommandAsyncResult.set_BytesReceived(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.BytesSentGet">
            <summary>Sets the shim of CommandAsyncResult.get_BytesSent()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.BytesSentSetInt32">
            <summary>Sets the shim of CommandAsyncResult.set_BytesSent(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.CompletedSynchronouslyGet">
            <summary>Sets the shim of CommandAsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.CompletedSynchronouslySetBoolean">
            <summary>Sets the shim of CommandAsyncResult.set_CompletedSynchronously(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.ConstructorSshCommand">
            <summary>Sets the shim of CommandAsyncResult.CommandAsyncResult(SshCommand command)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.IsCompletedGet">
            <summary>Sets the shim of CommandAsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.IsCompletedSetBoolean">
            <summary>Sets the shim of CommandAsyncResult.set_IsCompleted(Boolean value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.AsyncStateGet">
            <summary>Sets the shim of CommandAsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.AsyncStateSetObject">
            <summary>Sets the shim of CommandAsyncResult.set_AsyncState(Object value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.AsyncWaitHandleGet">
            <summary>Sets the shim of CommandAsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.AsyncWaitHandleSetWaitHandle">
            <summary>Sets the shim of CommandAsyncResult.set_AsyncWaitHandle(WaitHandle value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.BytesReceivedGet">
            <summary>Sets the shim of CommandAsyncResult.get_BytesReceived()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.BytesReceivedSetInt32">
            <summary>Sets the shim of CommandAsyncResult.set_BytesReceived(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.BytesSentGet">
            <summary>Sets the shim of CommandAsyncResult.get_BytesSent()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.BytesSentSetInt32">
            <summary>Sets the shim of CommandAsyncResult.set_BytesSent(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.CompletedSynchronouslyGet">
            <summary>Sets the shim of CommandAsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.CompletedSynchronouslySetBoolean">
            <summary>Sets the shim of CommandAsyncResult.set_CompletedSynchronously(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.IsCompletedGet">
            <summary>Sets the shim of CommandAsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimCommandAsyncResult.AllInstances.IsCompletedSetBoolean">
            <summary>Sets the shim of CommandAsyncResult.set_IsCompleted(Boolean value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimConnectionInfo">
            <summary>Shim type of Renci.SshNet.ConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimConnectionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimConnectionInfo.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimConnectionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimConnectionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AuthenticateSession">
            <summary>Sets the shim of ConnectionInfo.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AuthenticationBannerAddEventHandlerOfAuthenticationBannerEventArgs">
            <summary>Sets the shim of ConnectionInfo.add_AuthenticationBanner(EventHandler`1&lt;AuthenticationBannerEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AuthenticationBannerRemoveEventHandlerOfAuthenticationBannerEventArgs">
            <summary>Sets the shim of ConnectionInfo.remove_AuthenticationBanner(EventHandler`1&lt;AuthenticationBannerEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AuthenticationMethodsGet">
            <summary>Sets the shim of ConnectionInfo.get_AuthenticationMethods()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AuthenticationMethodsSetIEnumerableOfAuthenticationMethod">
            <summary>Sets the shim of ConnectionInfo.set_AuthenticationMethods(IEnumerable`1&lt;AuthenticationMethod&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ChannelRequestsGet">
            <summary>Sets the shim of ConnectionInfo.get_ChannelRequests()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ChannelRequestsSetIDictionaryOfStringRequestInfo">
            <summary>Sets the shim of ConnectionInfo.set_ChannelRequests(IDictionary`2&lt;String,RequestInfo&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ClientVersionGet">
            <summary>Sets the shim of ConnectionInfo.get_ClientVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ClientVersionSetString">
            <summary>Sets the shim of ConnectionInfo.set_ClientVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CompressionAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_CompressionAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CompressionAlgorithmsSetIDictionaryOfStringType">
            <summary>Sets the shim of ConnectionInfo.set_CompressionAlgorithms(IDictionary`2&lt;String,Type&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ConstructorStringInt32StringAuthenticationMethodArray">
            <summary>Sets the shim of ConnectionInfo.ConnectionInfo(String host, Int32 port, String username, AuthenticationMethod[] authenticationMethods)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32StringStringAuthenticationMethodArray">
            <summary>Sets the shim of ConnectionInfo.ConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword, AuthenticationMethod[] authenticationMethods)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ConstructorStringStringAuthenticationMethodArray">
            <summary>Sets the shim of ConnectionInfo.ConnectionInfo(String host, String username, AuthenticationMethod[] authenticationMethods)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentClientCompressionAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentClientCompressionAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentClientCompressionAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentClientCompressionAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentClientEncryptionGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentClientEncryption()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentClientEncryptionSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentClientEncryption(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentClientHmacAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentClientHmacAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentClientHmacAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentClientHmacAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentHostKeyAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentHostKeyAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentHostKeyAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentHostKeyAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentKeyExchangeAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentKeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentKeyExchangeAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentKeyExchangeAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentServerCompressionAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentServerCompressionAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentServerCompressionAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentServerCompressionAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentServerEncryptionGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentServerEncryption()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentServerEncryptionSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentServerEncryption(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentServerHmacAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentServerHmacAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.CurrentServerHmacAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentServerHmacAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.EncodingGet">
            <summary>Sets the shim of ConnectionInfo.get_Encoding()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.EncodingSetEncoding">
            <summary>Sets the shim of ConnectionInfo.set_Encoding(Encoding value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.EncryptionsGet">
            <summary>Sets the shim of ConnectionInfo.get_Encryptions()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.EncryptionsSetIDictionaryOfStringCipherInfo">
            <summary>Sets the shim of ConnectionInfo.set_Encryptions(IDictionary`2&lt;String,CipherInfo&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.HmacAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_HmacAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.HmacAlgorithmsSetIDictionaryOfStringHashInfo">
            <summary>Sets the shim of ConnectionInfo.set_HmacAlgorithms(IDictionary`2&lt;String,HashInfo&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.HostGet">
            <summary>Sets the shim of ConnectionInfo.get_Host()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.HostKeyAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_HostKeyAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.HostKeyAlgorithmsSetIDictionaryOfStringFuncOfByteArrayKeyHostAlgorithm">
            <summary>Sets the shim of ConnectionInfo.set_HostKeyAlgorithms(IDictionary`2&lt;String,Func`2&lt;Byte[],KeyHostAlgorithm&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.HostSetString">
            <summary>Sets the shim of ConnectionInfo.set_Host(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.IsAuthenticatedGet">
            <summary>Sets the shim of ConnectionInfo.get_IsAuthenticated()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.IsAuthenticatedSetBoolean">
            <summary>Sets the shim of ConnectionInfo.set_IsAuthenticated(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.KeyExchangeAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_KeyExchangeAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.KeyExchangeAlgorithmsSetIDictionaryOfStringType">
            <summary>Sets the shim of ConnectionInfo.set_KeyExchangeAlgorithms(IDictionary`2&lt;String,Type&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.MaxSessionsGet">
            <summary>Sets the shim of ConnectionInfo.get_MaxSessions()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.MaxSessionsSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_MaxSessions(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.PortGet">
            <summary>Sets the shim of ConnectionInfo.get_Port()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.PortSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyHostGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyHostSetString">
            <summary>Sets the shim of ConnectionInfo.set_ProxyHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyPasswordGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyPassword()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyPasswordSetString">
            <summary>Sets the shim of ConnectionInfo.set_ProxyPassword(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyPortGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyPortSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_ProxyPort(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyTypeGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyType()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyTypeSetProxyTypes">
            <summary>Sets the shim of ConnectionInfo.set_ProxyType(ProxyTypes value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyUsernameGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyUsername()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ProxyUsernameSetString">
            <summary>Sets the shim of ConnectionInfo.set_ProxyUsername(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.RetryAttemptsGet">
            <summary>Sets the shim of ConnectionInfo.get_RetryAttempts()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.RetryAttemptsSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_RetryAttempts(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ServerVersionGet">
            <summary>Sets the shim of ConnectionInfo.get_ServerVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.ServerVersionSetString">
            <summary>Sets the shim of ConnectionInfo.set_ServerVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.Session_UserAuthenticationBannerReceivedObjectMessageEventArgsOfBannerMessage">
            <summary>Sets the shim of ConnectionInfo.Session_UserAuthenticationBannerReceived(Object sender, MessageEventArgs`1&lt;BannerMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.StaticConstructor">
            <summary>Sets the shim of ConnectionInfo.ConnectionInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.TimeoutGet">
            <summary>Sets the shim of ConnectionInfo.get_Timeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.TimeoutSetTimeSpan">
            <summary>Sets the shim of ConnectionInfo.set_Timeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.UsernameGet">
            <summary>Sets the shim of ConnectionInfo.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.UsernameSetString">
            <summary>Sets the shim of ConnectionInfo.set_Username(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__10ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__10(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__11ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__11(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__12ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__12(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__13ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__13(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__14ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__14(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__15ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__15(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__16ByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__16(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__17ByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__17(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__18ByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__18(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__19ByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__19(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__1aByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__1a(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__1bByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__1b(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__1cByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__1c(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__1dByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__1d(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__1eByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__1e(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__1fByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__1f(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__6ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__6(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__7ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__7(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__8ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__8(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__9ByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__9(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__aByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__a(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__bByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__b(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__cByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__c(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__dByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__d(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__eByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__e(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo._ctorb__fByteArrayByteArray">
            <summary>Sets the shim of ConnectionInfo.&lt;.ctor&gt;b__f(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.AuthenticateSession">
            <summary>Sets the shim of ConnectionInfo.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.AuthenticationBannerAddEventHandlerOfAuthenticationBannerEventArgs">
            <summary>Sets the shim of ConnectionInfo.add_AuthenticationBanner(EventHandler`1&lt;AuthenticationBannerEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.AuthenticationBannerRemoveEventHandlerOfAuthenticationBannerEventArgs">
            <summary>Sets the shim of ConnectionInfo.remove_AuthenticationBanner(EventHandler`1&lt;AuthenticationBannerEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.AuthenticationMethodsGet">
            <summary>Sets the shim of ConnectionInfo.get_AuthenticationMethods()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.AuthenticationMethodsSetIEnumerableOfAuthenticationMethod">
            <summary>Sets the shim of ConnectionInfo.set_AuthenticationMethods(IEnumerable`1&lt;AuthenticationMethod&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ChannelRequestsGet">
            <summary>Sets the shim of ConnectionInfo.get_ChannelRequests()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ChannelRequestsSetIDictionaryOfStringRequestInfo">
            <summary>Sets the shim of ConnectionInfo.set_ChannelRequests(IDictionary`2&lt;String,RequestInfo&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ClientVersionGet">
            <summary>Sets the shim of ConnectionInfo.get_ClientVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ClientVersionSetString">
            <summary>Sets the shim of ConnectionInfo.set_ClientVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CompressionAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_CompressionAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CompressionAlgorithmsSetIDictionaryOfStringType">
            <summary>Sets the shim of ConnectionInfo.set_CompressionAlgorithms(IDictionary`2&lt;String,Type&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentClientCompressionAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentClientCompressionAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentClientCompressionAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentClientCompressionAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentClientEncryptionGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentClientEncryption()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentClientEncryptionSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentClientEncryption(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentClientHmacAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentClientHmacAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentClientHmacAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentClientHmacAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentHostKeyAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentHostKeyAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentHostKeyAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentHostKeyAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentKeyExchangeAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentKeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentKeyExchangeAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentKeyExchangeAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentServerCompressionAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentServerCompressionAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentServerCompressionAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentServerCompressionAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentServerEncryptionGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentServerEncryption()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentServerEncryptionSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentServerEncryption(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentServerHmacAlgorithmGet">
            <summary>Sets the shim of ConnectionInfo.get_CurrentServerHmacAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.CurrentServerHmacAlgorithmSetString">
            <summary>Sets the shim of ConnectionInfo.set_CurrentServerHmacAlgorithm(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.EncodingGet">
            <summary>Sets the shim of ConnectionInfo.get_Encoding()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.EncodingSetEncoding">
            <summary>Sets the shim of ConnectionInfo.set_Encoding(Encoding value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.EncryptionsGet">
            <summary>Sets the shim of ConnectionInfo.get_Encryptions()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.EncryptionsSetIDictionaryOfStringCipherInfo">
            <summary>Sets the shim of ConnectionInfo.set_Encryptions(IDictionary`2&lt;String,CipherInfo&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.HmacAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_HmacAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.HmacAlgorithmsSetIDictionaryOfStringHashInfo">
            <summary>Sets the shim of ConnectionInfo.set_HmacAlgorithms(IDictionary`2&lt;String,HashInfo&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.HostGet">
            <summary>Sets the shim of ConnectionInfo.get_Host()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.HostKeyAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_HostKeyAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.HostKeyAlgorithmsSetIDictionaryOfStringFuncOfByteArrayKeyHostAlgorithm">
            <summary>Sets the shim of ConnectionInfo.set_HostKeyAlgorithms(IDictionary`2&lt;String,Func`2&lt;Byte[],KeyHostAlgorithm&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.HostSetString">
            <summary>Sets the shim of ConnectionInfo.set_Host(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of ConnectionInfo.get_IsAuthenticated()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.IsAuthenticatedSetBoolean">
            <summary>Sets the shim of ConnectionInfo.set_IsAuthenticated(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.KeyExchangeAlgorithmsGet">
            <summary>Sets the shim of ConnectionInfo.get_KeyExchangeAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.KeyExchangeAlgorithmsSetIDictionaryOfStringType">
            <summary>Sets the shim of ConnectionInfo.set_KeyExchangeAlgorithms(IDictionary`2&lt;String,Type&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.MaxSessionsGet">
            <summary>Sets the shim of ConnectionInfo.get_MaxSessions()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.MaxSessionsSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_MaxSessions(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.PortGet">
            <summary>Sets the shim of ConnectionInfo.get_Port()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.PortSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyHostGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyHostSetString">
            <summary>Sets the shim of ConnectionInfo.set_ProxyHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyPasswordGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyPassword()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyPasswordSetString">
            <summary>Sets the shim of ConnectionInfo.set_ProxyPassword(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyPortGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyPortSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_ProxyPort(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyTypeGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyType()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyTypeSetProxyTypes">
            <summary>Sets the shim of ConnectionInfo.set_ProxyType(ProxyTypes value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyUsernameGet">
            <summary>Sets the shim of ConnectionInfo.get_ProxyUsername()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ProxyUsernameSetString">
            <summary>Sets the shim of ConnectionInfo.set_ProxyUsername(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.RetryAttemptsGet">
            <summary>Sets the shim of ConnectionInfo.get_RetryAttempts()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.RetryAttemptsSetInt32">
            <summary>Sets the shim of ConnectionInfo.set_RetryAttempts(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ServerVersionGet">
            <summary>Sets the shim of ConnectionInfo.get_ServerVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.ServerVersionSetString">
            <summary>Sets the shim of ConnectionInfo.set_ServerVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.Session_UserAuthenticationBannerReceivedObjectMessageEventArgsOfBannerMessage">
            <summary>Sets the shim of ConnectionInfo.Session_UserAuthenticationBannerReceived(Object sender, MessageEventArgs`1&lt;BannerMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.TimeoutGet">
            <summary>Sets the shim of ConnectionInfo.get_Timeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.TimeoutSetTimeSpan">
            <summary>Sets the shim of ConnectionInfo.set_Timeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.UsernameGet">
            <summary>Sets the shim of ConnectionInfo.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimConnectionInfo.AllInstances.UsernameSetString">
            <summary>Sets the shim of ConnectionInfo.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimExpectAction">
            <summary>Shim type of Renci.SshNet.ExpectAction</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAction.#ctor(Renci.SshNet.ExpectAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.ActionGet">
            <summary>Sets the shim of ExpectAction.get_Action()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.ActionSetActionOfString">
            <summary>Sets the shim of ExpectAction.set_Action(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.ConstructorRegexActionOfString">
            <summary>Sets the shim of ExpectAction.ExpectAction(Regex expect, Action`1&lt;String&gt; action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.ConstructorStringActionOfString">
            <summary>Sets the shim of ExpectAction.ExpectAction(String expect, Action`1&lt;String&gt; action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.ExpectGet">
            <summary>Sets the shim of ExpectAction.get_Expect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.ExpectSetRegex">
            <summary>Sets the shim of ExpectAction.set_Expect(Regex value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimExpectAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.AllInstances.ActionGet">
            <summary>Sets the shim of ExpectAction.get_Action()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.AllInstances.ActionSetActionOfString">
            <summary>Sets the shim of ExpectAction.set_Action(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.AllInstances.ExpectGet">
            <summary>Sets the shim of ExpectAction.get_Expect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAction.AllInstances.ExpectSetRegex">
            <summary>Sets the shim of ExpectAction.set_Expect(Regex value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimExpectAsyncResult">
            <summary>Shim type of Renci.SshNet.ExpectAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAsyncResult.#ctor(Renci.SshNet.ExpectAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExpectAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExpectAsyncResult.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of ExpectAsyncResult.ExpectAsyncResult(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimExpectAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimExtensions">
            <summary>Shim type of Renci.SshNet.Extensions</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExtensions.CreateInstanceOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets the shim of Extensions.CreateInstance(Type type)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExtensions.IsEqualToOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Extensions.IsEqualTo(IEnumerable`1&lt;!!0&gt; value, IEnumerable`1&lt;!!0&gt; compareList)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimExtensions.IsEqualToOf1IEnumerableOfM0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the shim of Extensions.IsEqualTo(IEnumerable`1&lt;!!0&gt; value, IEnumerable`1&lt;!!0&gt; compareList, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.CanReadSocket">
            <summary>Sets the shim of Extensions.CanRead(Socket socket)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.CanWriteSocket">
            <summary>Sets the shim of Extensions.CanWrite(Socket socket)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.DebugPrintIEnumerableOfByte">
            <summary>Sets the shim of Extensions.DebugPrint(IEnumerable`1&lt;Byte&gt; bytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.GetBytesInt64">
            <summary>Sets the shim of Extensions.GetBytes(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.GetBytesUInt16">
            <summary>Sets the shim of Extensions.GetBytes(UInt16 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.GetBytesUInt32">
            <summary>Sets the shim of Extensions.GetBytes(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.GetBytesUInt64">
            <summary>Sets the shim of Extensions.GetBytes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.GetIPAddressString">
            <summary>Sets the shim of Extensions.GetIPAddress(String host)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.IsNullOrWhiteSpaceString">
            <summary>Sets the shim of Extensions.IsNullOrWhiteSpace(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.IsValidHostString">
            <summary>Sets the shim of Extensions.IsValidHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.IsValidPortInt32">
            <summary>Sets the shim of Extensions.IsValidPort(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.IsValidPortUInt32">
            <summary>Sets the shim of Extensions.IsValidPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.StaticConstructor">
            <summary>Sets the shim of Extensions.Extensions()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimExtensions.TrimLeadingZeroIEnumerableOfByte">
            <summary>Sets the shim of Extensions.TrimLeadingZero(IEnumerable`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPort">
            <summary>Shim type of Renci.SshNet.ForwardedPort</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPort.#ctor(Renci.SshNet.ForwardedPort)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPort.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPort.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.Constructor">
            <summary>Sets the shim of ForwardedPort.ForwardedPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.ExceptionAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ForwardedPort.add_Exception(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.ExceptionRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ForwardedPort.remove_Exception(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.IsStartedGet">
            <summary>Sets the shim of ForwardedPort.get_IsStarted()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.IsStartedSetBoolean">
            <summary>Sets the shim of ForwardedPort.set_IsStarted(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.RaiseExceptionEventException">
            <summary>Sets the shim of ForwardedPort.RaiseExceptionEvent(Exception execption)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.RaiseRequestReceivedStringUInt32">
            <summary>Sets the shim of ForwardedPort.RaiseRequestReceived(String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.RequestReceivedAddEventHandlerOfPortForwardEventArgs">
            <summary>Sets the shim of ForwardedPort.add_RequestReceived(EventHandler`1&lt;PortForwardEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.RequestReceivedRemoveEventHandlerOfPortForwardEventArgs">
            <summary>Sets the shim of ForwardedPort.remove_RequestReceived(EventHandler`1&lt;PortForwardEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.SessionGet">
            <summary>Sets the shim of ForwardedPort.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.SessionSetSession">
            <summary>Sets the shim of ForwardedPort.set_Session(Session value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of ForwardedPort.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.Start">
            <summary>Sets the shim of ForwardedPort.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.Stop">
            <summary>Sets the shim of ForwardedPort.Stop()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.ExceptionAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ForwardedPort.add_Exception(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.ExceptionRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ForwardedPort.remove_Exception(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.IsStartedGet">
            <summary>Sets the shim of ForwardedPort.get_IsStarted()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.IsStartedSetBoolean">
            <summary>Sets the shim of ForwardedPort.set_IsStarted(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.RaiseExceptionEventException">
            <summary>Sets the shim of ForwardedPort.RaiseExceptionEvent(Exception execption)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.RaiseRequestReceivedStringUInt32">
            <summary>Sets the shim of ForwardedPort.RaiseRequestReceived(String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.RequestReceivedAddEventHandlerOfPortForwardEventArgs">
            <summary>Sets the shim of ForwardedPort.add_RequestReceived(EventHandler`1&lt;PortForwardEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.RequestReceivedRemoveEventHandlerOfPortForwardEventArgs">
            <summary>Sets the shim of ForwardedPort.remove_RequestReceived(EventHandler`1&lt;PortForwardEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.SessionGet">
            <summary>Sets the shim of ForwardedPort.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.SessionSetSession">
            <summary>Sets the shim of ForwardedPort.set_Session(Session value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of ForwardedPort.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.Start">
            <summary>Sets the shim of ForwardedPort.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPort.AllInstances.Stop">
            <summary>Sets the shim of ForwardedPort.Stop()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPortDynamic">
            <summary>Shim type of Renci.SshNet.ForwardedPortDynamic</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortDynamic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortDynamic.#ctor(Renci.SshNet.ForwardedPortDynamic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortDynamic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortDynamic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortDynamic.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.BoundHostGet">
            <summary>Sets the shim of ForwardedPortDynamic.get_BoundHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.BoundHostSetString">
            <summary>Sets the shim of ForwardedPortDynamic.set_BoundHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.BoundPortGet">
            <summary>Sets the shim of ForwardedPortDynamic.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.BoundPortSetUInt32">
            <summary>Sets the shim of ForwardedPortDynamic.set_BoundPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.ConstructorStringUInt32">
            <summary>Sets the shim of ForwardedPortDynamic.ForwardedPortDynamic(String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.ConstructorUInt32">
            <summary>Sets the shim of ForwardedPortDynamic.ForwardedPortDynamic(UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.Dispose">
            <summary>Sets the shim of ForwardedPortDynamic.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.DisposeBoolean">
            <summary>Sets the shim of ForwardedPortDynamic.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.ExecuteThreadAction">
            <summary>Sets the shim of ForwardedPortDynamic.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.InternalStart">
            <summary>Sets the shim of ForwardedPortDynamic.InternalStart()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.InternalStop">
            <summary>Sets the shim of ForwardedPortDynamic.InternalStop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.ReadStringNetworkStream">
            <summary>Sets the shim of ForwardedPortDynamic.ReadString(NetworkStream stream)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.Start">
            <summary>Sets the shim of ForwardedPortDynamic.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.Stop">
            <summary>Sets the shim of ForwardedPortDynamic.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic._InternalStartb__1">
            <summary>Sets the shim of ForwardedPortDynamic.&lt;InternalStart&gt;b__1()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.BoundHostGet">
            <summary>Sets the shim of ForwardedPortDynamic.get_BoundHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.BoundHostSetString">
            <summary>Sets the shim of ForwardedPortDynamic.set_BoundHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.BoundPortGet">
            <summary>Sets the shim of ForwardedPortDynamic.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.BoundPortSetUInt32">
            <summary>Sets the shim of ForwardedPortDynamic.set_BoundPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.Dispose">
            <summary>Sets the shim of ForwardedPortDynamic.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ForwardedPortDynamic.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of ForwardedPortDynamic.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.InternalStart">
            <summary>Sets the shim of ForwardedPortDynamic.InternalStart()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.InternalStop">
            <summary>Sets the shim of ForwardedPortDynamic.InternalStop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.Start">
            <summary>Sets the shim of ForwardedPortDynamic.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances.Stop">
            <summary>Sets the shim of ForwardedPortDynamic.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortDynamic.AllInstances._InternalStartb__1">
            <summary>Sets the shim of ForwardedPortDynamic.&lt;InternalStart&gt;b__1()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPortLocal">
            <summary>Shim type of Renci.SshNet.ForwardedPortLocal</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortLocal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortLocal.#ctor(Renci.SshNet.ForwardedPortLocal)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortLocal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortLocal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortLocal.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.BoundHostGet">
            <summary>Sets the shim of ForwardedPortLocal.get_BoundHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.BoundHostSetString">
            <summary>Sets the shim of ForwardedPortLocal.set_BoundHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.BoundPortGet">
            <summary>Sets the shim of ForwardedPortLocal.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.BoundPortSetUInt32">
            <summary>Sets the shim of ForwardedPortLocal.set_BoundPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.ConstructorStringUInt32StringUInt32">
            <summary>Sets the shim of ForwardedPortLocal.ForwardedPortLocal(String boundHost, UInt32 boundPort, String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.ConstructorUInt32StringUInt32">
            <summary>Sets the shim of ForwardedPortLocal.ForwardedPortLocal(UInt32 boundPort, String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.Dispose">
            <summary>Sets the shim of ForwardedPortLocal.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.DisposeBoolean">
            <summary>Sets the shim of ForwardedPortLocal.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.ExecuteThreadAction">
            <summary>Sets the shim of ForwardedPortLocal.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.HostGet">
            <summary>Sets the shim of ForwardedPortLocal.get_Host()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.HostSetString">
            <summary>Sets the shim of ForwardedPortLocal.set_Host(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.InternalStart">
            <summary>Sets the shim of ForwardedPortLocal.InternalStart()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.InternalStop">
            <summary>Sets the shim of ForwardedPortLocal.InternalStop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.PortGet">
            <summary>Sets the shim of ForwardedPortLocal.get_Port()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.PortSetUInt32">
            <summary>Sets the shim of ForwardedPortLocal.set_Port(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of ForwardedPortLocal.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of ForwardedPortLocal.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.Start">
            <summary>Sets the shim of ForwardedPortLocal.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.Stop">
            <summary>Sets the shim of ForwardedPortLocal.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal._InternalStartb__1">
            <summary>Sets the shim of ForwardedPortLocal.&lt;InternalStart&gt;b__1()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.BoundHostGet">
            <summary>Sets the shim of ForwardedPortLocal.get_BoundHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.BoundHostSetString">
            <summary>Sets the shim of ForwardedPortLocal.set_BoundHost(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.BoundPortGet">
            <summary>Sets the shim of ForwardedPortLocal.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.BoundPortSetUInt32">
            <summary>Sets the shim of ForwardedPortLocal.set_BoundPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.Dispose">
            <summary>Sets the shim of ForwardedPortLocal.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ForwardedPortLocal.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of ForwardedPortLocal.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.HostGet">
            <summary>Sets the shim of ForwardedPortLocal.get_Host()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.HostSetString">
            <summary>Sets the shim of ForwardedPortLocal.set_Host(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.InternalStart">
            <summary>Sets the shim of ForwardedPortLocal.InternalStart()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.InternalStop">
            <summary>Sets the shim of ForwardedPortLocal.InternalStop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.PortGet">
            <summary>Sets the shim of ForwardedPortLocal.get_Port()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.PortSetUInt32">
            <summary>Sets the shim of ForwardedPortLocal.set_Port(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of ForwardedPortLocal.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of ForwardedPortLocal.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.Start">
            <summary>Sets the shim of ForwardedPortLocal.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances.Stop">
            <summary>Sets the shim of ForwardedPortLocal.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortLocal.AllInstances._InternalStartb__1">
            <summary>Sets the shim of ForwardedPortLocal.&lt;InternalStart&gt;b__1()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPortRemote">
            <summary>Shim type of Renci.SshNet.ForwardedPortRemote</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortRemote.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortRemote.#ctor(Renci.SshNet.ForwardedPortRemote)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortRemote.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortRemote.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimForwardedPortRemote.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.BoundHostAddressGet">
            <summary>Sets the shim of ForwardedPortRemote.get_BoundHostAddress()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.BoundHostAddressSetIPAddress">
            <summary>Sets the shim of ForwardedPortRemote.set_BoundHostAddress(IPAddress value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.BoundHostGet">
            <summary>Sets the shim of ForwardedPortRemote.get_BoundHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.BoundPortGet">
            <summary>Sets the shim of ForwardedPortRemote.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.BoundPortSetUInt32">
            <summary>Sets the shim of ForwardedPortRemote.set_BoundPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.ConstructorIPAddressUInt32IPAddressUInt32">
            <summary>Sets the shim of ForwardedPortRemote.ForwardedPortRemote(IPAddress boundHostAddress, UInt32 boundPort, IPAddress hostAddress, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.ConstructorStringUInt32StringUInt32">
            <summary>Sets the shim of ForwardedPortRemote.ForwardedPortRemote(String boundHost, UInt32 boundPort, String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.ConstructorUInt32StringUInt32">
            <summary>Sets the shim of ForwardedPortRemote.ForwardedPortRemote(UInt32 boundPort, String host, UInt32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Dispose">
            <summary>Sets the shim of ForwardedPortRemote.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.DisposeBoolean">
            <summary>Sets the shim of ForwardedPortRemote.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.ExecuteThreadAction">
            <summary>Sets the shim of ForwardedPortRemote.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.HostAddressGet">
            <summary>Sets the shim of ForwardedPortRemote.get_HostAddress()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.HostAddressSetIPAddress">
            <summary>Sets the shim of ForwardedPortRemote.set_HostAddress(IPAddress value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.HostGet">
            <summary>Sets the shim of ForwardedPortRemote.get_Host()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.PortGet">
            <summary>Sets the shim of ForwardedPortRemote.get_Port()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.PortSetUInt32">
            <summary>Sets the shim of ForwardedPortRemote.set_Port(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Session_ChannelOpeningObjectMessageEventArgsOfChannelOpenMessage">
            <summary>Sets the shim of ForwardedPortRemote.Session_ChannelOpening(Object sender, MessageEventArgs`1&lt;ChannelOpenMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Session_RequestFailureObjectEventArgs">
            <summary>Sets the shim of ForwardedPortRemote.Session_RequestFailure(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Session_RequestSuccessObjectMessageEventArgsOfRequestSuccessMessage">
            <summary>Sets the shim of ForwardedPortRemote.Session_RequestSuccess(Object sender, MessageEventArgs`1&lt;RequestSuccessMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Start">
            <summary>Sets the shim of ForwardedPortRemote.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.Stop">
            <summary>Sets the shim of ForwardedPortRemote.Stop()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.BoundHostAddressGet">
            <summary>Sets the shim of ForwardedPortRemote.get_BoundHostAddress()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.BoundHostAddressSetIPAddress">
            <summary>Sets the shim of ForwardedPortRemote.set_BoundHostAddress(IPAddress value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.BoundHostGet">
            <summary>Sets the shim of ForwardedPortRemote.get_BoundHost()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.BoundPortGet">
            <summary>Sets the shim of ForwardedPortRemote.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.BoundPortSetUInt32">
            <summary>Sets the shim of ForwardedPortRemote.set_BoundPort(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.Dispose">
            <summary>Sets the shim of ForwardedPortRemote.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ForwardedPortRemote.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of ForwardedPortRemote.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.HostAddressGet">
            <summary>Sets the shim of ForwardedPortRemote.get_HostAddress()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.HostAddressSetIPAddress">
            <summary>Sets the shim of ForwardedPortRemote.set_HostAddress(IPAddress value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.HostGet">
            <summary>Sets the shim of ForwardedPortRemote.get_Host()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.PortGet">
            <summary>Sets the shim of ForwardedPortRemote.get_Port()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.PortSetUInt32">
            <summary>Sets the shim of ForwardedPortRemote.set_Port(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.Session_ChannelOpeningObjectMessageEventArgsOfChannelOpenMessage">
            <summary>Sets the shim of ForwardedPortRemote.Session_ChannelOpening(Object sender, MessageEventArgs`1&lt;ChannelOpenMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.Session_RequestFailureObjectEventArgs">
            <summary>Sets the shim of ForwardedPortRemote.Session_RequestFailure(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.Session_RequestSuccessObjectMessageEventArgsOfRequestSuccessMessage">
            <summary>Sets the shim of ForwardedPortRemote.Session_RequestSuccess(Object sender, MessageEventArgs`1&lt;RequestSuccessMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.Start">
            <summary>Sets the shim of ForwardedPortRemote.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimForwardedPortRemote.AllInstances.Stop">
            <summary>Sets the shim of ForwardedPortRemote.Stop()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimHashInfo">
            <summary>Shim type of Renci.SshNet.HashInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimHashInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimHashInfo.#ctor(Renci.SshNet.HashInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimHashInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimHashInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.ConstructorInt32FuncOfByteArrayHashAlgorithm">
            <summary>Sets the shim of HashInfo.HashInfo(Int32 keySize, Func`2&lt;Byte[],HashAlgorithm&gt; hash)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.HashAlgorithmGet">
            <summary>Sets the shim of HashInfo.get_HashAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.HashAlgorithmSetFuncOfByteArrayHashAlgorithm">
            <summary>Sets the shim of HashInfo.set_HashAlgorithm(Func`2&lt;Byte[],HashAlgorithm&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.KeySizeGet">
            <summary>Sets the shim of HashInfo.get_KeySize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.KeySizeSetInt32">
            <summary>Sets the shim of HashInfo.set_KeySize(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimHashInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of HashInfo.get_HashAlgorithm()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.AllInstances.HashAlgorithmSetFuncOfByteArrayHashAlgorithm">
            <summary>Sets the shim of HashInfo.set_HashAlgorithm(Func`2&lt;Byte[],HashAlgorithm&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.AllInstances.KeySizeGet">
            <summary>Sets the shim of HashInfo.get_KeySize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimHashInfo.AllInstances.KeySizeSetInt32">
            <summary>Sets the shim of HashInfo.set_KeySize(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod">
            <summary>Shim type of Renci.SshNet.KeyboardInteractiveAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.#ctor(Renci.SshNet.KeyboardInteractiveAuthenticationMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AuthenticateSession">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AuthenticationPromptAddEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.add_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AuthenticationPromptRemoveEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.remove_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.ConstructorString">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.KeyboardInteractiveAuthenticationMethod(String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.Dispose">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.DisposeBoolean">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.ExecuteThreadAction">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.NameGet">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.AuthenticateSession">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.AuthenticationPromptAddEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.add_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.AuthenticationPromptRemoveEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.remove_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.Dispose">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.DisposeBoolean">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.NameGet">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveAuthenticationMethod.AllInstances.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of KeyboardInteractiveAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo">
            <summary>Shim type of Renci.SshNet.KeyboardInteractiveConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.#ctor(Renci.SshNet.KeyboardInteractiveConnectionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AuthenticationMethod_AuthenticationPromptObjectAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.AuthenticationMethod_AuthenticationPrompt(Object sender, AuthenticationPromptEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AuthenticationPromptAddEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.add_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AuthenticationPromptRemoveEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.remove_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringInt32String">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, Int32 port, String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32String">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32StringString">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringString">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringStringProxyTypesStringInt32">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringStringProxyTypesStringInt32String">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.ConstructorStringStringProxyTypesStringInt32StringString">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.KeyboardInteractiveConnectionInfo(String host, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.Dispose">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.DisposeBoolean">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AllInstances.AuthenticationMethod_AuthenticationPromptObjectAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.AuthenticationMethod_AuthenticationPrompt(Object sender, AuthenticationPromptEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AllInstances.AuthenticationPromptAddEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.add_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AllInstances.AuthenticationPromptRemoveEventHandlerOfAuthenticationPromptEventArgs">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.remove_AuthenticationPrompt(EventHandler`1&lt;AuthenticationPromptEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AllInstances.Dispose">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimKeyboardInteractiveConnectionInfo.AllInstances.DisposeBoolean">
            <summary>Sets the shim of KeyboardInteractiveConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimMessageEventArgs`1">
            <summary>Shim type of Renci.SshNet.MessageEventArgs`1</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimMessageEventArgs`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimMessageEventArgs`1.#ctor(Renci.SshNet.MessageEventArgs{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimMessageEventArgs`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimMessageEventArgs`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimMessageEventArgs`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimMessageEventArgs`1.ConstructorT0">
            <summary>Sets the shim of MessageEventArgs`1.MessageEventArgs`1(!0 message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimMessageEventArgs`1.MessageGet">
            <summary>Sets the shim of MessageEventArgs`1.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimMessageEventArgs`1.MessageSetT0">
            <summary>Sets the shim of MessageEventArgs`1.set_Message(!0 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimMessageEventArgs`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimMessageEventArgs`1.AllInstances.MessageGet">
            <summary>Sets the shim of MessageEventArgs`1.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimMessageEventArgs`1.AllInstances.MessageSetT0">
            <summary>Sets the shim of MessageEventArgs`1.set_Message(!0 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimNetConfClient">
            <summary>Shim type of Renci.SshNet.NetConfClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNetConfClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNetConfClient.#ctor(Renci.SshNet.NetConfClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNetConfClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNetConfClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNetConfClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AutomaticMessageIdHandlingGet">
            <summary>Sets the shim of NetConfClient.get_AutomaticMessageIdHandling()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AutomaticMessageIdHandlingSetBoolean">
            <summary>Sets the shim of NetConfClient.set_AutomaticMessageIdHandling(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ClientCapabilitiesGet">
            <summary>Sets the shim of NetConfClient.get_ClientCapabilities()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ConstructorConnectionInfo">
            <summary>Sets the shim of NetConfClient.NetConfClient(ConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ConstructorStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of NetConfClient.NetConfClient(String host, Int32 port, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ConstructorStringInt32StringString">
            <summary>Sets the shim of NetConfClient.NetConfClient(String host, Int32 port, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ConstructorStringStringPrivateKeyFileArray">
            <summary>Sets the shim of NetConfClient.NetConfClient(String host, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ConstructorStringStringString">
            <summary>Sets the shim of NetConfClient.NetConfClient(String host, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.DisposeBoolean">
            <summary>Sets the shim of NetConfClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.OnConnected">
            <summary>Sets the shim of NetConfClient.OnConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.OnDisconnecting">
            <summary>Sets the shim of NetConfClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.OperationTimeoutGet">
            <summary>Sets the shim of NetConfClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of NetConfClient.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.SendCloseRpc">
            <summary>Sets the shim of NetConfClient.SendCloseRpc()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.SendReceiveRpcString">
            <summary>Sets the shim of NetConfClient.SendReceiveRpc(String xml)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.SendReceiveRpcXmlDocument">
            <summary>Sets the shim of NetConfClient.SendReceiveRpc(XmlDocument rpc)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.ServerCapabilitiesGet">
            <summary>Sets the shim of NetConfClient.get_ServerCapabilities()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.AutomaticMessageIdHandlingGet">
            <summary>Sets the shim of NetConfClient.get_AutomaticMessageIdHandling()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.AutomaticMessageIdHandlingSetBoolean">
            <summary>Sets the shim of NetConfClient.set_AutomaticMessageIdHandling(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.ClientCapabilitiesGet">
            <summary>Sets the shim of NetConfClient.get_ClientCapabilities()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.DisposeBoolean">
            <summary>Sets the shim of NetConfClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.OnConnected">
            <summary>Sets the shim of NetConfClient.OnConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.OnDisconnecting">
            <summary>Sets the shim of NetConfClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of NetConfClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of NetConfClient.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.SendCloseRpc">
            <summary>Sets the shim of NetConfClient.SendCloseRpc()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.SendReceiveRpcString">
            <summary>Sets the shim of NetConfClient.SendReceiveRpc(String xml)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.SendReceiveRpcXmlDocument">
            <summary>Sets the shim of NetConfClient.SendReceiveRpc(XmlDocument rpc)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNetConfClient.AllInstances.ServerCapabilitiesGet">
            <summary>Sets the shim of NetConfClient.get_ServerCapabilities()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod">
            <summary>Shim type of Renci.SshNet.NoneAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.#ctor(Renci.SshNet.NoneAuthenticationMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AuthenticateSession">
            <summary>Sets the shim of NoneAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.ConstructorString">
            <summary>Sets the shim of NoneAuthenticationMethod.NoneAuthenticationMethod(String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.Dispose">
            <summary>Sets the shim of NoneAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.DisposeBoolean">
            <summary>Sets the shim of NoneAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.NameGet">
            <summary>Sets the shim of NoneAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of NoneAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of NoneAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances.AuthenticateSession">
            <summary>Sets the shim of NoneAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances.Dispose">
            <summary>Sets the shim of NoneAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances.DisposeBoolean">
            <summary>Sets the shim of NoneAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances.NameGet">
            <summary>Sets the shim of NoneAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of NoneAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimNoneAuthenticationMethod.AllInstances.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of NoneAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod">
            <summary>Shim type of Renci.SshNet.PasswordAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.#ctor(Renci.SshNet.PasswordAuthenticationMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AuthenticateSession">
            <summary>Sets the shim of PasswordAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.ConstructorStringByteArray">
            <summary>Sets the shim of PasswordAuthenticationMethod.PasswordAuthenticationMethod(String username, Byte[] password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.ConstructorStringString">
            <summary>Sets the shim of PasswordAuthenticationMethod.PasswordAuthenticationMethod(String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.Dispose">
            <summary>Sets the shim of PasswordAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.DisposeBoolean">
            <summary>Sets the shim of PasswordAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.ExecuteThreadAction">
            <summary>Sets the shim of PasswordAuthenticationMethod.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.NameGet">
            <summary>Sets the shim of PasswordAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.PasswordExpiredAddEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordAuthenticationMethod.add_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.PasswordExpiredRemoveEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordAuthenticationMethod.remove_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of PasswordAuthenticationMethod.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of PasswordAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of PasswordAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod._Session_MessageReceivedb__0">
            <summary>Sets the shim of PasswordAuthenticationMethod.&lt;Session_MessageReceived&gt;b__0()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.AuthenticateSession">
            <summary>Sets the shim of PasswordAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.Dispose">
            <summary>Sets the shim of PasswordAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PasswordAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of PasswordAuthenticationMethod.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.NameGet">
            <summary>Sets the shim of PasswordAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.PasswordExpiredAddEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordAuthenticationMethod.add_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.PasswordExpiredRemoveEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordAuthenticationMethod.remove_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of PasswordAuthenticationMethod.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of PasswordAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of PasswordAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordAuthenticationMethod.AllInstances._Session_MessageReceivedb__0">
            <summary>Sets the shim of PasswordAuthenticationMethod.&lt;Session_MessageReceived&gt;b__0()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPasswordConnectionInfo">
            <summary>Shim type of Renci.SshNet.PasswordConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.#ctor(Renci.SshNet.PasswordConnectionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AuthenticationMethod_PasswordExpiredObjectAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordConnectionInfo.AuthenticationMethod_PasswordExpired(Object sender, AuthenticationPasswordChangeEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringByteArray">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, Byte[] password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringByteArrayProxyTypesStringInt32">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, Byte[] password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringByteArrayProxyTypesStringInt32String">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, Byte[] password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringByteArrayProxyTypesStringInt32StringString">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, Byte[] password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringString">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringStringProxyTypesStringInt32">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, String password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringInt32StringStringProxyTypesStringInt32String">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, Int32 port, String username, String password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringByteArray">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, Byte[] password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringByteArrayProxyTypesStringInt32">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, Byte[] password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringByteArrayProxyTypesStringInt32String">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, Byte[] password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringByteArrayProxyTypesStringInt32StringString">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, Byte[] password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringString">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringStringProxyTypesStringInt32">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, String password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringStringProxyTypesStringInt32String">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, String password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.ConstructorStringStringStringProxyTypesStringInt32StringString">
            <summary>Sets the shim of PasswordConnectionInfo.PasswordConnectionInfo(String host, String username, String password, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.Dispose">
            <summary>Sets the shim of PasswordConnectionInfo.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.DisposeBoolean">
            <summary>Sets the shim of PasswordConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.PasswordExpiredAddEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordConnectionInfo.add_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.PasswordExpiredRemoveEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordConnectionInfo.remove_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AllInstances.AuthenticationMethod_PasswordExpiredObjectAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordConnectionInfo.AuthenticationMethod_PasswordExpired(Object sender, AuthenticationPasswordChangeEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AllInstances.Dispose">
            <summary>Sets the shim of PasswordConnectionInfo.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PasswordConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AllInstances.PasswordExpiredAddEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordConnectionInfo.add_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPasswordConnectionInfo.AllInstances.PasswordExpiredRemoveEventHandlerOfAuthenticationPasswordChangeEventArgs">
            <summary>Sets the shim of PasswordConnectionInfo.remove_PasswordExpired(EventHandler`1&lt;AuthenticationPasswordChangeEventArgs&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod">
            <summary>Shim type of Renci.SshNet.PrivateKeyAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.#ctor(Renci.SshNet.PrivateKeyAuthenticationMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AuthenticateSession">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.ConstructorStringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.PrivateKeyAuthenticationMethod(String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.Dispose">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.DisposeBoolean">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.KeyFilesGet">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.get_KeyFiles()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.KeyFilesSetICollectionOfPrivateKeyFile">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.set_KeyFiles(ICollection`1&lt;PrivateKeyFile&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.NameGet">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.AuthenticateSession">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.Dispose">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.KeyFilesGet">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.get_KeyFiles()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.KeyFilesSetICollectionOfPrivateKeyFile">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.set_KeyFiles(ICollection`1&lt;PrivateKeyFile&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.NameGet">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.Session_UserAuthenticationFailureReceivedObjectMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Session_UserAuthenticationFailureReceived(Object sender, MessageEventArgs`1&lt;FailureMessage&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyAuthenticationMethod.AllInstances.Session_UserAuthenticationSuccessReceivedObjectMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of PrivateKeyAuthenticationMethod.Session_UserAuthenticationSuccessReceived(Object sender, MessageEventArgs`1&lt;SuccessMessage&gt; e)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo">
            <summary>Shim type of Renci.SshNet.PrivateKeyConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.#ctor(Renci.SshNet.PrivateKeyConnectionInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, Int32 port, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32PrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringInt32StringProxyTypesStringInt32StringStringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, Int32 port, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringStringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringStringProxyTypesStringInt32PrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringStringProxyTypesStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.ConstructorStringStringProxyTypesStringInt32StringStringPrivateKeyFileArray">
            <summary>Sets the shim of PrivateKeyConnectionInfo.PrivateKeyConnectionInfo(String host, String username, ProxyTypes proxyType, String proxyHost, Int32 proxyPort, String proxyUsername, String proxyPassword, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.Dispose">
            <summary>Sets the shim of PrivateKeyConnectionInfo.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.DisposeBoolean">
            <summary>Sets the shim of PrivateKeyConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.KeyFilesGet">
            <summary>Sets the shim of PrivateKeyConnectionInfo.get_KeyFiles()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.KeyFilesSetICollectionOfPrivateKeyFile">
            <summary>Sets the shim of PrivateKeyConnectionInfo.set_KeyFiles(ICollection`1&lt;PrivateKeyFile&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.AllInstances.Dispose">
            <summary>Sets the shim of PrivateKeyConnectionInfo.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PrivateKeyConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.AllInstances.KeyFilesGet">
            <summary>Sets the shim of PrivateKeyConnectionInfo.get_KeyFiles()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyConnectionInfo.AllInstances.KeyFilesSetICollectionOfPrivateKeyFile">
            <summary>Sets the shim of PrivateKeyConnectionInfo.set_KeyFiles(ICollection`1&lt;PrivateKeyFile&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPrivateKeyFile">
            <summary>Shim type of Renci.SshNet.PrivateKeyFile</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyFile.#ctor(Renci.SshNet.PrivateKeyFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimPrivateKeyFile.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.ConstructorStream">
            <summary>Sets the shim of PrivateKeyFile.PrivateKeyFile(Stream privateKey)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.ConstructorStreamString">
            <summary>Sets the shim of PrivateKeyFile.PrivateKeyFile(Stream privateKey, String passPhrase)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.ConstructorString">
            <summary>Sets the shim of PrivateKeyFile.PrivateKeyFile(String fileName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.ConstructorStringString">
            <summary>Sets the shim of PrivateKeyFile.PrivateKeyFile(String fileName, String passPhrase)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.DecryptKeyCipherInfoByteArrayStringByteArray">
            <summary>Sets the shim of PrivateKeyFile.DecryptKey(CipherInfo cipherInfo, Byte[] cipherData, String passPhrase, Byte[] binarySalt)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.Dispose">
            <summary>Sets the shim of PrivateKeyFile.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.DisposeBoolean">
            <summary>Sets the shim of PrivateKeyFile.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.GetCipherKeyStringInt32">
            <summary>Sets the shim of PrivateKeyFile.GetCipherKey(String passphrase, Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.HostKeyGet">
            <summary>Sets the shim of PrivateKeyFile.get_HostKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.HostKeySetHostAlgorithm">
            <summary>Sets the shim of PrivateKeyFile.set_HostKey(HostAlgorithm value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.OpenStreamString">
            <summary>Sets the shim of PrivateKeyFile.Open(Stream privateKey, String passPhrase)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.StaticConstructor">
            <summary>Sets the shim of PrivateKeyFile.PrivateKeyFile()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile._Openb__0ByteArrayByteArray">
            <summary>Sets the shim of PrivateKeyFile.&lt;Open&gt;b__0(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile._Openb__1ByteArrayByteArray">
            <summary>Sets the shim of PrivateKeyFile.&lt;Open&gt;b__1(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile._Openb__2ByteArrayByteArray">
            <summary>Sets the shim of PrivateKeyFile.&lt;Open&gt;b__2(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile._Openb__3ByteArrayByteArray">
            <summary>Sets the shim of PrivateKeyFile.&lt;Open&gt;b__3(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile._Openb__4ByteArrayByteArray">
            <summary>Sets the shim of PrivateKeyFile.&lt;Open&gt;b__4(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile._Openb__5ByteArrayByteArray">
            <summary>Sets the shim of PrivateKeyFile.&lt;Open&gt;b__5(Byte[] key, Byte[] iv)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimPrivateKeyFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.AllInstances.Dispose">
            <summary>Sets the shim of PrivateKeyFile.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PrivateKeyFile.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.AllInstances.HostKeyGet">
            <summary>Sets the shim of PrivateKeyFile.get_HostKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.AllInstances.HostKeySetHostAlgorithm">
            <summary>Sets the shim of PrivateKeyFile.set_HostKey(HostAlgorithm value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimPrivateKeyFile.AllInstances.OpenStreamString">
            <summary>Sets the shim of PrivateKeyFile.Open(Stream privateKey, String passPhrase)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimScpClient">
            <summary>Shim type of Renci.SshNet.ScpClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimScpClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimScpClient.#ctor(Renci.SshNet.ScpClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimScpClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimScpClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimScpClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.BufferSizeGet">
            <summary>Sets the shim of ScpClient.get_BufferSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.BufferSizeSetUInt32">
            <summary>Sets the shim of ScpClient.set_BufferSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.CheckReturnCodeStream">
            <summary>Sets the shim of ScpClient.CheckReturnCode(Stream input)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ConstructorConnectionInfo">
            <summary>Sets the shim of ScpClient.ScpClient(ConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ConstructorStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of ScpClient.ScpClient(String host, Int32 port, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ConstructorStringInt32StringString">
            <summary>Sets the shim of ScpClient.ScpClient(String host, Int32 port, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ConstructorStringStringPrivateKeyFileArray">
            <summary>Sets the shim of ScpClient.ScpClient(String host, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ConstructorStringStringString">
            <summary>Sets the shim of ScpClient.ScpClient(String host, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.DisposeBoolean">
            <summary>Sets the shim of ScpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.DownloadStringDirectoryInfo">
            <summary>Sets the shim of ScpClient.Download(String directoryName, DirectoryInfo directoryInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.DownloadStringFileInfo">
            <summary>Sets the shim of ScpClient.Download(String filename, FileInfo fileInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.DownloadStringStream">
            <summary>Sets the shim of ScpClient.Download(String filename, Stream destination)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.DownloadingAddEventHandlerOfScpDownloadEventArgs">
            <summary>Sets the shim of ScpClient.add_Downloading(EventHandler`1&lt;ScpDownloadEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.DownloadingRemoveEventHandlerOfScpDownloadEventArgs">
            <summary>Sets the shim of ScpClient.remove_Downloading(EventHandler`1&lt;ScpDownloadEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.OperationTimeoutGet">
            <summary>Sets the shim of ScpClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of ScpClient.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.RaiseDownloadingEventStringInt64Int64">
            <summary>Sets the shim of ScpClient.RaiseDownloadingEvent(String filename, Int64 size, Int64 downloaded)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.RaiseUploadingEventStringInt64Int64">
            <summary>Sets the shim of ScpClient.RaiseUploadingEvent(String filename, Int64 size, Int64 uploaded)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ReadByteStream">
            <summary>Sets the shim of ScpClient.ReadByte(Stream stream)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.ReadStringStream">
            <summary>Sets the shim of ScpClient.ReadString(Stream stream)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.StaticConstructor">
            <summary>Sets the shim of ScpClient.ScpClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.UploadDirectoryInfoString">
            <summary>Sets the shim of ScpClient.Upload(DirectoryInfo directoryInfo, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.UploadFileInfoString">
            <summary>Sets the shim of ScpClient.Upload(FileInfo fileInfo, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.UploadStreamString">
            <summary>Sets the shim of ScpClient.Upload(Stream source, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.UploadingAddEventHandlerOfScpUploadEventArgs">
            <summary>Sets the shim of ScpClient.add_Uploading(EventHandler`1&lt;ScpUploadEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.UploadingRemoveEventHandlerOfScpUploadEventArgs">
            <summary>Sets the shim of ScpClient.remove_Uploading(EventHandler`1&lt;ScpUploadEventArgs&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimScpClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.BufferSizeGet">
            <summary>Sets the shim of ScpClient.get_BufferSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.BufferSizeSetUInt32">
            <summary>Sets the shim of ScpClient.set_BufferSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.CheckReturnCodeStream">
            <summary>Sets the shim of ScpClient.CheckReturnCode(Stream input)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ScpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.DownloadStringDirectoryInfo">
            <summary>Sets the shim of ScpClient.Download(String directoryName, DirectoryInfo directoryInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.DownloadStringFileInfo">
            <summary>Sets the shim of ScpClient.Download(String filename, FileInfo fileInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.DownloadStringStream">
            <summary>Sets the shim of ScpClient.Download(String filename, Stream destination)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.DownloadingAddEventHandlerOfScpDownloadEventArgs">
            <summary>Sets the shim of ScpClient.add_Downloading(EventHandler`1&lt;ScpDownloadEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.DownloadingRemoveEventHandlerOfScpDownloadEventArgs">
            <summary>Sets the shim of ScpClient.remove_Downloading(EventHandler`1&lt;ScpDownloadEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of ScpClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of ScpClient.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.RaiseDownloadingEventStringInt64Int64">
            <summary>Sets the shim of ScpClient.RaiseDownloadingEvent(String filename, Int64 size, Int64 downloaded)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.RaiseUploadingEventStringInt64Int64">
            <summary>Sets the shim of ScpClient.RaiseUploadingEvent(String filename, Int64 size, Int64 uploaded)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.UploadDirectoryInfoString">
            <summary>Sets the shim of ScpClient.Upload(DirectoryInfo directoryInfo, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.UploadFileInfoString">
            <summary>Sets the shim of ScpClient.Upload(FileInfo fileInfo, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.UploadStreamString">
            <summary>Sets the shim of ScpClient.Upload(Stream source, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.UploadingAddEventHandlerOfScpUploadEventArgs">
            <summary>Sets the shim of ScpClient.add_Uploading(EventHandler`1&lt;ScpUploadEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimScpClient.AllInstances.UploadingRemoveEventHandlerOfScpUploadEventArgs">
            <summary>Sets the shim of ScpClient.remove_Uploading(EventHandler`1&lt;ScpUploadEventArgs&gt; value)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSession">
            <summary>Shim type of Renci.SshNet.Session</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.#ctor(Renci.SshNet.Session)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.HandleMessageOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of Session.HandleMessage(!!0 message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelCloseReceivedAddEventHandlerOfMessageEventArgsOfChannelCloseMessage">
            <summary>Sets the shim of Session.add_ChannelCloseReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelCloseMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelCloseReceivedRemoveEventHandlerOfMessageEventArgsOfChannelCloseMessage">
            <summary>Sets the shim of Session.remove_ChannelCloseReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelCloseMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelDataReceivedAddEventHandlerOfMessageEventArgsOfChannelDataMessage">
            <summary>Sets the shim of Session.add_ChannelDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelDataReceivedRemoveEventHandlerOfMessageEventArgsOfChannelDataMessage">
            <summary>Sets the shim of Session.remove_ChannelDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelEofReceivedAddEventHandlerOfMessageEventArgsOfChannelEofMessage">
            <summary>Sets the shim of Session.add_ChannelEofReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelEofMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelEofReceivedRemoveEventHandlerOfMessageEventArgsOfChannelEofMessage">
            <summary>Sets the shim of Session.remove_ChannelEofReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelEofMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelExtendedDataReceivedAddEventHandlerOfMessageEventArgsOfChannelExtendedDataMessage">
            <summary>Sets the shim of Session.add_ChannelExtendedDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelExtendedDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelExtendedDataReceivedRemoveEventHandlerOfMessageEventArgsOfChannelExtendedDataMessage">
            <summary>Sets the shim of Session.remove_ChannelExtendedDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelExtendedDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelFailureReceivedAddEventHandlerOfMessageEventArgsOfChannelFailureMessage">
            <summary>Sets the shim of Session.add_ChannelFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelFailureReceivedRemoveEventHandlerOfMessageEventArgsOfChannelFailureMessage">
            <summary>Sets the shim of Session.remove_ChannelFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelOpenConfirmationReceivedAddEventHandlerOfMessageEventArgsOfChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.add_ChannelOpenConfirmationReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenConfirmationMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelOpenConfirmationReceivedRemoveEventHandlerOfMessageEventArgsOfChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.remove_ChannelOpenConfirmationReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenConfirmationMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelOpenFailureReceivedAddEventHandlerOfMessageEventArgsOfChannelOpenFailureMessage">
            <summary>Sets the shim of Session.add_ChannelOpenFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelOpenFailureReceivedRemoveEventHandlerOfMessageEventArgsOfChannelOpenFailureMessage">
            <summary>Sets the shim of Session.remove_ChannelOpenFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelOpenReceivedAddEventHandlerOfMessageEventArgsOfChannelOpenMessage">
            <summary>Sets the shim of Session.add_ChannelOpenReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelOpenReceivedRemoveEventHandlerOfMessageEventArgsOfChannelOpenMessage">
            <summary>Sets the shim of Session.remove_ChannelOpenReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelRequestReceivedAddEventHandlerOfMessageEventArgsOfChannelRequestMessage">
            <summary>Sets the shim of Session.add_ChannelRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelRequestReceivedRemoveEventHandlerOfMessageEventArgsOfChannelRequestMessage">
            <summary>Sets the shim of Session.remove_ChannelRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelSuccessReceivedAddEventHandlerOfMessageEventArgsOfChannelSuccessMessage">
            <summary>Sets the shim of Session.add_ChannelSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelSuccessReceivedRemoveEventHandlerOfMessageEventArgsOfChannelSuccessMessage">
            <summary>Sets the shim of Session.remove_ChannelSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelWindowAdjustReceivedAddEventHandlerOfMessageEventArgsOfChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.add_ChannelWindowAdjustReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelWindowAdjustMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ChannelWindowAdjustReceivedRemoveEventHandlerOfMessageEventArgsOfChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.remove_ChannelWindowAdjustReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelWindowAdjustMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ClientInitMessageGet">
            <summary>Sets the shim of Session.get_ClientInitMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ClientVersionGet">
            <summary>Sets the shim of Session.get_ClientVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ClientVersionSetString">
            <summary>Sets the shim of Session.set_ClientVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.Connect">
            <summary>Sets the shim of Session.Connect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ConnectHttp">
            <summary>Sets the shim of Session.ConnectHttp()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ConnectSocks4">
            <summary>Sets the shim of Session.ConnectSocks4()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ConnectSocks5">
            <summary>Sets the shim of Session.ConnectSocks5()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ConnectionInfoGet">
            <summary>Sets the shim of Session.get_ConnectionInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ConnectionInfoSetConnectionInfo">
            <summary>Sets the shim of Session.set_ConnectionInfo(ConnectionInfo value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ConstructorConnectionInfo">
            <summary>Sets the shim of Session.Session(ConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DebugReceivedAddEventHandlerOfMessageEventArgsOfDebugMessage">
            <summary>Sets the shim of Session.add_DebugReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DebugMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DebugReceivedRemoveEventHandlerOfMessageEventArgsOfDebugMessage">
            <summary>Sets the shim of Session.remove_DebugReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DebugMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.Disconnect">
            <summary>Sets the shim of Session.Disconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DisconnectReceivedAddEventHandlerOfMessageEventArgsOfDisconnectMessage">
            <summary>Sets the shim of Session.add_DisconnectReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DisconnectMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DisconnectReceivedRemoveEventHandlerOfMessageEventArgsOfDisconnectMessage">
            <summary>Sets the shim of Session.remove_DisconnectReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DisconnectMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DisconnectedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Session.add_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DisconnectedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Session.remove_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.Dispose">
            <summary>Sets the shim of Session.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.DisposeBoolean">
            <summary>Sets the shim of Session.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ErrorOccuredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Session.add_ErrorOccured(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ErrorOccuredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Session.remove_ErrorOccured(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ExecuteThreadAction">
            <summary>Sets the shim of Session.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.GlobalRequestReceivedAddEventHandlerOfMessageEventArgsOfGlobalRequestMessage">
            <summary>Sets the shim of Session.add_GlobalRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;GlobalRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.GlobalRequestReceivedRemoveEventHandlerOfMessageEventArgsOfGlobalRequestMessage">
            <summary>Sets the shim of Session.remove_GlobalRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;GlobalRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageBannerMessage">
            <summary>Sets the shim of Session.HandleMessage(BannerMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelCloseMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelCloseMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelDataMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelEofMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelEofMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelExtendedDataMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelExtendedDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelOpenConfirmationMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelOpenFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelOpenFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelOpenMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelOpenMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelSuccessMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelWindowAdjustMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageCoreMessage">
            <summary>Sets the shim of Session.HandleMessageCore(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageDebugMessage">
            <summary>Sets the shim of Session.HandleMessage(DebugMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageDisconnectMessage">
            <summary>Sets the shim of Session.HandleMessage(DisconnectMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(FailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageGlobalRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(GlobalRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageIgnoreMessage">
            <summary>Sets the shim of Session.HandleMessage(IgnoreMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageKeyExchangeInitMessage">
            <summary>Sets the shim of Session.HandleMessage(KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageNewKeysMessage">
            <summary>Sets the shim of Session.HandleMessage(NewKeysMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageRequestFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(RequestFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(RequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageRequestSuccessMessage">
            <summary>Sets the shim of Session.HandleMessage(RequestSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageServiceAcceptMessage">
            <summary>Sets the shim of Session.HandleMessage(ServiceAcceptMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageServiceRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(ServiceRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageSuccessMessage">
            <summary>Sets the shim of Session.HandleMessage(SuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HandleMessageUnimplementedMessage">
            <summary>Sets the shim of Session.HandleMessage(UnimplementedMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HostKeyReceivedAddEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of Session.add_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.HostKeyReceivedRemoveEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of Session.remove_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.IgnoreReceivedAddEventHandlerOfMessageEventArgsOfIgnoreMessage">
            <summary>Sets the shim of Session.add_IgnoreReceived(EventHandler`1&lt;MessageEventArgs`1&lt;IgnoreMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.IgnoreReceivedRemoveEventHandlerOfMessageEventArgsOfIgnoreMessage">
            <summary>Sets the shim of Session.remove_IgnoreReceived(EventHandler`1&lt;MessageEventArgs`1&lt;IgnoreMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.InternalRegisterMessageString">
            <summary>Sets the shim of Session.InternalRegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.InternalUnRegisterMessageString">
            <summary>Sets the shim of Session.InternalUnRegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.IsConnectedGet">
            <summary>Sets the shim of Session.get_IsConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.IsSocketConnectedBooleanRef">
            <summary>Sets the shim of Session.IsSocketConnected(Boolean&amp; isConnected)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.KeyExchangeInitReceivedAddEventHandlerOfMessageEventArgsOfKeyExchangeInitMessage">
            <summary>Sets the shim of Session.add_KeyExchangeInitReceived(EventHandler`1&lt;MessageEventArgs`1&lt;KeyExchangeInitMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.KeyExchangeInitReceivedRemoveEventHandlerOfMessageEventArgsOfKeyExchangeInitMessage">
            <summary>Sets the shim of Session.remove_KeyExchangeInitReceived(EventHandler`1&lt;MessageEventArgs`1&lt;KeyExchangeInitMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.KeyExchange_HostKeyReceivedObjectHostKeyEventArgs">
            <summary>Sets the shim of Session.KeyExchange_HostKeyReceived(Object sender, HostKeyEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.LoadMessageByteArray">
            <summary>Sets the shim of Session.LoadMessage(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.LogString">
            <summary>Sets the shim of Session.Log(String text)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.MessageListener">
            <summary>Sets the shim of Session.MessageListener()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.MessageReceivedAddEventHandlerOfMessageEventArgsOfMessage">
            <summary>Sets the shim of Session.add_MessageReceived(EventHandler`1&lt;MessageEventArgs`1&lt;Message&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.MessageReceivedRemoveEventHandlerOfMessageEventArgsOfMessage">
            <summary>Sets the shim of Session.remove_MessageReceived(EventHandler`1&lt;MessageEventArgs`1&lt;Message&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.NewKeysReceivedAddEventHandlerOfMessageEventArgsOfNewKeysMessage">
            <summary>Sets the shim of Session.add_NewKeysReceived(EventHandler`1&lt;MessageEventArgs`1&lt;NewKeysMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.NewKeysReceivedRemoveEventHandlerOfMessageEventArgsOfNewKeysMessage">
            <summary>Sets the shim of Session.remove_NewKeysReceived(EventHandler`1&lt;MessageEventArgs`1&lt;NewKeysMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.NextChannelNumberGet">
            <summary>Sets the shim of Session.get_NextChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelCloseReceivedChannelCloseMessage">
            <summary>Sets the shim of Session.OnChannelCloseReceived(ChannelCloseMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelDataReceivedChannelDataMessage">
            <summary>Sets the shim of Session.OnChannelDataReceived(ChannelDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelEofReceivedChannelEofMessage">
            <summary>Sets the shim of Session.OnChannelEofReceived(ChannelEofMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelExtendedDataReceivedChannelExtendedDataMessage">
            <summary>Sets the shim of Session.OnChannelExtendedDataReceived(ChannelExtendedDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelFailureReceivedChannelFailureMessage">
            <summary>Sets the shim of Session.OnChannelFailureReceived(ChannelFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelOpenConfirmationReceivedChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.OnChannelOpenConfirmationReceived(ChannelOpenConfirmationMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelOpenFailureReceivedChannelOpenFailureMessage">
            <summary>Sets the shim of Session.OnChannelOpenFailureReceived(ChannelOpenFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelOpenReceivedChannelOpenMessage">
            <summary>Sets the shim of Session.OnChannelOpenReceived(ChannelOpenMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelRequestReceivedChannelRequestMessage">
            <summary>Sets the shim of Session.OnChannelRequestReceived(ChannelRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelSuccessReceivedChannelSuccessMessage">
            <summary>Sets the shim of Session.OnChannelSuccessReceived(ChannelSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnChannelWindowAdjustReceivedChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.OnChannelWindowAdjustReceived(ChannelWindowAdjustMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnDebugReceivedDebugMessage">
            <summary>Sets the shim of Session.OnDebugReceived(DebugMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnDisconnectReceivedDisconnectMessage">
            <summary>Sets the shim of Session.OnDisconnectReceived(DisconnectMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnGlobalRequestReceivedGlobalRequestMessage">
            <summary>Sets the shim of Session.OnGlobalRequestReceived(GlobalRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnIgnoreReceivedIgnoreMessage">
            <summary>Sets the shim of Session.OnIgnoreReceived(IgnoreMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnKeyExchangeInitReceivedKeyExchangeInitMessage">
            <summary>Sets the shim of Session.OnKeyExchangeInitReceived(KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnMessageReceivedMessage">
            <summary>Sets the shim of Session.OnMessageReceived(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnNewKeysReceivedNewKeysMessage">
            <summary>Sets the shim of Session.OnNewKeysReceived(NewKeysMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnRequestFailureReceivedRequestFailureMessage">
            <summary>Sets the shim of Session.OnRequestFailureReceived(RequestFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnRequestSuccessReceivedRequestSuccessMessage">
            <summary>Sets the shim of Session.OnRequestSuccessReceived(RequestSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnServiceAcceptReceivedServiceAcceptMessage">
            <summary>Sets the shim of Session.OnServiceAcceptReceived(ServiceAcceptMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnServiceRequestReceivedServiceRequestMessage">
            <summary>Sets the shim of Session.OnServiceRequestReceived(ServiceRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnUnimplementedReceivedUnimplementedMessage">
            <summary>Sets the shim of Session.OnUnimplementedReceived(UnimplementedMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnUserAuthenticationBannerReceivedBannerMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationBannerReceived(BannerMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnUserAuthenticationFailureReceivedFailureMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationFailureReceived(FailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnUserAuthenticationRequestReceivedRequestMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationRequestReceived(RequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.OnUserAuthenticationSuccessReceivedSuccessMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationSuccessReceived(SuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.RaiseErrorException">
            <summary>Sets the shim of Session.RaiseError(Exception exp)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ReadInt32">
            <summary>Sets the shim of Session.Read(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ReceiveMessage">
            <summary>Sets the shim of Session.ReceiveMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.RegisterMessageString">
            <summary>Sets the shim of Session.RegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.RequestFailureReceivedAddEventHandlerOfMessageEventArgsOfRequestFailureMessage">
            <summary>Sets the shim of Session.add_RequestFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.RequestFailureReceivedRemoveEventHandlerOfMessageEventArgsOfRequestFailureMessage">
            <summary>Sets the shim of Session.remove_RequestFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.RequestSuccessReceivedAddEventHandlerOfMessageEventArgsOfRequestSuccessMessage">
            <summary>Sets the shim of Session.add_RequestSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.RequestSuccessReceivedRemoveEventHandlerOfMessageEventArgsOfRequestSuccessMessage">
            <summary>Sets the shim of Session.remove_RequestSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SendDisconnectDisconnectReasonString">
            <summary>Sets the shim of Session.SendDisconnect(DisconnectReason reasonCode, String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SendKeepAlive">
            <summary>Sets the shim of Session.SendKeepAlive()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SendMessageMessage">
            <summary>Sets the shim of Session.SendMessage(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ServerVersionGet">
            <summary>Sets the shim of Session.get_ServerVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ServerVersionSetString">
            <summary>Sets the shim of Session.set_ServerVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ServiceAcceptReceivedAddEventHandlerOfMessageEventArgsOfServiceAcceptMessage">
            <summary>Sets the shim of Session.add_ServiceAcceptReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceAcceptMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ServiceAcceptReceivedRemoveEventHandlerOfMessageEventArgsOfServiceAcceptMessage">
            <summary>Sets the shim of Session.remove_ServiceAcceptReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceAcceptMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ServiceRequestReceivedAddEventHandlerOfMessageEventArgsOfServiceRequestMessage">
            <summary>Sets the shim of Session.add_ServiceRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.ServiceRequestReceivedRemoveEventHandlerOfMessageEventArgsOfServiceRequestMessage">
            <summary>Sets the shim of Session.remove_ServiceRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SessionIdGet">
            <summary>Sets the shim of Session.get_SessionId()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SessionIdSetByteArray">
            <summary>Sets the shim of Session.set_SessionId(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SessionSemaphoreGet">
            <summary>Sets the shim of Session.get_SessionSemaphore()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketConnectStringInt32">
            <summary>Sets the shim of Session.SocketConnect(String host, Int32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketDisconnect">
            <summary>Sets the shim of Session.SocketDisconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketReadByte">
            <summary>Sets the shim of Session.SocketReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketReadInt32ByteArrayRef">
            <summary>Sets the shim of Session.SocketRead(Int32 length, Byte[]&amp; buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketReadLineStringRef">
            <summary>Sets the shim of Session.SocketReadLine(String&amp; response)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketWriteByteArray">
            <summary>Sets the shim of Session.SocketWrite(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.SocketWriteByteByte">
            <summary>Sets the shim of Session.SocketWriteByte(Byte data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.StaticConstructor">
            <summary>Sets the shim of Session.Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UnRegisterMessageString">
            <summary>Sets the shim of Session.UnRegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UnimplementedReceivedAddEventHandlerOfMessageEventArgsOfUnimplementedMessage">
            <summary>Sets the shim of Session.add_UnimplementedReceived(EventHandler`1&lt;MessageEventArgs`1&lt;UnimplementedMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UnimplementedReceivedRemoveEventHandlerOfMessageEventArgsOfUnimplementedMessage">
            <summary>Sets the shim of Session.remove_UnimplementedReceived(EventHandler`1&lt;MessageEventArgs`1&lt;UnimplementedMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationBannerReceivedAddEventHandlerOfMessageEventArgsOfBannerMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationBannerReceived(EventHandler`1&lt;MessageEventArgs`1&lt;BannerMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationBannerReceivedRemoveEventHandlerOfMessageEventArgsOfBannerMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationBannerReceived(EventHandler`1&lt;MessageEventArgs`1&lt;BannerMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationFailureReceivedAddEventHandlerOfMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;FailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationFailureReceivedRemoveEventHandlerOfMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;FailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationRequestReceivedAddEventHandlerOfMessageEventArgsOfRequestMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationRequestReceivedRemoveEventHandlerOfMessageEventArgsOfRequestMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationSuccessReceivedAddEventHandlerOfMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;SuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.UserAuthenticationSuccessReceivedRemoveEventHandlerOfMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;SuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.WaitHandleWaitHandle">
            <summary>Sets the shim of Session.WaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession._Connectb__4">
            <summary>Sets the shim of Session.&lt;Connect&gt;b__4()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Renci.SshNet.Session,``0})">
            <summary>Sets the shim of Session.HandleMessage(!!0 message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelCloseReceivedAddEventHandlerOfMessageEventArgsOfChannelCloseMessage">
            <summary>Sets the shim of Session.add_ChannelCloseReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelCloseMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelCloseReceivedRemoveEventHandlerOfMessageEventArgsOfChannelCloseMessage">
            <summary>Sets the shim of Session.remove_ChannelCloseReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelCloseMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelDataReceivedAddEventHandlerOfMessageEventArgsOfChannelDataMessage">
            <summary>Sets the shim of Session.add_ChannelDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelDataReceivedRemoveEventHandlerOfMessageEventArgsOfChannelDataMessage">
            <summary>Sets the shim of Session.remove_ChannelDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelEofReceivedAddEventHandlerOfMessageEventArgsOfChannelEofMessage">
            <summary>Sets the shim of Session.add_ChannelEofReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelEofMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelEofReceivedRemoveEventHandlerOfMessageEventArgsOfChannelEofMessage">
            <summary>Sets the shim of Session.remove_ChannelEofReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelEofMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelExtendedDataReceivedAddEventHandlerOfMessageEventArgsOfChannelExtendedDataMessage">
            <summary>Sets the shim of Session.add_ChannelExtendedDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelExtendedDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelExtendedDataReceivedRemoveEventHandlerOfMessageEventArgsOfChannelExtendedDataMessage">
            <summary>Sets the shim of Session.remove_ChannelExtendedDataReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelExtendedDataMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelFailureReceivedAddEventHandlerOfMessageEventArgsOfChannelFailureMessage">
            <summary>Sets the shim of Session.add_ChannelFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelFailureReceivedRemoveEventHandlerOfMessageEventArgsOfChannelFailureMessage">
            <summary>Sets the shim of Session.remove_ChannelFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelOpenConfirmationReceivedAddEventHandlerOfMessageEventArgsOfChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.add_ChannelOpenConfirmationReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenConfirmationMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelOpenConfirmationReceivedRemoveEventHandlerOfMessageEventArgsOfChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.remove_ChannelOpenConfirmationReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenConfirmationMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelOpenFailureReceivedAddEventHandlerOfMessageEventArgsOfChannelOpenFailureMessage">
            <summary>Sets the shim of Session.add_ChannelOpenFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelOpenFailureReceivedRemoveEventHandlerOfMessageEventArgsOfChannelOpenFailureMessage">
            <summary>Sets the shim of Session.remove_ChannelOpenFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelOpenReceivedAddEventHandlerOfMessageEventArgsOfChannelOpenMessage">
            <summary>Sets the shim of Session.add_ChannelOpenReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelOpenReceivedRemoveEventHandlerOfMessageEventArgsOfChannelOpenMessage">
            <summary>Sets the shim of Session.remove_ChannelOpenReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelOpenMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelRequestReceivedAddEventHandlerOfMessageEventArgsOfChannelRequestMessage">
            <summary>Sets the shim of Session.add_ChannelRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelRequestReceivedRemoveEventHandlerOfMessageEventArgsOfChannelRequestMessage">
            <summary>Sets the shim of Session.remove_ChannelRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelSuccessReceivedAddEventHandlerOfMessageEventArgsOfChannelSuccessMessage">
            <summary>Sets the shim of Session.add_ChannelSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelSuccessReceivedRemoveEventHandlerOfMessageEventArgsOfChannelSuccessMessage">
            <summary>Sets the shim of Session.remove_ChannelSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelWindowAdjustReceivedAddEventHandlerOfMessageEventArgsOfChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.add_ChannelWindowAdjustReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelWindowAdjustMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ChannelWindowAdjustReceivedRemoveEventHandlerOfMessageEventArgsOfChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.remove_ChannelWindowAdjustReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ChannelWindowAdjustMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ClientInitMessageGet">
            <summary>Sets the shim of Session.get_ClientInitMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ClientVersionGet">
            <summary>Sets the shim of Session.get_ClientVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ClientVersionSetString">
            <summary>Sets the shim of Session.set_ClientVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.Connect">
            <summary>Sets the shim of Session.Connect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ConnectHttp">
            <summary>Sets the shim of Session.ConnectHttp()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ConnectSocks4">
            <summary>Sets the shim of Session.ConnectSocks4()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ConnectSocks5">
            <summary>Sets the shim of Session.ConnectSocks5()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ConnectionInfoGet">
            <summary>Sets the shim of Session.get_ConnectionInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ConnectionInfoSetConnectionInfo">
            <summary>Sets the shim of Session.set_ConnectionInfo(ConnectionInfo value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DebugReceivedAddEventHandlerOfMessageEventArgsOfDebugMessage">
            <summary>Sets the shim of Session.add_DebugReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DebugMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DebugReceivedRemoveEventHandlerOfMessageEventArgsOfDebugMessage">
            <summary>Sets the shim of Session.remove_DebugReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DebugMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.Disconnect">
            <summary>Sets the shim of Session.Disconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DisconnectReceivedAddEventHandlerOfMessageEventArgsOfDisconnectMessage">
            <summary>Sets the shim of Session.add_DisconnectReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DisconnectMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DisconnectReceivedRemoveEventHandlerOfMessageEventArgsOfDisconnectMessage">
            <summary>Sets the shim of Session.remove_DisconnectReceived(EventHandler`1&lt;MessageEventArgs`1&lt;DisconnectMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DisconnectedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Session.add_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DisconnectedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Session.remove_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.Dispose">
            <summary>Sets the shim of Session.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Session.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ErrorOccuredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Session.add_ErrorOccured(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ErrorOccuredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Session.remove_ErrorOccured(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of Session.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.GlobalRequestReceivedAddEventHandlerOfMessageEventArgsOfGlobalRequestMessage">
            <summary>Sets the shim of Session.add_GlobalRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;GlobalRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.GlobalRequestReceivedRemoveEventHandlerOfMessageEventArgsOfGlobalRequestMessage">
            <summary>Sets the shim of Session.remove_GlobalRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;GlobalRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageBannerMessage">
            <summary>Sets the shim of Session.HandleMessage(BannerMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelCloseMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelCloseMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelDataMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelEofMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelEofMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelExtendedDataMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelExtendedDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelOpenConfirmationMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelOpenFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelOpenFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelOpenMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelOpenMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelSuccessMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.HandleMessage(ChannelWindowAdjustMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageCoreMessage">
            <summary>Sets the shim of Session.HandleMessageCore(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageDebugMessage">
            <summary>Sets the shim of Session.HandleMessage(DebugMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageDisconnectMessage">
            <summary>Sets the shim of Session.HandleMessage(DisconnectMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(FailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageGlobalRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(GlobalRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageIgnoreMessage">
            <summary>Sets the shim of Session.HandleMessage(IgnoreMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageKeyExchangeInitMessage">
            <summary>Sets the shim of Session.HandleMessage(KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageNewKeysMessage">
            <summary>Sets the shim of Session.HandleMessage(NewKeysMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageRequestFailureMessage">
            <summary>Sets the shim of Session.HandleMessage(RequestFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(RequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageRequestSuccessMessage">
            <summary>Sets the shim of Session.HandleMessage(RequestSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageServiceAcceptMessage">
            <summary>Sets the shim of Session.HandleMessage(ServiceAcceptMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageServiceRequestMessage">
            <summary>Sets the shim of Session.HandleMessage(ServiceRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageSuccessMessage">
            <summary>Sets the shim of Session.HandleMessage(SuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HandleMessageUnimplementedMessage">
            <summary>Sets the shim of Session.HandleMessage(UnimplementedMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HostKeyReceivedAddEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of Session.add_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.HostKeyReceivedRemoveEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of Session.remove_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.IgnoreReceivedAddEventHandlerOfMessageEventArgsOfIgnoreMessage">
            <summary>Sets the shim of Session.add_IgnoreReceived(EventHandler`1&lt;MessageEventArgs`1&lt;IgnoreMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.IgnoreReceivedRemoveEventHandlerOfMessageEventArgsOfIgnoreMessage">
            <summary>Sets the shim of Session.remove_IgnoreReceived(EventHandler`1&lt;MessageEventArgs`1&lt;IgnoreMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.InternalRegisterMessageString">
            <summary>Sets the shim of Session.InternalRegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.InternalUnRegisterMessageString">
            <summary>Sets the shim of Session.InternalUnRegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.IsConnectedGet">
            <summary>Sets the shim of Session.get_IsConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.IsSocketConnectedBooleanRef">
            <summary>Sets the shim of Session.IsSocketConnected(Boolean&amp; isConnected)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.KeyExchangeInitReceivedAddEventHandlerOfMessageEventArgsOfKeyExchangeInitMessage">
            <summary>Sets the shim of Session.add_KeyExchangeInitReceived(EventHandler`1&lt;MessageEventArgs`1&lt;KeyExchangeInitMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.KeyExchangeInitReceivedRemoveEventHandlerOfMessageEventArgsOfKeyExchangeInitMessage">
            <summary>Sets the shim of Session.remove_KeyExchangeInitReceived(EventHandler`1&lt;MessageEventArgs`1&lt;KeyExchangeInitMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.KeyExchange_HostKeyReceivedObjectHostKeyEventArgs">
            <summary>Sets the shim of Session.KeyExchange_HostKeyReceived(Object sender, HostKeyEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.LoadMessageByteArray">
            <summary>Sets the shim of Session.LoadMessage(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.LogString">
            <summary>Sets the shim of Session.Log(String text)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.MessageListener">
            <summary>Sets the shim of Session.MessageListener()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.MessageReceivedAddEventHandlerOfMessageEventArgsOfMessage">
            <summary>Sets the shim of Session.add_MessageReceived(EventHandler`1&lt;MessageEventArgs`1&lt;Message&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.MessageReceivedRemoveEventHandlerOfMessageEventArgsOfMessage">
            <summary>Sets the shim of Session.remove_MessageReceived(EventHandler`1&lt;MessageEventArgs`1&lt;Message&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.NewKeysReceivedAddEventHandlerOfMessageEventArgsOfNewKeysMessage">
            <summary>Sets the shim of Session.add_NewKeysReceived(EventHandler`1&lt;MessageEventArgs`1&lt;NewKeysMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.NewKeysReceivedRemoveEventHandlerOfMessageEventArgsOfNewKeysMessage">
            <summary>Sets the shim of Session.remove_NewKeysReceived(EventHandler`1&lt;MessageEventArgs`1&lt;NewKeysMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.NextChannelNumberGet">
            <summary>Sets the shim of Session.get_NextChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelCloseReceivedChannelCloseMessage">
            <summary>Sets the shim of Session.OnChannelCloseReceived(ChannelCloseMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelDataReceivedChannelDataMessage">
            <summary>Sets the shim of Session.OnChannelDataReceived(ChannelDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelEofReceivedChannelEofMessage">
            <summary>Sets the shim of Session.OnChannelEofReceived(ChannelEofMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelExtendedDataReceivedChannelExtendedDataMessage">
            <summary>Sets the shim of Session.OnChannelExtendedDataReceived(ChannelExtendedDataMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelFailureReceivedChannelFailureMessage">
            <summary>Sets the shim of Session.OnChannelFailureReceived(ChannelFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelOpenConfirmationReceivedChannelOpenConfirmationMessage">
            <summary>Sets the shim of Session.OnChannelOpenConfirmationReceived(ChannelOpenConfirmationMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelOpenFailureReceivedChannelOpenFailureMessage">
            <summary>Sets the shim of Session.OnChannelOpenFailureReceived(ChannelOpenFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelOpenReceivedChannelOpenMessage">
            <summary>Sets the shim of Session.OnChannelOpenReceived(ChannelOpenMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelRequestReceivedChannelRequestMessage">
            <summary>Sets the shim of Session.OnChannelRequestReceived(ChannelRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelSuccessReceivedChannelSuccessMessage">
            <summary>Sets the shim of Session.OnChannelSuccessReceived(ChannelSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnChannelWindowAdjustReceivedChannelWindowAdjustMessage">
            <summary>Sets the shim of Session.OnChannelWindowAdjustReceived(ChannelWindowAdjustMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnDebugReceivedDebugMessage">
            <summary>Sets the shim of Session.OnDebugReceived(DebugMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnDisconnectReceivedDisconnectMessage">
            <summary>Sets the shim of Session.OnDisconnectReceived(DisconnectMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnGlobalRequestReceivedGlobalRequestMessage">
            <summary>Sets the shim of Session.OnGlobalRequestReceived(GlobalRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnIgnoreReceivedIgnoreMessage">
            <summary>Sets the shim of Session.OnIgnoreReceived(IgnoreMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnKeyExchangeInitReceivedKeyExchangeInitMessage">
            <summary>Sets the shim of Session.OnKeyExchangeInitReceived(KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnMessageReceivedMessage">
            <summary>Sets the shim of Session.OnMessageReceived(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnNewKeysReceivedNewKeysMessage">
            <summary>Sets the shim of Session.OnNewKeysReceived(NewKeysMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnRequestFailureReceivedRequestFailureMessage">
            <summary>Sets the shim of Session.OnRequestFailureReceived(RequestFailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnRequestSuccessReceivedRequestSuccessMessage">
            <summary>Sets the shim of Session.OnRequestSuccessReceived(RequestSuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnServiceAcceptReceivedServiceAcceptMessage">
            <summary>Sets the shim of Session.OnServiceAcceptReceived(ServiceAcceptMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnServiceRequestReceivedServiceRequestMessage">
            <summary>Sets the shim of Session.OnServiceRequestReceived(ServiceRequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnUnimplementedReceivedUnimplementedMessage">
            <summary>Sets the shim of Session.OnUnimplementedReceived(UnimplementedMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnUserAuthenticationBannerReceivedBannerMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationBannerReceived(BannerMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnUserAuthenticationFailureReceivedFailureMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationFailureReceived(FailureMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnUserAuthenticationRequestReceivedRequestMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationRequestReceived(RequestMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.OnUserAuthenticationSuccessReceivedSuccessMessage">
            <summary>Sets the shim of Session.OnUserAuthenticationSuccessReceived(SuccessMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.RaiseErrorException">
            <summary>Sets the shim of Session.RaiseError(Exception exp)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ReadInt32">
            <summary>Sets the shim of Session.Read(Int32 length)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ReceiveMessage">
            <summary>Sets the shim of Session.ReceiveMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.RegisterMessageString">
            <summary>Sets the shim of Session.RegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.RequestFailureReceivedAddEventHandlerOfMessageEventArgsOfRequestFailureMessage">
            <summary>Sets the shim of Session.add_RequestFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.RequestFailureReceivedRemoveEventHandlerOfMessageEventArgsOfRequestFailureMessage">
            <summary>Sets the shim of Session.remove_RequestFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestFailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.RequestSuccessReceivedAddEventHandlerOfMessageEventArgsOfRequestSuccessMessage">
            <summary>Sets the shim of Session.add_RequestSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.RequestSuccessReceivedRemoveEventHandlerOfMessageEventArgsOfRequestSuccessMessage">
            <summary>Sets the shim of Session.remove_RequestSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestSuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SendDisconnectDisconnectReasonString">
            <summary>Sets the shim of Session.SendDisconnect(DisconnectReason reasonCode, String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SendKeepAlive">
            <summary>Sets the shim of Session.SendKeepAlive()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SendMessageMessage">
            <summary>Sets the shim of Session.SendMessage(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ServerVersionGet">
            <summary>Sets the shim of Session.get_ServerVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ServerVersionSetString">
            <summary>Sets the shim of Session.set_ServerVersion(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ServiceAcceptReceivedAddEventHandlerOfMessageEventArgsOfServiceAcceptMessage">
            <summary>Sets the shim of Session.add_ServiceAcceptReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceAcceptMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ServiceAcceptReceivedRemoveEventHandlerOfMessageEventArgsOfServiceAcceptMessage">
            <summary>Sets the shim of Session.remove_ServiceAcceptReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceAcceptMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ServiceRequestReceivedAddEventHandlerOfMessageEventArgsOfServiceRequestMessage">
            <summary>Sets the shim of Session.add_ServiceRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.ServiceRequestReceivedRemoveEventHandlerOfMessageEventArgsOfServiceRequestMessage">
            <summary>Sets the shim of Session.remove_ServiceRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;ServiceRequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SessionIdGet">
            <summary>Sets the shim of Session.get_SessionId()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SessionIdSetByteArray">
            <summary>Sets the shim of Session.set_SessionId(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SessionSemaphoreGet">
            <summary>Sets the shim of Session.get_SessionSemaphore()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketConnectStringInt32">
            <summary>Sets the shim of Session.SocketConnect(String host, Int32 port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketDisconnect">
            <summary>Sets the shim of Session.SocketDisconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketReadByte">
            <summary>Sets the shim of Session.SocketReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketReadInt32ByteArrayRef">
            <summary>Sets the shim of Session.SocketRead(Int32 length, Byte[]&amp; buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketReadLineStringRef">
            <summary>Sets the shim of Session.SocketReadLine(String&amp; response)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketWriteByteArray">
            <summary>Sets the shim of Session.SocketWrite(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.SocketWriteByteByte">
            <summary>Sets the shim of Session.SocketWriteByte(Byte data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UnRegisterMessageString">
            <summary>Sets the shim of Session.UnRegisterMessage(String messageName)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UnimplementedReceivedAddEventHandlerOfMessageEventArgsOfUnimplementedMessage">
            <summary>Sets the shim of Session.add_UnimplementedReceived(EventHandler`1&lt;MessageEventArgs`1&lt;UnimplementedMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UnimplementedReceivedRemoveEventHandlerOfMessageEventArgsOfUnimplementedMessage">
            <summary>Sets the shim of Session.remove_UnimplementedReceived(EventHandler`1&lt;MessageEventArgs`1&lt;UnimplementedMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationBannerReceivedAddEventHandlerOfMessageEventArgsOfBannerMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationBannerReceived(EventHandler`1&lt;MessageEventArgs`1&lt;BannerMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationBannerReceivedRemoveEventHandlerOfMessageEventArgsOfBannerMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationBannerReceived(EventHandler`1&lt;MessageEventArgs`1&lt;BannerMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationFailureReceivedAddEventHandlerOfMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;FailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationFailureReceivedRemoveEventHandlerOfMessageEventArgsOfFailureMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationFailureReceived(EventHandler`1&lt;MessageEventArgs`1&lt;FailureMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationRequestReceivedAddEventHandlerOfMessageEventArgsOfRequestMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationRequestReceivedRemoveEventHandlerOfMessageEventArgsOfRequestMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationRequestReceived(EventHandler`1&lt;MessageEventArgs`1&lt;RequestMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationSuccessReceivedAddEventHandlerOfMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of Session.add_UserAuthenticationSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;SuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.UserAuthenticationSuccessReceivedRemoveEventHandlerOfMessageEventArgsOfSuccessMessage">
            <summary>Sets the shim of Session.remove_UserAuthenticationSuccessReceived(EventHandler`1&lt;MessageEventArgs`1&lt;SuccessMessage&gt;&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances.WaitHandleWaitHandle">
            <summary>Sets the shim of Session.WaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSession.AllInstances._Connectb__4">
            <summary>Sets the shim of Session.&lt;Connect&gt;b__4()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSftpClient">
            <summary>Shim type of Renci.SshNet.SftpClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSftpClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSftpClient.#ctor(Renci.SshNet.SftpClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSftpClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSftpClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSftpClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AppendAllLinesStringIEnumerableOfString">
            <summary>Sets the shim of SftpClient.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AppendAllLinesStringIEnumerableOfStringEncoding">
            <summary>Sets the shim of SftpClient.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AppendAllTextStringString">
            <summary>Sets the shim of SftpClient.AppendAllText(String path, String contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AppendAllTextStringStringEncoding">
            <summary>Sets the shim of SftpClient.AppendAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AppendTextString">
            <summary>Sets the shim of SftpClient.AppendText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AppendTextStringEncoding">
            <summary>Sets the shim of SftpClient.AppendText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginDownloadFileStringStream">
            <summary>Sets the shim of SftpClient.BeginDownloadFile(String path, Stream output)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginDownloadFileStringStreamAsyncCallback">
            <summary>Sets the shim of SftpClient.BeginDownloadFile(String path, Stream output, AsyncCallback asyncCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginDownloadFileStringStreamAsyncCallbackObjectActionOfUInt64">
            <summary>Sets the shim of SftpClient.BeginDownloadFile(String path, Stream output, AsyncCallback asyncCallback, Object state, Action`1&lt;UInt64&gt; downloadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginListDirectoryStringAsyncCallbackObjectActionOfInt32">
            <summary>Sets the shim of SftpClient.BeginListDirectory(String path, AsyncCallback asyncCallback, Object state, Action`1&lt;Int32&gt; listCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginSynchronizeDirectoriesStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of SftpClient.BeginSynchronizeDirectories(String sourcePath, String destinationPath, String searchPattern, AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginUploadFileStreamString">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginUploadFileStreamStringAsyncCallback">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path, AsyncCallback asyncCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginUploadFileStreamStringAsyncCallbackObjectActionOfUInt64">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path, AsyncCallback asyncCallback, Object state, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BeginUploadFileStreamStringBooleanAsyncCallbackObjectActionOfUInt64">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path, Boolean canOverride, AsyncCallback asyncCallback, Object state, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BufferSizeGet">
            <summary>Sets the shim of SftpClient.get_BufferSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.BufferSizeSetUInt32">
            <summary>Sets the shim of SftpClient.set_BufferSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ChangeDirectoryString">
            <summary>Sets the shim of SftpClient.ChangeDirectory(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ChangePermissionsStringInt16">
            <summary>Sets the shim of SftpClient.ChangePermissions(String path, Int16 mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ConstructorConnectionInfo">
            <summary>Sets the shim of SftpClient.SftpClient(ConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ConstructorStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of SftpClient.SftpClient(String host, Int32 port, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ConstructorStringInt32StringString">
            <summary>Sets the shim of SftpClient.SftpClient(String host, Int32 port, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ConstructorStringStringPrivateKeyFileArray">
            <summary>Sets the shim of SftpClient.SftpClient(String host, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ConstructorStringStringString">
            <summary>Sets the shim of SftpClient.SftpClient(String host, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.CreateDirectoryString">
            <summary>Sets the shim of SftpClient.CreateDirectory(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.CreateString">
            <summary>Sets the shim of SftpClient.Create(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.CreateStringInt32">
            <summary>Sets the shim of SftpClient.Create(String path, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.CreateTextString">
            <summary>Sets the shim of SftpClient.CreateText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.CreateTextStringEncoding">
            <summary>Sets the shim of SftpClient.CreateText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.DeleteDirectoryString">
            <summary>Sets the shim of SftpClient.DeleteDirectory(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.DeleteFileString">
            <summary>Sets the shim of SftpClient.DeleteFile(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.DeleteString">
            <summary>Sets the shim of SftpClient.Delete(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.DisposeBoolean">
            <summary>Sets the shim of SftpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.DownloadFileStringStreamActionOfUInt64">
            <summary>Sets the shim of SftpClient.DownloadFile(String path, Stream output, Action`1&lt;UInt64&gt; downloadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.EndDownloadFileIAsyncResult">
            <summary>Sets the shim of SftpClient.EndDownloadFile(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.EndListDirectoryIAsyncResult">
            <summary>Sets the shim of SftpClient.EndListDirectory(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.EndSynchronizeDirectoriesIAsyncResult">
            <summary>Sets the shim of SftpClient.EndSynchronizeDirectories(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.EndUploadFileIAsyncResult">
            <summary>Sets the shim of SftpClient.EndUploadFile(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ExecuteThreadAction">
            <summary>Sets the shim of SftpClient.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ExistsString">
            <summary>Sets the shim of SftpClient.Exists(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetAttributesString">
            <summary>Sets the shim of SftpClient.GetAttributes(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetLastAccessTimeString">
            <summary>Sets the shim of SftpClient.GetLastAccessTime(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetLastAccessTimeUtcString">
            <summary>Sets the shim of SftpClient.GetLastAccessTimeUtc(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetLastWriteTimeString">
            <summary>Sets the shim of SftpClient.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetLastWriteTimeUtcString">
            <summary>Sets the shim of SftpClient.GetLastWriteTimeUtc(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetStatusString">
            <summary>Sets the shim of SftpClient.GetStatus(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.GetString">
            <summary>Sets the shim of SftpClient.Get(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.InternalDownloadFileStringStreamSftpDownloadAsyncResultActionOfUInt64">
            <summary>Sets the shim of SftpClient.InternalDownloadFile(String path, Stream output, SftpDownloadAsyncResult asyncResult, Action`1&lt;UInt64&gt; downloadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.InternalListDirectoryStringActionOfInt32">
            <summary>Sets the shim of SftpClient.InternalListDirectory(String path, Action`1&lt;Int32&gt; listCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.InternalSynchronizeDirectoriesStringStringStringSftpSynchronizeDirectoriesAsyncResult">
            <summary>Sets the shim of SftpClient.InternalSynchronizeDirectories(String sourcePath, String destinationPath, String searchPattern, SftpSynchronizeDirectoriesAsyncResult asynchResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ListDirectoryStringActionOfInt32">
            <summary>Sets the shim of SftpClient.ListDirectory(String path, Action`1&lt;Int32&gt; listCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OnConnected">
            <summary>Sets the shim of SftpClient.OnConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OnDisconnecting">
            <summary>Sets the shim of SftpClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OpenReadString">
            <summary>Sets the shim of SftpClient.OpenRead(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OpenStringFileMode">
            <summary>Sets the shim of SftpClient.Open(String path, FileMode mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OpenStringFileModeFileAccess">
            <summary>Sets the shim of SftpClient.Open(String path, FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OpenTextString">
            <summary>Sets the shim of SftpClient.OpenText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OpenWriteString">
            <summary>Sets the shim of SftpClient.OpenWrite(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OperationTimeoutGet">
            <summary>Sets the shim of SftpClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of SftpClient.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ProtocolVersionGet">
            <summary>Sets the shim of SftpClient.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ProtocolVersionSetInt32">
            <summary>Sets the shim of SftpClient.set_ProtocolVersion(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadAllBytesString">
            <summary>Sets the shim of SftpClient.ReadAllBytes(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadAllLinesString">
            <summary>Sets the shim of SftpClient.ReadAllLines(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadAllLinesStringEncoding">
            <summary>Sets the shim of SftpClient.ReadAllLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadAllTextString">
            <summary>Sets the shim of SftpClient.ReadAllText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadAllTextStringEncoding">
            <summary>Sets the shim of SftpClient.ReadAllText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadLinesString">
            <summary>Sets the shim of SftpClient.ReadLines(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.ReadLinesStringEncoding">
            <summary>Sets the shim of SftpClient.ReadLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.RenameFileStringString">
            <summary>Sets the shim of SftpClient.RenameFile(String oldPath, String newPath)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.RenameFileStringStringBoolean">
            <summary>Sets the shim of SftpClient.RenameFile(String oldPath, String newPath, Boolean isPosix)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SetAttributesStringSftpFileAttributes">
            <summary>Sets the shim of SftpClient.SetAttributes(String path, SftpFileAttributes fileAttributes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SetLastAccessTimeStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastAccessTime(String path, DateTime lastAccessTime)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SetLastAccessTimeUtcStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastAccessTimeUtc(String path, DateTime lastAccessTimeUtc)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SetLastWriteTimeStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastWriteTime(String path, DateTime lastWriteTime)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SetLastWriteTimeUtcStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SymbolicLinkStringString">
            <summary>Sets the shim of SftpClient.SymbolicLink(String path, String linkPath)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.SynchronizeDirectoriesStringStringString">
            <summary>Sets the shim of SftpClient.SynchronizeDirectories(String sourcePath, String destinationPath, String searchPattern)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.UploadFileStreamStringActionOfUInt64">
            <summary>Sets the shim of SftpClient.UploadFile(Stream input, String path, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.UploadFileStreamStringBooleanActionOfUInt64">
            <summary>Sets the shim of SftpClient.UploadFile(Stream input, String path, Boolean canOverride, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WorkingDirectoryGet">
            <summary>Sets the shim of SftpClient.get_WorkingDirectory()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllBytesStringByteArray">
            <summary>Sets the shim of SftpClient.WriteAllBytes(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllLinesStringIEnumerableOfString">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllLinesStringIEnumerableOfStringEncoding">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllLinesStringStringArray">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, String[] contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllLinesStringStringArrayEncoding">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, String[] contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllTextStringString">
            <summary>Sets the shim of SftpClient.WriteAllText(String path, String contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.WriteAllTextStringStringEncoding">
            <summary>Sets the shim of SftpClient.WriteAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSftpClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.AppendAllLinesStringIEnumerableOfString">
            <summary>Sets the shim of SftpClient.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.AppendAllLinesStringIEnumerableOfStringEncoding">
            <summary>Sets the shim of SftpClient.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.AppendAllTextStringString">
            <summary>Sets the shim of SftpClient.AppendAllText(String path, String contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.AppendAllTextStringStringEncoding">
            <summary>Sets the shim of SftpClient.AppendAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.AppendTextString">
            <summary>Sets the shim of SftpClient.AppendText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.AppendTextStringEncoding">
            <summary>Sets the shim of SftpClient.AppendText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginDownloadFileStringStream">
            <summary>Sets the shim of SftpClient.BeginDownloadFile(String path, Stream output)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginDownloadFileStringStreamAsyncCallback">
            <summary>Sets the shim of SftpClient.BeginDownloadFile(String path, Stream output, AsyncCallback asyncCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginDownloadFileStringStreamAsyncCallbackObjectActionOfUInt64">
            <summary>Sets the shim of SftpClient.BeginDownloadFile(String path, Stream output, AsyncCallback asyncCallback, Object state, Action`1&lt;UInt64&gt; downloadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginListDirectoryStringAsyncCallbackObjectActionOfInt32">
            <summary>Sets the shim of SftpClient.BeginListDirectory(String path, AsyncCallback asyncCallback, Object state, Action`1&lt;Int32&gt; listCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginSynchronizeDirectoriesStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of SftpClient.BeginSynchronizeDirectories(String sourcePath, String destinationPath, String searchPattern, AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginUploadFileStreamString">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginUploadFileStreamStringAsyncCallback">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path, AsyncCallback asyncCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginUploadFileStreamStringAsyncCallbackObjectActionOfUInt64">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path, AsyncCallback asyncCallback, Object state, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BeginUploadFileStreamStringBooleanAsyncCallbackObjectActionOfUInt64">
            <summary>Sets the shim of SftpClient.BeginUploadFile(Stream input, String path, Boolean canOverride, AsyncCallback asyncCallback, Object state, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BufferSizeGet">
            <summary>Sets the shim of SftpClient.get_BufferSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.BufferSizeSetUInt32">
            <summary>Sets the shim of SftpClient.set_BufferSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ChangeDirectoryString">
            <summary>Sets the shim of SftpClient.ChangeDirectory(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ChangePermissionsStringInt16">
            <summary>Sets the shim of SftpClient.ChangePermissions(String path, Int16 mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.CreateDirectoryString">
            <summary>Sets the shim of SftpClient.CreateDirectory(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.CreateString">
            <summary>Sets the shim of SftpClient.Create(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.CreateStringInt32">
            <summary>Sets the shim of SftpClient.Create(String path, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.CreateTextString">
            <summary>Sets the shim of SftpClient.CreateText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.CreateTextStringEncoding">
            <summary>Sets the shim of SftpClient.CreateText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.DeleteDirectoryString">
            <summary>Sets the shim of SftpClient.DeleteDirectory(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.DeleteFileString">
            <summary>Sets the shim of SftpClient.DeleteFile(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.DeleteString">
            <summary>Sets the shim of SftpClient.Delete(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SftpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.DownloadFileStringStreamActionOfUInt64">
            <summary>Sets the shim of SftpClient.DownloadFile(String path, Stream output, Action`1&lt;UInt64&gt; downloadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.EndDownloadFileIAsyncResult">
            <summary>Sets the shim of SftpClient.EndDownloadFile(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.EndListDirectoryIAsyncResult">
            <summary>Sets the shim of SftpClient.EndListDirectory(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.EndSynchronizeDirectoriesIAsyncResult">
            <summary>Sets the shim of SftpClient.EndSynchronizeDirectories(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.EndUploadFileIAsyncResult">
            <summary>Sets the shim of SftpClient.EndUploadFile(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of SftpClient.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ExistsString">
            <summary>Sets the shim of SftpClient.Exists(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetAttributesString">
            <summary>Sets the shim of SftpClient.GetAttributes(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetLastAccessTimeString">
            <summary>Sets the shim of SftpClient.GetLastAccessTime(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetLastAccessTimeUtcString">
            <summary>Sets the shim of SftpClient.GetLastAccessTimeUtc(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetLastWriteTimeString">
            <summary>Sets the shim of SftpClient.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetLastWriteTimeUtcString">
            <summary>Sets the shim of SftpClient.GetLastWriteTimeUtc(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetStatusString">
            <summary>Sets the shim of SftpClient.GetStatus(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.GetString">
            <summary>Sets the shim of SftpClient.Get(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.InternalDownloadFileStringStreamSftpDownloadAsyncResultActionOfUInt64">
            <summary>Sets the shim of SftpClient.InternalDownloadFile(String path, Stream output, SftpDownloadAsyncResult asyncResult, Action`1&lt;UInt64&gt; downloadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.InternalListDirectoryStringActionOfInt32">
            <summary>Sets the shim of SftpClient.InternalListDirectory(String path, Action`1&lt;Int32&gt; listCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.InternalSynchronizeDirectoriesStringStringStringSftpSynchronizeDirectoriesAsyncResult">
            <summary>Sets the shim of SftpClient.InternalSynchronizeDirectories(String sourcePath, String destinationPath, String searchPattern, SftpSynchronizeDirectoriesAsyncResult asynchResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ListDirectoryStringActionOfInt32">
            <summary>Sets the shim of SftpClient.ListDirectory(String path, Action`1&lt;Int32&gt; listCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OnConnected">
            <summary>Sets the shim of SftpClient.OnConnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OnDisconnecting">
            <summary>Sets the shim of SftpClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OpenReadString">
            <summary>Sets the shim of SftpClient.OpenRead(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OpenStringFileMode">
            <summary>Sets the shim of SftpClient.Open(String path, FileMode mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OpenStringFileModeFileAccess">
            <summary>Sets the shim of SftpClient.Open(String path, FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OpenTextString">
            <summary>Sets the shim of SftpClient.OpenText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OpenWriteString">
            <summary>Sets the shim of SftpClient.OpenWrite(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of SftpClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of SftpClient.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ProtocolVersionGet">
            <summary>Sets the shim of SftpClient.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ProtocolVersionSetInt32">
            <summary>Sets the shim of SftpClient.set_ProtocolVersion(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadAllBytesString">
            <summary>Sets the shim of SftpClient.ReadAllBytes(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadAllLinesString">
            <summary>Sets the shim of SftpClient.ReadAllLines(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadAllLinesStringEncoding">
            <summary>Sets the shim of SftpClient.ReadAllLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadAllTextString">
            <summary>Sets the shim of SftpClient.ReadAllText(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadAllTextStringEncoding">
            <summary>Sets the shim of SftpClient.ReadAllText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadLinesString">
            <summary>Sets the shim of SftpClient.ReadLines(String path)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.ReadLinesStringEncoding">
            <summary>Sets the shim of SftpClient.ReadLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.RenameFileStringString">
            <summary>Sets the shim of SftpClient.RenameFile(String oldPath, String newPath)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.RenameFileStringStringBoolean">
            <summary>Sets the shim of SftpClient.RenameFile(String oldPath, String newPath, Boolean isPosix)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SetAttributesStringSftpFileAttributes">
            <summary>Sets the shim of SftpClient.SetAttributes(String path, SftpFileAttributes fileAttributes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SetLastAccessTimeStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastAccessTime(String path, DateTime lastAccessTime)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SetLastAccessTimeUtcStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastAccessTimeUtc(String path, DateTime lastAccessTimeUtc)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SetLastWriteTimeStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastWriteTime(String path, DateTime lastWriteTime)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SetLastWriteTimeUtcStringDateTime">
            <summary>Sets the shim of SftpClient.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SymbolicLinkStringString">
            <summary>Sets the shim of SftpClient.SymbolicLink(String path, String linkPath)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.SynchronizeDirectoriesStringStringString">
            <summary>Sets the shim of SftpClient.SynchronizeDirectories(String sourcePath, String destinationPath, String searchPattern)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.UploadFileStreamStringActionOfUInt64">
            <summary>Sets the shim of SftpClient.UploadFile(Stream input, String path, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.UploadFileStreamStringBooleanActionOfUInt64">
            <summary>Sets the shim of SftpClient.UploadFile(Stream input, String path, Boolean canOverride, Action`1&lt;UInt64&gt; uploadCallback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WorkingDirectoryGet">
            <summary>Sets the shim of SftpClient.get_WorkingDirectory()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllBytesStringByteArray">
            <summary>Sets the shim of SftpClient.WriteAllBytes(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllLinesStringIEnumerableOfString">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllLinesStringIEnumerableOfStringEncoding">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllLinesStringStringArray">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, String[] contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllLinesStringStringArrayEncoding">
            <summary>Sets the shim of SftpClient.WriteAllLines(String path, String[] contents, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllTextStringString">
            <summary>Sets the shim of SftpClient.WriteAllText(String path, String contents)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSftpClient.AllInstances.WriteAllTextStringStringEncoding">
            <summary>Sets the shim of SftpClient.WriteAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimShell">
            <summary>Shim type of Renci.SshNet.Shell</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShell.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShell.#ctor(Renci.SshNet.Shell)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShell.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShell.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShell.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.ConstructorSessionStreamStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32Int32">
            <summary>Sets the shim of Shell.Shell(Session session, Stream input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.Dispose">
            <summary>Sets the shim of Shell.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.DisposeBoolean">
            <summary>Sets the shim of Shell.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Shell.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Shell.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.ExecuteThreadAction">
            <summary>Sets the shim of Shell.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.IsStartedGet">
            <summary>Sets the shim of Shell.get_IsStarted()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.IsStartedSetBoolean">
            <summary>Sets the shim of Shell.set_IsStarted(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.RaiseErrorExceptionEventArgs">
            <summary>Sets the shim of Shell.RaiseError(ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of Shell.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of Shell.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.Start">
            <summary>Sets the shim of Shell.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StartedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Started(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StartedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Started(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StartingAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Starting(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StartingRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Starting(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.Stop">
            <summary>Sets the shim of Shell.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StoppedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Stopped(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StoppedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Stopped(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StoppingAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Stopping(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.StoppingRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Stopping(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell._Channel_Closedb__5">
            <summary>Sets the shim of Shell.&lt;Channel_Closed&gt;b__5()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell._Channel_Closedb__6">
            <summary>Sets the shim of Shell.&lt;Channel_Closed&gt;b__6()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell._Startb__0">
            <summary>Sets the shim of Shell.&lt;Start&gt;b__0()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimShell.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.Dispose">
            <summary>Sets the shim of Shell.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Shell.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Shell.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of Shell.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of Shell.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.IsStartedGet">
            <summary>Sets the shim of Shell.get_IsStarted()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.IsStartedSetBoolean">
            <summary>Sets the shim of Shell.set_IsStarted(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.RaiseErrorExceptionEventArgs">
            <summary>Sets the shim of Shell.RaiseError(ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of Shell.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of Shell.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.Start">
            <summary>Sets the shim of Shell.Start()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StartedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Started(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StartedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Started(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StartingAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Starting(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StartingRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Starting(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.Stop">
            <summary>Sets the shim of Shell.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StoppedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Stopped(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StoppedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Stopped(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StoppingAddEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.add_Stopping(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances.StoppingRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of Shell.remove_Stopping(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances._Channel_Closedb__5">
            <summary>Sets the shim of Shell.&lt;Channel_Closed&gt;b__5()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances._Channel_Closedb__6">
            <summary>Sets the shim of Shell.&lt;Channel_Closed&gt;b__6()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShell.AllInstances._Startb__0">
            <summary>Sets the shim of Shell.&lt;Start&gt;b__0()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimShellStream">
            <summary>Shim type of Renci.SshNet.ShellStream</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShellStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShellStream.#ctor(Renci.SshNet.ShellStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShellStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShellStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimShellStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.BeginExpectAsyncCallbackExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(AsyncCallback callback, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.BeginExpectAsyncCallbackObjectExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(AsyncCallback callback, Object state, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.BeginExpectExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.BeginExpectTimeSpanAsyncCallbackObjectExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(TimeSpan timeout, AsyncCallback callback, Object state, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.CanReadGet">
            <summary>Sets the shim of ShellStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.CanSeekGet">
            <summary>Sets the shim of ShellStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.CanWriteGet">
            <summary>Sets the shim of ShellStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ConstructorSessionStringUInt32UInt32UInt32UInt32Int32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of ShellStream.ShellStream(Session session, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, Int32 maxLines, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModeValues)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.DataAvailableGet">
            <summary>Sets the shim of ShellStream.get_DataAvailable()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.DataReceivedAddEventHandlerOfShellDataEventArgs">
            <summary>Sets the shim of ShellStream.add_DataReceived(EventHandler`1&lt;ShellDataEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.DataReceivedRemoveEventHandlerOfShellDataEventArgs">
            <summary>Sets the shim of ShellStream.remove_DataReceived(EventHandler`1&lt;ShellDataEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.DisposeBoolean">
            <summary>Sets the shim of ShellStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.EndExpectIAsyncResult">
            <summary>Sets the shim of ShellStream.EndExpect(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ShellStream.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ShellStream.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExecuteThreadAction">
            <summary>Sets the shim of ShellStream.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExpectExpectActionArray">
            <summary>Sets the shim of ShellStream.Expect(ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExpectRegex">
            <summary>Sets the shim of ShellStream.Expect(Regex regex)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExpectRegexTimeSpan">
            <summary>Sets the shim of ShellStream.Expect(Regex regex, TimeSpan timeout)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExpectString">
            <summary>Sets the shim of ShellStream.Expect(String text)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExpectStringTimeSpan">
            <summary>Sets the shim of ShellStream.Expect(String text, TimeSpan timeout)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ExpectTimeSpanExpectActionArray">
            <summary>Sets the shim of ShellStream.Expect(TimeSpan timeout, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.Flush">
            <summary>Sets the shim of ShellStream.Flush()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.LengthGet">
            <summary>Sets the shim of ShellStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.OnDataReceivedByteArray">
            <summary>Sets the shim of ShellStream.OnDataReceived(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.OnRaiseErrorExceptionEventArgs">
            <summary>Sets the shim of ShellStream.OnRaiseError(ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.PositionGet">
            <summary>Sets the shim of ShellStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.PositionSetInt64">
            <summary>Sets the shim of ShellStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.Read">
            <summary>Sets the shim of ShellStream.Read()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of ShellStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ReadLine">
            <summary>Sets the shim of ShellStream.ReadLine()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.ReadLineTimeSpan">
            <summary>Sets the shim of ShellStream.ReadLine(TimeSpan timeout)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of ShellStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of ShellStream.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of ShellStream.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.SetLengthInt64">
            <summary>Sets the shim of ShellStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.WaitHandleWaitHandle">
            <summary>Sets the shim of ShellStream.WaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of ShellStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.WriteLineString">
            <summary>Sets the shim of ShellStream.WriteLine(String line)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.WriteString">
            <summary>Sets the shim of ShellStream.Write(String text)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimShellStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.BeginExpectAsyncCallbackExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(AsyncCallback callback, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.BeginExpectAsyncCallbackObjectExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(AsyncCallback callback, Object state, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.BeginExpectExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.BeginExpectTimeSpanAsyncCallbackObjectExpectActionArray">
            <summary>Sets the shim of ShellStream.BeginExpect(TimeSpan timeout, AsyncCallback callback, Object state, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.CanReadGet">
            <summary>Sets the shim of ShellStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of ShellStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of ShellStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.DataAvailableGet">
            <summary>Sets the shim of ShellStream.get_DataAvailable()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.DataReceivedAddEventHandlerOfShellDataEventArgs">
            <summary>Sets the shim of ShellStream.add_DataReceived(EventHandler`1&lt;ShellDataEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.DataReceivedRemoveEventHandlerOfShellDataEventArgs">
            <summary>Sets the shim of ShellStream.remove_DataReceived(EventHandler`1&lt;ShellDataEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ShellStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.EndExpectIAsyncResult">
            <summary>Sets the shim of ShellStream.EndExpect(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ShellStream.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of ShellStream.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of ShellStream.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExpectExpectActionArray">
            <summary>Sets the shim of ShellStream.Expect(ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExpectRegex">
            <summary>Sets the shim of ShellStream.Expect(Regex regex)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExpectRegexTimeSpan">
            <summary>Sets the shim of ShellStream.Expect(Regex regex, TimeSpan timeout)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExpectString">
            <summary>Sets the shim of ShellStream.Expect(String text)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExpectStringTimeSpan">
            <summary>Sets the shim of ShellStream.Expect(String text, TimeSpan timeout)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ExpectTimeSpanExpectActionArray">
            <summary>Sets the shim of ShellStream.Expect(TimeSpan timeout, ExpectAction[] expectActions)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.Flush">
            <summary>Sets the shim of ShellStream.Flush()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.LengthGet">
            <summary>Sets the shim of ShellStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.OnDataReceivedByteArray">
            <summary>Sets the shim of ShellStream.OnDataReceived(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.OnRaiseErrorExceptionEventArgs">
            <summary>Sets the shim of ShellStream.OnRaiseError(ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.PositionGet">
            <summary>Sets the shim of ShellStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of ShellStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.Read">
            <summary>Sets the shim of ShellStream.Read()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of ShellStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ReadLine">
            <summary>Sets the shim of ShellStream.ReadLine()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.ReadLineTimeSpan">
            <summary>Sets the shim of ShellStream.ReadLine(TimeSpan timeout)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of ShellStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of ShellStream.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of ShellStream.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of ShellStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.WaitHandleWaitHandle">
            <summary>Sets the shim of ShellStream.WaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of ShellStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.WriteLineString">
            <summary>Sets the shim of ShellStream.WriteLine(String line)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimShellStream.AllInstances.WriteString">
            <summary>Sets the shim of ShellStream.Write(String text)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSshClient">
            <summary>Shim type of Renci.SshNet.SshClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshClient.#ctor(Renci.SshNet.SshClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AddForwardedPortForwardedPort">
            <summary>Sets the shim of SshClient.AddForwardedPort(ForwardedPort port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.ConstructorConnectionInfo">
            <summary>Sets the shim of SshClient.SshClient(ConnectionInfo connectionInfo)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.ConstructorStringInt32StringPrivateKeyFileArray">
            <summary>Sets the shim of SshClient.SshClient(String host, Int32 port, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.ConstructorStringInt32StringString">
            <summary>Sets the shim of SshClient.SshClient(String host, Int32 port, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.ConstructorStringStringPrivateKeyFileArray">
            <summary>Sets the shim of SshClient.SshClient(String host, String username, PrivateKeyFile[] keyFiles)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.ConstructorStringStringString">
            <summary>Sets the shim of SshClient.SshClient(String host, String username, String password)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateCommandString">
            <summary>Sets the shim of SshClient.CreateCommand(String commandText)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateCommandStringEncoding">
            <summary>Sets the shim of SshClient.CreateCommand(String commandText, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellEncodingStringStreamStream">
            <summary>Sets the shim of SshClient.CreateShell(Encoding encoding, String input, Stream output, Stream extendedOutput)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellEncodingStringStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of SshClient.CreateShell(Encoding encoding, String input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellEncodingStringStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32Int32">
            <summary>Sets the shim of SshClient.CreateShell(Encoding encoding, String input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellStreamStreamStream">
            <summary>Sets the shim of SshClient.CreateShell(Stream input, Stream output, Stream extendedOutput)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellStreamStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of SshClient.CreateShell(Stream input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellStreamStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32Int32">
            <summary>Sets the shim of SshClient.CreateShell(Stream input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellStreamStringUInt32UInt32UInt32UInt32Int32">
            <summary>Sets the shim of SshClient.CreateShellStream(String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.CreateShellStreamStringUInt32UInt32UInt32UInt32Int32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of SshClient.CreateShellStream(String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, Int32 bufferSize, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModeValues)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.DisposeBoolean">
            <summary>Sets the shim of SshClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.ForwardedPortsGet">
            <summary>Sets the shim of SshClient.get_ForwardedPorts()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.OnDisconnected">
            <summary>Sets the shim of SshClient.OnDisconnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.OnDisconnecting">
            <summary>Sets the shim of SshClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.RemoveForwardedPortForwardedPort">
            <summary>Sets the shim of SshClient.RemoveForwardedPort(ForwardedPort port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.RunCommandString">
            <summary>Sets the shim of SshClient.RunCommand(String commandText)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSshClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.AddForwardedPortForwardedPort">
            <summary>Sets the shim of SshClient.AddForwardedPort(ForwardedPort port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateCommandString">
            <summary>Sets the shim of SshClient.CreateCommand(String commandText)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateCommandStringEncoding">
            <summary>Sets the shim of SshClient.CreateCommand(String commandText, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellEncodingStringStreamStream">
            <summary>Sets the shim of SshClient.CreateShell(Encoding encoding, String input, Stream output, Stream extendedOutput)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellEncodingStringStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of SshClient.CreateShell(Encoding encoding, String input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellEncodingStringStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32Int32">
            <summary>Sets the shim of SshClient.CreateShell(Encoding encoding, String input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellStreamStreamStream">
            <summary>Sets the shim of SshClient.CreateShell(Stream input, Stream output, Stream extendedOutput)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellStreamStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of SshClient.CreateShell(Stream input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellStreamStreamStreamStringUInt32UInt32UInt32UInt32IDictionaryOfTerminalModesUInt32Int32">
            <summary>Sets the shim of SshClient.CreateShell(Stream input, Stream output, Stream extendedOutput, String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModes, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellStreamStringUInt32UInt32UInt32UInt32Int32">
            <summary>Sets the shim of SshClient.CreateShellStream(String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, Int32 bufferSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.CreateShellStreamStringUInt32UInt32UInt32UInt32Int32IDictionaryOfTerminalModesUInt32">
            <summary>Sets the shim of SshClient.CreateShellStream(String terminalName, UInt32 columns, UInt32 rows, UInt32 width, UInt32 height, Int32 bufferSize, IDictionary`2&lt;TerminalModes,UInt32&gt; terminalModeValues)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SshClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.ForwardedPortsGet">
            <summary>Sets the shim of SshClient.get_ForwardedPorts()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.OnDisconnected">
            <summary>Sets the shim of SshClient.OnDisconnected()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.OnDisconnecting">
            <summary>Sets the shim of SshClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.RemoveForwardedPortForwardedPort">
            <summary>Sets the shim of SshClient.RemoveForwardedPort(ForwardedPort port)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshClient.AllInstances.RunCommandString">
            <summary>Sets the shim of SshClient.RunCommand(String commandText)</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSshCommand">
            <summary>Shim type of Renci.SshNet.SshCommand</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshCommand.#ctor(Renci.SshNet.SshCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.ShimSshCommand.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.BeginExecute">
            <summary>Sets the shim of SshCommand.BeginExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.BeginExecuteAsyncCallback">
            <summary>Sets the shim of SshCommand.BeginExecute(AsyncCallback callback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.BeginExecuteAsyncCallbackObject">
            <summary>Sets the shim of SshCommand.BeginExecute(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.BeginExecuteStringAsyncCallbackObject">
            <summary>Sets the shim of SshCommand.BeginExecute(String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.CancelAsync">
            <summary>Sets the shim of SshCommand.CancelAsync()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.CommandTextGet">
            <summary>Sets the shim of SshCommand.get_CommandText()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.CommandTextSetString">
            <summary>Sets the shim of SshCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.CommandTimeoutGet">
            <summary>Sets the shim of SshCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.CommandTimeoutSetTimeSpan">
            <summary>Sets the shim of SshCommand.set_CommandTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ConstructorSessionString">
            <summary>Sets the shim of SshCommand.SshCommand(Session session, String commandText)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.CreateChannel">
            <summary>Sets the shim of SshCommand.CreateChannel()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.Dispose">
            <summary>Sets the shim of SshCommand.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.DisposeBoolean">
            <summary>Sets the shim of SshCommand.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.EndExecuteIAsyncResult">
            <summary>Sets the shim of SshCommand.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ErrorGet">
            <summary>Sets the shim of SshCommand.get_Error()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.Execute">
            <summary>Sets the shim of SshCommand.Execute()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ExecuteString">
            <summary>Sets the shim of SshCommand.Execute(String commandText)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ExecuteThreadAction">
            <summary>Sets the shim of SshCommand.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ExitStatusGet">
            <summary>Sets the shim of SshCommand.get_ExitStatus()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ExitStatusSetInt32">
            <summary>Sets the shim of SshCommand.set_ExitStatus(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ExtendedOutputStreamGet">
            <summary>Sets the shim of SshCommand.get_ExtendedOutputStream()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ExtendedOutputStreamSetStream">
            <summary>Sets the shim of SshCommand.set_ExtendedOutputStream(Stream value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.OutputStreamGet">
            <summary>Sets the shim of SshCommand.get_OutputStream()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.OutputStreamSetStream">
            <summary>Sets the shim of SshCommand.set_OutputStream(Stream value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.ResultGet">
            <summary>Sets the shim of SshCommand.get_Result()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of SshCommand.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of SshCommand.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.WaitHandleWaitHandle">
            <summary>Sets the shim of SshCommand.WaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand._Channel_Closedb__2">
            <summary>Sets the shim of SshCommand.&lt;Channel_Closed&gt;b__2()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.ShimSshCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.BeginExecute">
            <summary>Sets the shim of SshCommand.BeginExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.BeginExecuteAsyncCallback">
            <summary>Sets the shim of SshCommand.BeginExecute(AsyncCallback callback)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.BeginExecuteAsyncCallbackObject">
            <summary>Sets the shim of SshCommand.BeginExecute(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.BeginExecuteStringAsyncCallbackObject">
            <summary>Sets the shim of SshCommand.BeginExecute(String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.CancelAsync">
            <summary>Sets the shim of SshCommand.CancelAsync()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.CommandTextGet">
            <summary>Sets the shim of SshCommand.get_CommandText()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.CommandTextSetString">
            <summary>Sets the shim of SshCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of SshCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.CommandTimeoutSetTimeSpan">
            <summary>Sets the shim of SshCommand.set_CommandTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.CreateChannel">
            <summary>Sets the shim of SshCommand.CreateChannel()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.Dispose">
            <summary>Sets the shim of SshCommand.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SshCommand.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.EndExecuteIAsyncResult">
            <summary>Sets the shim of SshCommand.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ErrorGet">
            <summary>Sets the shim of SshCommand.get_Error()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.Execute">
            <summary>Sets the shim of SshCommand.Execute()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ExecuteString">
            <summary>Sets the shim of SshCommand.Execute(String commandText)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ExecuteThreadAction">
            <summary>Sets the shim of SshCommand.ExecuteThread(Action action)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ExitStatusGet">
            <summary>Sets the shim of SshCommand.get_ExitStatus()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ExitStatusSetInt32">
            <summary>Sets the shim of SshCommand.set_ExitStatus(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ExtendedOutputStreamGet">
            <summary>Sets the shim of SshCommand.get_ExtendedOutputStream()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ExtendedOutputStreamSetStream">
            <summary>Sets the shim of SshCommand.set_ExtendedOutputStream(Stream value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.OutputStreamGet">
            <summary>Sets the shim of SshCommand.get_OutputStream()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.OutputStreamSetStream">
            <summary>Sets the shim of SshCommand.set_OutputStream(Stream value)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.ResultGet">
            <summary>Sets the shim of SshCommand.get_Result()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of SshCommand.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of SshCommand.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances.WaitHandleWaitHandle">
            <summary>Sets the shim of SshCommand.WaitHandle(WaitHandle waitHandle)</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.ShimSshCommand.AllInstances._Channel_Closedb__2">
            <summary>Sets the shim of SshCommand.&lt;Channel_Closed&gt;b__2()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubAuthenticationMethod">
            <summary>Stub type of Renci.SshNet.AuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubAuthenticationMethod.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>Sets the stub of AuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubAuthenticationMethod.AuthenticateSession">
            <summary>Sets the stub of AuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubAuthenticationMethod.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationMethod</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubAuthenticationMethod.NameGet">
            <summary>Sets the stub of AuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubAuthenticationMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubAuthenticationMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubAuthenticationMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubAuthenticationMethod.Name">
            <summary>Sets the stub of AuthenticationMethod.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubBaseClient">
            <summary>Stub type of Renci.SshNet.BaseClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.Dispose(System.Boolean)">
            <summary>Sets the stub of BaseClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubBaseClient.DisposeBoolean">
            <summary>Sets the stub of BaseClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.InitializeStub">
            <summary>Initializes a new instance of type StubBaseClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.OnConnected">
            <summary>Sets the stub of BaseClient.OnConnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubBaseClient.OnConnected01">
            <summary>Sets the stub of BaseClient.OnConnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.OnConnecting">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubBaseClient.OnConnecting01">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.OnDisconnected">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubBaseClient.OnDisconnected01">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubBaseClient.OnDisconnecting">
            <summary>Sets the stub of BaseClient.OnDisconnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubBaseClient.OnDisconnecting01">
            <summary>Sets the stub of BaseClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubBaseClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubBaseClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubBaseClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubCipherInfo">
            <summary>Stub type of Renci.SshNet.CipherInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubCipherInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Byte[],Renci.SshNet.Security.Cryptography.Cipher})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubCipherInfo.InitializeStub">
            <summary>Initializes a new instance of type StubCipherInfo</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubCipherInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubCipherInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubCipherInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubConnectionInfo">
            <summary>Stub type of Renci.SshNet.ConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubConnectionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionInfo</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubConnectionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubConnectionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubConnectionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubExpectAction">
            <summary>Stub type of Renci.SshNet.ExpectAction</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubExpectAction.#ctor(System.Text.RegularExpressions.Regex,System.Action{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubExpectAction.#ctor(System.String,System.Action{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubExpectAction.InitializeStub">
            <summary>Initializes a new instance of type StubExpectAction</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubExpectAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubExpectAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubExpectAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubForwardedPort">
            <summary>Stub type of Renci.SshNet.ForwardedPort</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPort.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPort.InitializeStub">
            <summary>Initializes a new instance of type StubForwardedPort</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPort.Start">
            <summary>Sets the stub of ForwardedPort.Start()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPort.Start01">
            <summary>Sets the stub of ForwardedPort.Start()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPort.Stop">
            <summary>Sets the stub of ForwardedPort.Stop()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPort.Stop01">
            <summary>Sets the stub of ForwardedPort.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPort.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPort.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPort.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubForwardedPortDynamic">
            <summary>Stub type of Renci.SshNet.ForwardedPortDynamic</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortDynamic.#ctor(System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortDynamic.#ctor(System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortDynamic.Dispose(System.Boolean)">
            <summary>Sets the stub of ForwardedPortDynamic.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortDynamic.DisposeBoolean">
            <summary>Sets the stub of ForwardedPortDynamic.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortDynamic.InitializeStub">
            <summary>Initializes a new instance of type StubForwardedPortDynamic</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortDynamic.Start">
            <summary>Sets the stub of ForwardedPortDynamic.Start()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortDynamic.Start01">
            <summary>Sets the stub of ForwardedPortDynamic.Start()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortDynamic.Stop">
            <summary>Sets the stub of ForwardedPortDynamic.Stop()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortDynamic.Stop01">
            <summary>Sets the stub of ForwardedPortDynamic.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortDynamic.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortDynamic.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortDynamic.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubForwardedPortLocal">
            <summary>Stub type of Renci.SshNet.ForwardedPortLocal</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortLocal.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortLocal.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortLocal.Dispose(System.Boolean)">
            <summary>Sets the stub of ForwardedPortLocal.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortLocal.DisposeBoolean">
            <summary>Sets the stub of ForwardedPortLocal.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortLocal.InitializeStub">
            <summary>Initializes a new instance of type StubForwardedPortLocal</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortLocal.Start">
            <summary>Sets the stub of ForwardedPortLocal.Start()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortLocal.Start01">
            <summary>Sets the stub of ForwardedPortLocal.Start()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortLocal.Stop">
            <summary>Sets the stub of ForwardedPortLocal.Stop()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortLocal.Stop01">
            <summary>Sets the stub of ForwardedPortLocal.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortLocal.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortLocal.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortLocal.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubForwardedPortRemote">
            <summary>Stub type of Renci.SshNet.ForwardedPortRemote</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.#ctor(System.Net.IPAddress,System.UInt32,System.Net.IPAddress,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.Dispose(System.Boolean)">
            <summary>Sets the stub of ForwardedPortRemote.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortRemote.DisposeBoolean">
            <summary>Sets the stub of ForwardedPortRemote.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.InitializeStub">
            <summary>Initializes a new instance of type StubForwardedPortRemote</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.Start">
            <summary>Sets the stub of ForwardedPortRemote.Start()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortRemote.Start01">
            <summary>Sets the stub of ForwardedPortRemote.Start()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubForwardedPortRemote.Stop">
            <summary>Sets the stub of ForwardedPortRemote.Stop()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubForwardedPortRemote.Stop01">
            <summary>Sets the stub of ForwardedPortRemote.Stop()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortRemote.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortRemote.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubForwardedPortRemote.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubHashInfo">
            <summary>Stub type of Renci.SshNet.HashInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubHashInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Security.Cryptography.HashAlgorithm})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubHashInfo.InitializeStub">
            <summary>Initializes a new instance of type StubHashInfo</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubHashInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubHashInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubHashInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod">
            <summary>Stub type of Renci.SshNet.KeyboardInteractiveAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>Sets the stub of KeyboardInteractiveAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.AuthenticateSession">
            <summary>Sets the stub of KeyboardInteractiveAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyboardInteractiveAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.DisposeBoolean">
            <summary>Sets the stub of KeyboardInteractiveAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.InitializeStub">
            <summary>Initializes a new instance of type StubKeyboardInteractiveAuthenticationMethod</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.NameGet">
            <summary>Sets the stub of KeyboardInteractiveAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveAuthenticationMethod.Name">
            <summary>Sets the stub of KeyboardInteractiveAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo">
            <summary>Stub type of Renci.SshNet.KeyboardInteractiveConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyboardInteractiveConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.DisposeBoolean">
            <summary>Sets the stub of KeyboardInteractiveConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubKeyboardInteractiveConnectionInfo</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubKeyboardInteractiveConnectionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubMessageEventArgs`1">
            <summary>Stub type of Renci.SshNet.MessageEventArgs`1</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubMessageEventArgs`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubMessageEventArgs`1.InitializeStub">
            <summary>Initializes a new instance of type StubMessageEventArgs</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubMessageEventArgs`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubMessageEventArgs`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubMessageEventArgs`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubNetConfClient">
            <summary>Stub type of Renci.SshNet.NetConfClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.Dispose(System.Boolean)">
            <summary>Sets the stub of NetConfClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNetConfClient.DisposeBoolean">
            <summary>Sets the stub of NetConfClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.InitializeStub">
            <summary>Initializes a new instance of type StubNetConfClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.OnConnected">
            <summary>Sets the stub of NetConfClient.OnConnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNetConfClient.OnConnected01">
            <summary>Sets the stub of NetConfClient.OnConnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.OnConnecting">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNetConfClient.OnConnecting01">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.OnDisconnected">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNetConfClient.OnDisconnected01">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNetConfClient.OnDisconnecting">
            <summary>Sets the stub of NetConfClient.OnDisconnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNetConfClient.OnDisconnecting01">
            <summary>Sets the stub of NetConfClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNetConfClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNetConfClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNetConfClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubNoneAuthenticationMethod">
            <summary>Stub type of Renci.SshNet.NoneAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>Sets the stub of NoneAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.AuthenticateSession">
            <summary>Sets the stub of NoneAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.Dispose(System.Boolean)">
            <summary>Sets the stub of NoneAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.DisposeBoolean">
            <summary>Sets the stub of NoneAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.InitializeStub">
            <summary>Initializes a new instance of type StubNoneAuthenticationMethod</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.NameGet">
            <summary>Sets the stub of NoneAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubNoneAuthenticationMethod.Name">
            <summary>Sets the stub of NoneAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod">
            <summary>Stub type of Renci.SshNet.PasswordAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.#ctor(System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>Sets the stub of PasswordAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.AuthenticateSession">
            <summary>Sets the stub of PasswordAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.Dispose(System.Boolean)">
            <summary>Sets the stub of PasswordAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.DisposeBoolean">
            <summary>Sets the stub of PasswordAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.InitializeStub">
            <summary>Initializes a new instance of type StubPasswordAuthenticationMethod</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.NameGet">
            <summary>Sets the stub of PasswordAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordAuthenticationMethod.Name">
            <summary>Sets the stub of PasswordAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubPasswordConnectionInfo">
            <summary>Stub type of Renci.SshNet.PasswordConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.Dispose(System.Boolean)">
            <summary>Sets the stub of PasswordConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPasswordConnectionInfo.DisposeBoolean">
            <summary>Sets the stub of PasswordConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPasswordConnectionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubPasswordConnectionInfo</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordConnectionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordConnectionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPasswordConnectionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod">
            <summary>Stub type of Renci.SshNet.PrivateKeyAuthenticationMethod</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.#ctor(System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
            <summary>Sets the stub of PrivateKeyAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.AuthenticateSession">
            <summary>Sets the stub of PrivateKeyAuthenticationMethod.Authenticate(Session session)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.Dispose(System.Boolean)">
            <summary>Sets the stub of PrivateKeyAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.DisposeBoolean">
            <summary>Sets the stub of PrivateKeyAuthenticationMethod.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.InitializeStub">
            <summary>Initializes a new instance of type StubPrivateKeyAuthenticationMethod</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.NameGet">
            <summary>Sets the stub of PrivateKeyAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyAuthenticationMethod.Name">
            <summary>Sets the stub of PrivateKeyAuthenticationMethod.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo">
            <summary>Stub type of Renci.SshNet.PrivateKeyConnectionInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.Dispose(System.Boolean)">
            <summary>Sets the stub of PrivateKeyConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.DisposeBoolean">
            <summary>Sets the stub of PrivateKeyConnectionInfo.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.InitializeStub">
            <summary>Initializes a new instance of type StubPrivateKeyConnectionInfo</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyConnectionInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubPrivateKeyFile">
            <summary>Stub type of Renci.SshNet.PrivateKeyFile</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyFile.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyFile.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyFile.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyFile.#ctor(System.IO.Stream,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyFile.Dispose(System.Boolean)">
            <summary>Sets the stub of PrivateKeyFile.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubPrivateKeyFile.DisposeBoolean">
            <summary>Sets the stub of PrivateKeyFile.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubPrivateKeyFile.InitializeStub">
            <summary>Initializes a new instance of type StubPrivateKeyFile</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubPrivateKeyFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubScpClient">
            <summary>Stub type of Renci.SshNet.ScpClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.Dispose(System.Boolean)">
            <summary>Sets the stub of ScpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubScpClient.DisposeBoolean">
            <summary>Sets the stub of ScpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.InitializeStub">
            <summary>Initializes a new instance of type StubScpClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.OnConnected">
            <summary>Sets the stub of BaseClient.OnConnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubScpClient.OnConnected01">
            <summary>Sets the stub of BaseClient.OnConnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.OnConnecting">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubScpClient.OnConnecting01">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.OnDisconnected">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubScpClient.OnDisconnected01">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubScpClient.OnDisconnecting">
            <summary>Sets the stub of BaseClient.OnDisconnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubScpClient.OnDisconnecting01">
            <summary>Sets the stub of BaseClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubScpClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubScpClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubScpClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubSftpClient">
            <summary>Stub type of Renci.SshNet.SftpClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.Dispose(System.Boolean)">
            <summary>Sets the stub of SftpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSftpClient.DisposeBoolean">
            <summary>Sets the stub of SftpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.InitializeStub">
            <summary>Initializes a new instance of type StubSftpClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.OnConnected">
            <summary>Sets the stub of SftpClient.OnConnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSftpClient.OnConnected01">
            <summary>Sets the stub of SftpClient.OnConnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.OnConnecting">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSftpClient.OnConnecting01">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.OnDisconnected">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSftpClient.OnDisconnected01">
            <summary>Sets the stub of BaseClient.OnDisconnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSftpClient.OnDisconnecting">
            <summary>Sets the stub of SftpClient.OnDisconnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSftpClient.OnDisconnecting01">
            <summary>Sets the stub of SftpClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubSftpClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubSftpClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubSftpClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Fakes.StubSshClient">
            <summary>Stub type of Renci.SshNet.SshClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.Dispose(System.Boolean)">
            <summary>Sets the stub of SshClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSshClient.DisposeBoolean">
            <summary>Sets the stub of SshClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.InitializeStub">
            <summary>Initializes a new instance of type StubSshClient</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.OnConnected">
            <summary>Sets the stub of BaseClient.OnConnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSshClient.OnConnected01">
            <summary>Sets the stub of BaseClient.OnConnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.OnConnecting">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSshClient.OnConnecting01">
            <summary>Sets the stub of BaseClient.OnConnecting()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.OnDisconnected">
            <summary>Sets the stub of SshClient.OnDisconnected()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSshClient.OnDisconnected01">
            <summary>Sets the stub of SshClient.OnDisconnected()</summary>
        </member>
        <member name="M:Renci.SshNet.Fakes.StubSshClient.OnDisconnecting">
            <summary>Sets the stub of SshClient.OnDisconnecting()</summary>
        </member>
        <member name="F:Renci.SshNet.Fakes.StubSshClient.OnDisconnecting01">
            <summary>Sets the stub of SshClient.OnDisconnecting()</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubSshClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubSshClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Fakes.StubSshClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage">
            <summary>Shim type of Renci.SshNet.Messages.Authentication.BannerMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.#ctor(Renci.SshNet.Messages.Authentication.BannerMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.Constructor">
            <summary>Sets the shim of BannerMessage.BannerMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.LanguageGet">
            <summary>Sets the shim of BannerMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.LanguageSetString">
            <summary>Sets the shim of BannerMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.LoadData">
            <summary>Sets the shim of BannerMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.MessageGet">
            <summary>Sets the shim of BannerMessage.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.MessageSetString">
            <summary>Sets the shim of BannerMessage.set_Message(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.SaveData">
            <summary>Sets the shim of BannerMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances.LanguageGet">
            <summary>Sets the shim of BannerMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances.LanguageSetString">
            <summary>Sets the shim of BannerMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances.LoadData">
            <summary>Sets the shim of BannerMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances.MessageGet">
            <summary>Sets the shim of BannerMessage.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances.MessageSetString">
            <summary>Sets the shim of BannerMessage.set_Message(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimBannerMessage.AllInstances.SaveData">
            <summary>Sets the shim of BannerMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage">
            <summary>Shim type of Renci.SshNet.Messages.Authentication.FailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.#ctor(Renci.SshNet.Messages.Authentication.FailureMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllowedAuthenticationsGet">
            <summary>Sets the shim of FailureMessage.get_AllowedAuthentications()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllowedAuthenticationsSetStringArray">
            <summary>Sets the shim of FailureMessage.set_AllowedAuthentications(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.Constructor">
            <summary>Sets the shim of FailureMessage.FailureMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.LoadData">
            <summary>Sets the shim of FailureMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.MessageGet">
            <summary>Sets the shim of FailureMessage.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.MessageSetString">
            <summary>Sets the shim of FailureMessage.set_Message(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.PartialSuccessGet">
            <summary>Sets the shim of FailureMessage.get_PartialSuccess()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.PartialSuccessSetBoolean">
            <summary>Sets the shim of FailureMessage.set_PartialSuccess(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.SaveData">
            <summary>Sets the shim of FailureMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.AllowedAuthenticationsGet">
            <summary>Sets the shim of FailureMessage.get_AllowedAuthentications()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.AllowedAuthenticationsSetStringArray">
            <summary>Sets the shim of FailureMessage.set_AllowedAuthentications(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.LoadData">
            <summary>Sets the shim of FailureMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.MessageGet">
            <summary>Sets the shim of FailureMessage.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.MessageSetString">
            <summary>Sets the shim of FailureMessage.set_Message(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.PartialSuccessGet">
            <summary>Sets the shim of FailureMessage.get_PartialSuccess()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.PartialSuccessSetBoolean">
            <summary>Sets the shim of FailureMessage.set_PartialSuccess(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimFailureMessage.AllInstances.SaveData">
            <summary>Sets the shim of FailureMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage">
            <summary>Shim type of Renci.SshNet.Messages.Authentication.RequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.#ctor(Renci.SshNet.Messages.Authentication.RequestMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.ConstructorServiceNameString">
            <summary>Sets the shim of RequestMessage.RequestMessage(ServiceName serviceName, String username)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.LoadData">
            <summary>Sets the shim of RequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.MethodNameGet">
            <summary>Sets the shim of RequestMessage.get_MethodName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.SaveData">
            <summary>Sets the shim of RequestMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.ServiceNameGet">
            <summary>Sets the shim of RequestMessage.get_ServiceName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.ServiceNameSetServiceName">
            <summary>Sets the shim of RequestMessage.set_ServiceName(ServiceName value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.UsernameGet">
            <summary>Sets the shim of RequestMessage.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.UsernameSetString">
            <summary>Sets the shim of RequestMessage.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.LoadData">
            <summary>Sets the shim of RequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.MethodNameGet">
            <summary>Sets the shim of RequestMessage.get_MethodName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.SaveData">
            <summary>Sets the shim of RequestMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.ServiceNameGet">
            <summary>Sets the shim of RequestMessage.get_ServiceName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.ServiceNameSetServiceName">
            <summary>Sets the shim of RequestMessage.set_ServiceName(ServiceName value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.UsernameGet">
            <summary>Sets the shim of RequestMessage.get_Username()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessage.AllInstances.UsernameSetString">
            <summary>Sets the shim of RequestMessage.set_Username(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey">
            <summary>Shim type of Renci.SshNet.Messages.Authentication.RequestMessagePublicKey</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.#ctor(Renci.SshNet.Messages.Authentication.RequestMessagePublicKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.ConstructorServiceNameStringStringByteArray">
            <summary>Sets the shim of RequestMessagePublicKey.RequestMessagePublicKey(ServiceName serviceName, String username, String keyAlgorithmName, Byte[] keyData)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.ConstructorServiceNameStringStringByteArrayByteArray">
            <summary>Sets the shim of RequestMessagePublicKey.RequestMessagePublicKey(ServiceName serviceName, String username, String keyAlgorithmName, Byte[] keyData, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.MethodNameGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_MethodName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.PublicKeyAlgorithmNameGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_PublicKeyAlgorithmName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.PublicKeyAlgorithmNameSetString">
            <summary>Sets the shim of RequestMessagePublicKey.set_PublicKeyAlgorithmName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.PublicKeyDataGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_PublicKeyData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.PublicKeyDataSetByteArray">
            <summary>Sets the shim of RequestMessagePublicKey.set_PublicKeyData(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.SaveData">
            <summary>Sets the shim of RequestMessagePublicKey.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.SignatureGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_Signature()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.SignatureSetByteArray">
            <summary>Sets the shim of RequestMessagePublicKey.set_Signature(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.MethodNameGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_MethodName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.PublicKeyAlgorithmNameGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_PublicKeyAlgorithmName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.PublicKeyAlgorithmNameSetString">
            <summary>Sets the shim of RequestMessagePublicKey.set_PublicKeyAlgorithmName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.PublicKeyDataGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_PublicKeyData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.PublicKeyDataSetByteArray">
            <summary>Sets the shim of RequestMessagePublicKey.set_PublicKeyData(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.SaveData">
            <summary>Sets the shim of RequestMessagePublicKey.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.SignatureGet">
            <summary>Sets the shim of RequestMessagePublicKey.get_Signature()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimRequestMessagePublicKey.AllInstances.SignatureSetByteArray">
            <summary>Sets the shim of RequestMessagePublicKey.set_Signature(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage">
            <summary>Shim type of Renci.SshNet.Messages.Authentication.SuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.#ctor(Renci.SshNet.Messages.Authentication.SuccessMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.Constructor">
            <summary>Sets the shim of SuccessMessage.SuccessMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.LoadData">
            <summary>Sets the shim of SuccessMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.SaveData">
            <summary>Sets the shim of SuccessMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.AllInstances.LoadData">
            <summary>Sets the shim of SuccessMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.ShimSuccessMessage.AllInstances.SaveData">
            <summary>Sets the shim of SuccessMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage">
            <summary>Stub type of Renci.SshNet.Messages.Authentication.BannerMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.InitializeStub">
            <summary>Initializes a new instance of type StubBannerMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.LoadData">
            <summary>Sets the stub of BannerMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.LoadData01">
            <summary>Sets the stub of BannerMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.SaveData">
            <summary>Sets the stub of BannerMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.SaveData01">
            <summary>Sets the stub of BannerMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubBannerMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage">
            <summary>Stub type of Renci.SshNet.Messages.Authentication.FailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.InitializeStub">
            <summary>Initializes a new instance of type StubFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.LoadData">
            <summary>Sets the stub of FailureMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.LoadData01">
            <summary>Sets the stub of FailureMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.SaveData">
            <summary>Sets the stub of FailureMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.SaveData01">
            <summary>Sets the stub of FailureMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubFailureMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage">
            <summary>Stub type of Renci.SshNet.Messages.Authentication.RequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.InitializeStub">
            <summary>Initializes a new instance of type StubRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.LoadData">
            <summary>Sets the stub of RequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.LoadData01">
            <summary>Sets the stub of RequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.MethodNameGet">
            <summary>Sets the stub of RequestMessage.get_MethodName()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.SaveData">
            <summary>Sets the stub of RequestMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.SaveData01">
            <summary>Sets the stub of RequestMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.MethodName">
            <summary>Sets the stub of RequestMessage.get_MethodName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey">
            <summary>Stub type of Renci.SshNet.Messages.Authentication.RequestMessagePublicKey</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.InitializeStub">
            <summary>Initializes a new instance of type StubRequestMessagePublicKey</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.LoadData">
            <summary>Sets the stub of RequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.LoadData01">
            <summary>Sets the stub of RequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.MethodNameGet">
            <summary>Sets the stub of RequestMessagePublicKey.get_MethodName()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.SaveData">
            <summary>Sets the stub of RequestMessagePublicKey.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.SaveData01">
            <summary>Sets the stub of RequestMessagePublicKey.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.MethodName">
            <summary>Sets the stub of RequestMessagePublicKey.get_MethodName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubRequestMessagePublicKey.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage">
            <summary>Stub type of Renci.SshNet.Messages.Authentication.SuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.InitializeStub">
            <summary>Initializes a new instance of type StubSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.LoadData">
            <summary>Sets the stub of SuccessMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.LoadData01">
            <summary>Sets the stub of SuccessMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.SaveData">
            <summary>Sets the stub of SuccessMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.SaveData01">
            <summary>Sets the stub of SuccessMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.Fakes.StubSuccessMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelCloseMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelCloseMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.Constructor">
            <summary>Sets the shim of ChannelCloseMessage.ChannelCloseMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.ConstructorUInt32">
            <summary>Sets the shim of ChannelCloseMessage.ChannelCloseMessage(UInt32 localChannelNumber)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelCloseMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelDataMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelDataMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.Constructor">
            <summary>Sets the shim of ChannelDataMessage.ChannelDataMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.ConstructorUInt32ByteArray">
            <summary>Sets the shim of ChannelDataMessage.ChannelDataMessage(UInt32 localChannelNumber, Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.DataGet">
            <summary>Sets the shim of ChannelDataMessage.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.DataSetByteArray">
            <summary>Sets the shim of ChannelDataMessage.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.LoadData">
            <summary>Sets the shim of ChannelDataMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.SaveData">
            <summary>Sets the shim of ChannelDataMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.AllInstances.DataGet">
            <summary>Sets the shim of ChannelDataMessage.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.AllInstances.DataSetByteArray">
            <summary>Sets the shim of ChannelDataMessage.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelDataMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelDataMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelDataMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelEofMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelEofMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.Constructor">
            <summary>Sets the shim of ChannelEofMessage.ChannelEofMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.ConstructorUInt32">
            <summary>Sets the shim of ChannelEofMessage.ChannelEofMessage(UInt32 localChannelNumber)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelEofMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.Constructor">
            <summary>Sets the shim of ChannelExtendedDataMessage.ChannelExtendedDataMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.ConstructorUInt32UInt32ByteArray">
            <summary>Sets the shim of ChannelExtendedDataMessage.ChannelExtendedDataMessage(UInt32 localChannelNumber, UInt32 dataTypeCode, Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.DataGet">
            <summary>Sets the shim of ChannelExtendedDataMessage.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.DataSetByteArray">
            <summary>Sets the shim of ChannelExtendedDataMessage.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.DataTypeCodeGet">
            <summary>Sets the shim of ChannelExtendedDataMessage.get_DataTypeCode()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.DataTypeCodeSetUInt32">
            <summary>Sets the shim of ChannelExtendedDataMessage.set_DataTypeCode(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.LoadData">
            <summary>Sets the shim of ChannelExtendedDataMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.SaveData">
            <summary>Sets the shim of ChannelExtendedDataMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances.DataGet">
            <summary>Sets the shim of ChannelExtendedDataMessage.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances.DataSetByteArray">
            <summary>Sets the shim of ChannelExtendedDataMessage.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances.DataTypeCodeGet">
            <summary>Sets the shim of ChannelExtendedDataMessage.get_DataTypeCode()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances.DataTypeCodeSetUInt32">
            <summary>Sets the shim of ChannelExtendedDataMessage.set_DataTypeCode(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelExtendedDataMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelExtendedDataMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelExtendedDataMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelFailureMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.Constructor">
            <summary>Sets the shim of ChannelFailureMessage.ChannelFailureMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.ConstructorUInt32">
            <summary>Sets the shim of ChannelFailureMessage.ChannelFailureMessage(UInt32 localChannelNumber)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelFailureMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.Constructor">
            <summary>Sets the shim of ChannelMessage.ChannelMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.LoadData">
            <summary>Sets the shim of ChannelMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.LocalChannelNumberGet">
            <summary>Sets the shim of ChannelMessage.get_LocalChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.LocalChannelNumberSetUInt32">
            <summary>Sets the shim of ChannelMessage.set_LocalChannelNumber(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.SaveData">
            <summary>Sets the shim of ChannelMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.ToString">
            <summary>Sets the shim of ChannelMessage.ToString()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.AllInstances.LocalChannelNumberGet">
            <summary>Sets the shim of ChannelMessage.get_LocalChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.AllInstances.LocalChannelNumberSetUInt32">
            <summary>Sets the shim of ChannelMessage.set_LocalChannelNumber(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelMessage.AllInstances.ToString01">
            <summary>Sets the shim of ChannelMessage.ToString()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.Constructor">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.ChannelOpenConfirmationMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.ConstructorUInt32UInt32UInt32UInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.ChannelOpenConfirmationMessage(UInt32 localChannelNumber, UInt32 initialWindowSize, UInt32 maximumPacketSize, UInt32 remoteChannelNumber)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.InitialWindowSizeGet">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.get_InitialWindowSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.InitialWindowSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.set_InitialWindowSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.LoadData">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.MaximumPacketSizeGet">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.get_MaximumPacketSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.MaximumPacketSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.set_MaximumPacketSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.RemoteChannelNumberGet">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.get_RemoteChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.RemoteChannelNumberSetUInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.set_RemoteChannelNumber(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.SaveData">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.InitialWindowSizeGet">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.get_InitialWindowSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.InitialWindowSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.set_InitialWindowSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.MaximumPacketSizeGet">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.get_MaximumPacketSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.MaximumPacketSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.set_MaximumPacketSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.RemoteChannelNumberGet">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.get_RemoteChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.RemoteChannelNumberSetUInt32">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.set_RemoteChannelNumber(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenConfirmationMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelOpenConfirmationMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.Constructor">
            <summary>Sets the shim of ChannelOpenFailureMessage.ChannelOpenFailureMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.ConstructorUInt32StringUInt32">
            <summary>Sets the shim of ChannelOpenFailureMessage.ChannelOpenFailureMessage(UInt32 localChannelNumber, String description, UInt32 reasonCode)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.DescriptionGet">
            <summary>Sets the shim of ChannelOpenFailureMessage.get_Description()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.DescriptionSetString">
            <summary>Sets the shim of ChannelOpenFailureMessage.set_Description(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.LanguageGet">
            <summary>Sets the shim of ChannelOpenFailureMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.LanguageSetString">
            <summary>Sets the shim of ChannelOpenFailureMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.LoadData">
            <summary>Sets the shim of ChannelOpenFailureMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.ReasonCodeGet">
            <summary>Sets the shim of ChannelOpenFailureMessage.get_ReasonCode()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.ReasonCodeSetUInt32">
            <summary>Sets the shim of ChannelOpenFailureMessage.set_ReasonCode(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.SaveData">
            <summary>Sets the shim of ChannelOpenFailureMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.DescriptionGet">
            <summary>Sets the shim of ChannelOpenFailureMessage.get_Description()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.DescriptionSetString">
            <summary>Sets the shim of ChannelOpenFailureMessage.set_Description(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.LanguageGet">
            <summary>Sets the shim of ChannelOpenFailureMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.LanguageSetString">
            <summary>Sets the shim of ChannelOpenFailureMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelOpenFailureMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.ReasonCodeGet">
            <summary>Sets the shim of ChannelOpenFailureMessage.get_ReasonCode()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.ReasonCodeSetUInt32">
            <summary>Sets the shim of ChannelOpenFailureMessage.set_ReasonCode(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenFailureMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelOpenFailureMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelOpenInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.#ctor(Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.Constructor">
            <summary>Sets the shim of ChannelOpenInfo.ChannelOpenInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.LoadData">
            <summary>Sets the shim of ChannelOpenInfo.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.SaveData">
            <summary>Sets the shim of ChannelOpenInfo.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.AllInstances.LoadData">
            <summary>Sets the shim of ChannelOpenInfo.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenInfo.AllInstances.SaveData">
            <summary>Sets the shim of ChannelOpenInfo.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelOpenMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.ChannelTypeGet">
            <summary>Sets the shim of ChannelOpenMessage.get_ChannelType()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.Constructor">
            <summary>Sets the shim of ChannelOpenMessage.ChannelOpenMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.ConstructorUInt32UInt32UInt32ChannelOpenInfo">
            <summary>Sets the shim of ChannelOpenMessage.ChannelOpenMessage(UInt32 channelNumber, UInt32 initialWindowSize, UInt32 maximumPacketSize, ChannelOpenInfo info)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.InfoGet">
            <summary>Sets the shim of ChannelOpenMessage.get_Info()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.InfoSetChannelOpenInfo">
            <summary>Sets the shim of ChannelOpenMessage.set_Info(ChannelOpenInfo value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.InitialWindowSizeGet">
            <summary>Sets the shim of ChannelOpenMessage.get_InitialWindowSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.InitialWindowSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenMessage.set_InitialWindowSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.LoadData">
            <summary>Sets the shim of ChannelOpenMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.MaximumPacketSizeGet">
            <summary>Sets the shim of ChannelOpenMessage.get_MaximumPacketSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.MaximumPacketSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenMessage.set_MaximumPacketSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.SaveData">
            <summary>Sets the shim of ChannelOpenMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.ChannelTypeGet">
            <summary>Sets the shim of ChannelOpenMessage.get_ChannelType()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.InfoGet">
            <summary>Sets the shim of ChannelOpenMessage.get_Info()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.InfoSetChannelOpenInfo">
            <summary>Sets the shim of ChannelOpenMessage.set_Info(ChannelOpenInfo value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.InitialWindowSizeGet">
            <summary>Sets the shim of ChannelOpenMessage.get_InitialWindowSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.InitialWindowSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenMessage.set_InitialWindowSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelOpenMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.MaximumPacketSizeGet">
            <summary>Sets the shim of ChannelOpenMessage.get_MaximumPacketSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.MaximumPacketSizeSetUInt32">
            <summary>Sets the shim of ChannelOpenMessage.set_MaximumPacketSize(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelOpenMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelOpenMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelRequestMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.Constructor">
            <summary>Sets the shim of ChannelRequestMessage.ChannelRequestMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.ConstructorUInt32RequestInfo">
            <summary>Sets the shim of ChannelRequestMessage.ChannelRequestMessage(UInt32 localChannelName, RequestInfo info)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.LoadData">
            <summary>Sets the shim of ChannelRequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.RequestDataGet">
            <summary>Sets the shim of ChannelRequestMessage.get_RequestData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.RequestDataSetByteArray">
            <summary>Sets the shim of ChannelRequestMessage.set_RequestData(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.RequestNameGet">
            <summary>Sets the shim of ChannelRequestMessage.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.RequestNameSetString">
            <summary>Sets the shim of ChannelRequestMessage.set_RequestName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.SaveData">
            <summary>Sets the shim of ChannelRequestMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelRequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances.RequestDataGet">
            <summary>Sets the shim of ChannelRequestMessage.get_RequestData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances.RequestDataSetByteArray">
            <summary>Sets the shim of ChannelRequestMessage.set_RequestData(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances.RequestNameGet">
            <summary>Sets the shim of ChannelRequestMessage.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances.RequestNameSetString">
            <summary>Sets the shim of ChannelRequestMessage.set_RequestName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelRequestMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelRequestMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelSuccessMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.Constructor">
            <summary>Sets the shim of ChannelSuccessMessage.ChannelSuccessMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.ConstructorUInt32">
            <summary>Sets the shim of ChannelSuccessMessage.ChannelSuccessMessage(UInt32 localChannelNumber)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelSuccessMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.#ctor(Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.BytesToAddGet">
            <summary>Sets the shim of ChannelWindowAdjustMessage.get_BytesToAdd()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.BytesToAddSetUInt32">
            <summary>Sets the shim of ChannelWindowAdjustMessage.set_BytesToAdd(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.Constructor">
            <summary>Sets the shim of ChannelWindowAdjustMessage.ChannelWindowAdjustMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.ConstructorUInt32UInt32">
            <summary>Sets the shim of ChannelWindowAdjustMessage.ChannelWindowAdjustMessage(UInt32 localChannelNumber, UInt32 bytesToAdd)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.LoadData">
            <summary>Sets the shim of ChannelWindowAdjustMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.SaveData">
            <summary>Sets the shim of ChannelWindowAdjustMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.AllInstances.BytesToAddGet">
            <summary>Sets the shim of ChannelWindowAdjustMessage.get_BytesToAdd()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.AllInstances.BytesToAddSetUInt32">
            <summary>Sets the shim of ChannelWindowAdjustMessage.set_BytesToAdd(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.AllInstances.LoadData">
            <summary>Sets the shim of ChannelWindowAdjustMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimChannelWindowAdjustMessage.AllInstances.SaveData">
            <summary>Sets the shim of ChannelWindowAdjustMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo">
            <summary>Shim type of Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.#ctor(Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.Constructor">
            <summary>Sets the shim of EndOfWriteRequestInfo.EndOfWriteRequestInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.RequestNameGet">
            <summary>Sets the shim of EndOfWriteRequestInfo.get_RequestName()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimEndOfWriteRequestInfo.AllInstances.RequestNameGet">
            <summary>Sets the shim of EndOfWriteRequestInfo.get_RequestName()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.GlobalRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AddressToBindGet">
            <summary>Sets the shim of GlobalRequestMessage.get_AddressToBind()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AddressToBindSetString">
            <summary>Sets the shim of GlobalRequestMessage.set_AddressToBind(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.Constructor">
            <summary>Sets the shim of GlobalRequestMessage.GlobalRequestMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.ConstructorGlobalRequestNameBoolean">
            <summary>Sets the shim of GlobalRequestMessage.GlobalRequestMessage(GlobalRequestName requestName, Boolean wantReply)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.ConstructorGlobalRequestNameBooleanStringUInt32">
            <summary>Sets the shim of GlobalRequestMessage.GlobalRequestMessage(GlobalRequestName requestName, Boolean wantReply, String addressToBind, UInt32 portToBind)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.LoadData">
            <summary>Sets the shim of GlobalRequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.PortToBindGet">
            <summary>Sets the shim of GlobalRequestMessage.get_PortToBind()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.PortToBindSetUInt32">
            <summary>Sets the shim of GlobalRequestMessage.set_PortToBind(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.RequestNameGet">
            <summary>Sets the shim of GlobalRequestMessage.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.RequestNameSetGlobalRequestName">
            <summary>Sets the shim of GlobalRequestMessage.set_RequestName(GlobalRequestName value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.SaveData">
            <summary>Sets the shim of GlobalRequestMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.WantReplyGet">
            <summary>Sets the shim of GlobalRequestMessage.get_WantReply()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.WantReplySetBoolean">
            <summary>Sets the shim of GlobalRequestMessage.set_WantReply(Boolean value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.AddressToBindGet">
            <summary>Sets the shim of GlobalRequestMessage.get_AddressToBind()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.AddressToBindSetString">
            <summary>Sets the shim of GlobalRequestMessage.set_AddressToBind(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.LoadData">
            <summary>Sets the shim of GlobalRequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.PortToBindGet">
            <summary>Sets the shim of GlobalRequestMessage.get_PortToBind()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.PortToBindSetUInt32">
            <summary>Sets the shim of GlobalRequestMessage.set_PortToBind(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.RequestNameGet">
            <summary>Sets the shim of GlobalRequestMessage.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.RequestNameSetGlobalRequestName">
            <summary>Sets the shim of GlobalRequestMessage.set_RequestName(GlobalRequestName value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.SaveData">
            <summary>Sets the shim of GlobalRequestMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.WantReplyGet">
            <summary>Sets the shim of GlobalRequestMessage.get_WantReply()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimGlobalRequestMessage.AllInstances.WantReplySetBoolean">
            <summary>Sets the shim of GlobalRequestMessage.set_WantReply(Boolean value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo">
            <summary>Shim type of Renci.SshNet.Messages.Connection.KeepAliveRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.#ctor(Renci.SshNet.Messages.Connection.KeepAliveRequestInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.Constructor">
            <summary>Sets the shim of KeepAliveRequestInfo.KeepAliveRequestInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.RequestNameGet">
            <summary>Sets the shim of KeepAliveRequestInfo.get_RequestName()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimKeepAliveRequestInfo.AllInstances.RequestNameGet">
            <summary>Sets the shim of KeepAliveRequestInfo.get_RequestName()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.RequestFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.#ctor(Renci.SshNet.Messages.Connection.RequestFailureMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.Constructor">
            <summary>Sets the shim of RequestFailureMessage.RequestFailureMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.LoadData">
            <summary>Sets the shim of RequestFailureMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.SaveData">
            <summary>Sets the shim of RequestFailureMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.AllInstances.LoadData">
            <summary>Sets the shim of RequestFailureMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestFailureMessage.AllInstances.SaveData">
            <summary>Sets the shim of RequestFailureMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo">
            <summary>Shim type of Renci.SshNet.Messages.Connection.RequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.#ctor(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.Constructor">
            <summary>Sets the shim of RequestInfo.RequestInfo()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.LoadData">
            <summary>Sets the shim of RequestInfo.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.SaveData">
            <summary>Sets the shim of RequestInfo.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.WantReplyGet">
            <summary>Sets the shim of RequestInfo.get_WantReply()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.WantReplySetBoolean">
            <summary>Sets the shim of RequestInfo.set_WantReply(Boolean value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.AllInstances.LoadData">
            <summary>Sets the shim of RequestInfo.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.AllInstances.SaveData">
            <summary>Sets the shim of RequestInfo.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.AllInstances.WantReplyGet">
            <summary>Sets the shim of RequestInfo.get_WantReply()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestInfo.AllInstances.WantReplySetBoolean">
            <summary>Sets the shim of RequestInfo.set_WantReply(Boolean value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage">
            <summary>Shim type of Renci.SshNet.Messages.Connection.RequestSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.#ctor(Renci.SshNet.Messages.Connection.RequestSuccessMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.BoundPortGet">
            <summary>Sets the shim of RequestSuccessMessage.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.BoundPortSetNullableOfUInt32">
            <summary>Sets the shim of RequestSuccessMessage.set_BoundPort(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.Constructor">
            <summary>Sets the shim of RequestSuccessMessage.RequestSuccessMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.ConstructorUInt32">
            <summary>Sets the shim of RequestSuccessMessage.RequestSuccessMessage(UInt32 boundPort)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.LoadData">
            <summary>Sets the shim of RequestSuccessMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.SaveData">
            <summary>Sets the shim of RequestSuccessMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.AllInstances.BoundPortGet">
            <summary>Sets the shim of RequestSuccessMessage.get_BoundPort()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.AllInstances.BoundPortSetNullableOfUInt32">
            <summary>Sets the shim of RequestSuccessMessage.set_BoundPort(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.AllInstances.LoadData">
            <summary>Sets the shim of RequestSuccessMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.ShimRequestSuccessMessage.AllInstances.SaveData">
            <summary>Sets the shim of RequestSuccessMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelCloseMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.#ctor(System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelCloseMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.LoadData">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.LoadData01">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.SaveData">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.SaveData01">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelCloseMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelDataMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.#ctor(System.UInt32,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelDataMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.LoadData">
            <summary>Sets the stub of ChannelDataMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.LoadData01">
            <summary>Sets the stub of ChannelDataMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.SaveData">
            <summary>Sets the stub of ChannelDataMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.SaveData01">
            <summary>Sets the stub of ChannelDataMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelDataMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelEofMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.#ctor(System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelEofMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.LoadData">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.LoadData01">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.SaveData">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.SaveData01">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelEofMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.#ctor(System.UInt32,System.UInt32,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelExtendedDataMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.LoadData">
            <summary>Sets the stub of ChannelExtendedDataMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.LoadData01">
            <summary>Sets the stub of ChannelExtendedDataMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.SaveData">
            <summary>Sets the stub of ChannelExtendedDataMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.SaveData01">
            <summary>Sets the stub of ChannelExtendedDataMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelExtendedDataMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.#ctor(System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.LoadData">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.LoadData01">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.SaveData">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.SaveData01">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelFailureMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.LoadData">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.LoadData01">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.SaveData">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.SaveData01">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelOpenConfirmationMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.LoadData">
            <summary>Sets the stub of ChannelOpenConfirmationMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.LoadData01">
            <summary>Sets the stub of ChannelOpenConfirmationMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.SaveData">
            <summary>Sets the stub of ChannelOpenConfirmationMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.SaveData01">
            <summary>Sets the stub of ChannelOpenConfirmationMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenConfirmationMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelOpenFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.LoadData">
            <summary>Sets the stub of ChannelOpenFailureMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.LoadData01">
            <summary>Sets the stub of ChannelOpenFailureMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.SaveData">
            <summary>Sets the stub of ChannelOpenFailureMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.SaveData01">
            <summary>Sets the stub of ChannelOpenFailureMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenFailureMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelOpenInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.ChannelTypeGet">
            <summary>Sets the stub of ChannelOpenInfo.get_ChannelType()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.GetBytes">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.GetBytes01">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.InitializeStub">
            <summary>Initializes a new instance of type StubChannelOpenInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.LoadData">
            <summary>Sets the stub of ChannelOpenInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.LoadData01">
            <summary>Sets the stub of ChannelOpenInfo.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.SaveData">
            <summary>Sets the stub of ChannelOpenInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.SaveData01">
            <summary>Sets the stub of ChannelOpenInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.ZeroReaderIndexGet">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.ChannelType">
            <summary>Sets the stub of ChannelOpenInfo.get_ChannelType()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenInfo.ZeroReaderIndex">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelOpenMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelOpenMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.LoadData">
            <summary>Sets the stub of ChannelOpenMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.LoadData01">
            <summary>Sets the stub of ChannelOpenMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.SaveData">
            <summary>Sets the stub of ChannelOpenMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.SaveData01">
            <summary>Sets the stub of ChannelOpenMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelOpenMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.#ctor(System.UInt32,Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.LoadData">
            <summary>Sets the stub of ChannelRequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.LoadData01">
            <summary>Sets the stub of ChannelRequestMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.SaveData">
            <summary>Sets the stub of ChannelRequestMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.SaveData01">
            <summary>Sets the stub of ChannelRequestMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelRequestMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.#ctor(System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.LoadData">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.LoadData01">
            <summary>Sets the stub of ChannelMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.SaveData">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.SaveData01">
            <summary>Sets the stub of ChannelMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelSuccessMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.InitializeStub">
            <summary>Initializes a new instance of type StubChannelWindowAdjustMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.LoadData">
            <summary>Sets the stub of ChannelWindowAdjustMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.LoadData01">
            <summary>Sets the stub of ChannelWindowAdjustMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.SaveData">
            <summary>Sets the stub of ChannelWindowAdjustMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.SaveData01">
            <summary>Sets the stub of ChannelWindowAdjustMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.ToString">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.ToString01">
            <summary>Sets the stub of ChannelMessage.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubChannelWindowAdjustMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo">
            <summary>Stub type of Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.GetBytes">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.GetBytes01">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.InitializeStub">
            <summary>Initializes a new instance of type StubEndOfWriteRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.LoadData">
            <summary>Sets the stub of RequestInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.LoadData01">
            <summary>Sets the stub of RequestInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.RequestNameGet">
            <summary>Sets the stub of EndOfWriteRequestInfo.get_RequestName()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.SaveData">
            <summary>Sets the stub of RequestInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.SaveData01">
            <summary>Sets the stub of RequestInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.ZeroReaderIndexGet">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.RequestName">
            <summary>Sets the stub of EndOfWriteRequestInfo.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubEndOfWriteRequestInfo.ZeroReaderIndex">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.GlobalRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean,System.String,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.InitializeStub">
            <summary>Initializes a new instance of type StubGlobalRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.LoadData">
            <summary>Sets the stub of GlobalRequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.LoadData01">
            <summary>Sets the stub of GlobalRequestMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.SaveData">
            <summary>Sets the stub of GlobalRequestMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.SaveData01">
            <summary>Sets the stub of GlobalRequestMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubGlobalRequestMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo">
            <summary>Stub type of Renci.SshNet.Messages.Connection.KeepAliveRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.GetBytes">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.GetBytes01">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.InitializeStub">
            <summary>Initializes a new instance of type StubKeepAliveRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.LoadData">
            <summary>Sets the stub of RequestInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.LoadData01">
            <summary>Sets the stub of RequestInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.RequestNameGet">
            <summary>Sets the stub of KeepAliveRequestInfo.get_RequestName()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.SaveData">
            <summary>Sets the stub of RequestInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.SaveData01">
            <summary>Sets the stub of RequestInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.ZeroReaderIndexGet">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.RequestName">
            <summary>Sets the stub of KeepAliveRequestInfo.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubKeepAliveRequestInfo.ZeroReaderIndex">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.RequestFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.InitializeStub">
            <summary>Initializes a new instance of type StubRequestFailureMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.LoadData">
            <summary>Sets the stub of RequestFailureMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.LoadData01">
            <summary>Sets the stub of RequestFailureMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.SaveData">
            <summary>Sets the stub of RequestFailureMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.SaveData01">
            <summary>Sets the stub of RequestFailureMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestFailureMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo">
            <summary>Stub type of Renci.SshNet.Messages.Connection.RequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.GetBytes">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.GetBytes01">
            <summary>Sets the stub of SshData.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.InitializeStub">
            <summary>Initializes a new instance of type StubRequestInfo</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.LoadData">
            <summary>Sets the stub of RequestInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.LoadData01">
            <summary>Sets the stub of RequestInfo.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.RequestNameGet">
            <summary>Sets the stub of RequestInfo.get_RequestName()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.SaveData">
            <summary>Sets the stub of RequestInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.SaveData01">
            <summary>Sets the stub of RequestInfo.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.ZeroReaderIndexGet">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.RequestName">
            <summary>Sets the stub of RequestInfo.get_RequestName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestInfo.ZeroReaderIndex">
            <summary>Sets the stub of SshData.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage">
            <summary>Stub type of Renci.SshNet.Messages.Connection.RequestSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.#ctor(System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.InitializeStub">
            <summary>Initializes a new instance of type StubRequestSuccessMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.LoadData">
            <summary>Sets the stub of RequestSuccessMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.LoadData01">
            <summary>Sets the stub of RequestSuccessMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.SaveData">
            <summary>Sets the stub of RequestSuccessMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.SaveData01">
            <summary>Sets the stub of RequestSuccessMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.Fakes.StubRequestSuccessMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Fakes.ShimMessage">
            <summary>Shim type of Renci.SshNet.Messages.Message</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessage.#ctor(Renci.SshNet.Messages.Message)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.Constructor">
            <summary>Sets the shim of Message.Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.GetBytes">
            <summary>Sets the shim of Message.GetBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.ToString">
            <summary>Sets the shim of Message.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.ZeroReaderIndexGet">
            <summary>Sets the shim of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Fakes.ShimMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.AllInstances.GetBytes">
            <summary>Sets the shim of Message.GetBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.AllInstances.ToString01">
            <summary>Sets the shim of Message.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessage.AllInstances.ZeroReaderIndexGet">
            <summary>Sets the shim of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Fakes.ShimMessageAttribute">
            <summary>Shim type of Renci.SshNet.Messages.MessageAttribute</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.#ctor(Renci.SshNet.Messages.MessageAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.ConstructorStringByte">
            <summary>Sets the shim of MessageAttribute.MessageAttribute(String name, Byte number)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.NameGet">
            <summary>Sets the shim of MessageAttribute.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.NameSetString">
            <summary>Sets the shim of MessageAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.NumberGet">
            <summary>Sets the shim of MessageAttribute.get_Number()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.NumberSetByte">
            <summary>Sets the shim of MessageAttribute.set_Number(Byte value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.AllInstances.NameGet">
            <summary>Sets the shim of MessageAttribute.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of MessageAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.AllInstances.NumberGet">
            <summary>Sets the shim of MessageAttribute.get_Number()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.ShimMessageAttribute.AllInstances.NumberSetByte">
            <summary>Sets the shim of MessageAttribute.set_Number(Byte value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Fakes.StubMessage">
            <summary>Stub type of Renci.SshNet.Messages.Message</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.StubMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.StubMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Fakes.StubMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.StubMessage.InitializeStub">
            <summary>Initializes a new instance of type StubMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.StubMessage.LoadData">
            <summary>Sets the stub of SshData.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Fakes.StubMessage.LoadData01">
            <summary>Sets the stub of SshData.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.StubMessage.SaveData">
            <summary>Sets the stub of SshData.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Fakes.StubMessage.SaveData01">
            <summary>Sets the stub of SshData.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Fakes.StubMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Fakes.StubMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Fakes.StubMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.StubMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.StubMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.StubMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Fakes.StubMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.DebugMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.#ctor(Renci.SshNet.Messages.Transport.DebugMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.Constructor">
            <summary>Sets the shim of DebugMessage.DebugMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.IsAlwaysDisplayGet">
            <summary>Sets the shim of DebugMessage.get_IsAlwaysDisplay()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.IsAlwaysDisplaySetBoolean">
            <summary>Sets the shim of DebugMessage.set_IsAlwaysDisplay(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.LanguageGet">
            <summary>Sets the shim of DebugMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.LanguageSetString">
            <summary>Sets the shim of DebugMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.LoadData">
            <summary>Sets the shim of DebugMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.MessageGet">
            <summary>Sets the shim of DebugMessage.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.MessageSetString">
            <summary>Sets the shim of DebugMessage.set_Message(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.SaveData">
            <summary>Sets the shim of DebugMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.IsAlwaysDisplayGet">
            <summary>Sets the shim of DebugMessage.get_IsAlwaysDisplay()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.IsAlwaysDisplaySetBoolean">
            <summary>Sets the shim of DebugMessage.set_IsAlwaysDisplay(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.LanguageGet">
            <summary>Sets the shim of DebugMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.LanguageSetString">
            <summary>Sets the shim of DebugMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.LoadData">
            <summary>Sets the shim of DebugMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.MessageGet">
            <summary>Sets the shim of DebugMessage.get_Message()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.MessageSetString">
            <summary>Sets the shim of DebugMessage.set_Message(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDebugMessage.AllInstances.SaveData">
            <summary>Sets the shim of DebugMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.DisconnectMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.Bind(Renci.SshNet.Messages.Transport.IKeyExchangedAllowed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.Constructor">
            <summary>Sets the shim of DisconnectMessage.DisconnectMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.ConstructorDisconnectReasonString">
            <summary>Sets the shim of DisconnectMessage.DisconnectMessage(DisconnectReason reasonCode, String message)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.DescriptionGet">
            <summary>Sets the shim of DisconnectMessage.get_Description()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.DescriptionSetString">
            <summary>Sets the shim of DisconnectMessage.set_Description(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.LanguageGet">
            <summary>Sets the shim of DisconnectMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.LanguageSetString">
            <summary>Sets the shim of DisconnectMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.LoadData">
            <summary>Sets the shim of DisconnectMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.ReasonCodeGet">
            <summary>Sets the shim of DisconnectMessage.get_ReasonCode()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.ReasonCodeSetDisconnectReason">
            <summary>Sets the shim of DisconnectMessage.set_ReasonCode(DisconnectReason value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.SaveData">
            <summary>Sets the shim of DisconnectMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.DescriptionGet">
            <summary>Sets the shim of DisconnectMessage.get_Description()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.DescriptionSetString">
            <summary>Sets the shim of DisconnectMessage.set_Description(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.LanguageGet">
            <summary>Sets the shim of DisconnectMessage.get_Language()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.LanguageSetString">
            <summary>Sets the shim of DisconnectMessage.set_Language(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.LoadData">
            <summary>Sets the shim of DisconnectMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.ReasonCodeGet">
            <summary>Sets the shim of DisconnectMessage.get_ReasonCode()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.ReasonCodeSetDisconnectReason">
            <summary>Sets the shim of DisconnectMessage.set_ReasonCode(DisconnectReason value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimDisconnectMessage.AllInstances.SaveData">
            <summary>Sets the shim of DisconnectMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.IgnoreMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.#ctor(Renci.SshNet.Messages.Transport.IgnoreMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.Constructor">
            <summary>Sets the shim of IgnoreMessage.IgnoreMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.ConstructorByteArray">
            <summary>Sets the shim of IgnoreMessage.IgnoreMessage(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.DataGet">
            <summary>Sets the shim of IgnoreMessage.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.DataSetByteArray">
            <summary>Sets the shim of IgnoreMessage.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.LoadData">
            <summary>Sets the shim of IgnoreMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.SaveData">
            <summary>Sets the shim of IgnoreMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.AllInstances.DataGet">
            <summary>Sets the shim of IgnoreMessage.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.AllInstances.DataSetByteArray">
            <summary>Sets the shim of IgnoreMessage.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.AllInstances.LoadData">
            <summary>Sets the shim of IgnoreMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimIgnoreMessage.AllInstances.SaveData">
            <summary>Sets the shim of IgnoreMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup">
            <summary>Shim type of Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.#ctor(Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.Constructor">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.KeyExchangeDhGroupExchangeGroup()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.LoadData">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.SafePrimeGet">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.get_SafePrime()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.SafePrimeSetBigInteger">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.set_SafePrime(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.SaveData">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.SubGroupGet">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.get_SubGroup()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.SubGroupSetBigInteger">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.set_SubGroup(BigInteger value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances.LoadData">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances.SafePrimeGet">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.get_SafePrime()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances.SafePrimeSetBigInteger">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.set_SafePrime(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances.SaveData">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances.SubGroupGet">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.get_SubGroup()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhGroupExchangeGroup.AllInstances.SubGroupSetBigInteger">
            <summary>Sets the shim of KeyExchangeDhGroupExchangeGroup.set_SubGroup(BigInteger value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.#ctor(Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.Constructor">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.KeyExchangeDhReplyMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.FGet">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.get_F()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.FSetBigInteger">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.set_F(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.HostKeyGet">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.get_HostKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.HostKeySetByteArray">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.set_HostKey(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.LoadData">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.SaveData">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.SignatureGet">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.get_Signature()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.SignatureSetByteArray">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.set_Signature(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.FGet">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.get_F()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.FSetBigInteger">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.set_F(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.HostKeyGet">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.get_HostKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.HostKeySetByteArray">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.set_HostKey(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.LoadData">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.SaveData">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.SignatureGet">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.get_Signature()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeDhReplyMessage.AllInstances.SignatureSetByteArray">
            <summary>Sets the shim of KeyExchangeDhReplyMessage.set_Signature(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.#ctor(Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.Constructor">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.KeyExchangeEcdhReplyMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.KSGet">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.get_KS()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.KSSetByteArray">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.set_KS(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.LoadData">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.QSGet">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.get_QS()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.QSSetByteArray">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.set_QS(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.SaveData">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.SignatureGet">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.get_Signature()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.SignatureSetByteArray">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.set_Signature(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.KSGet">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.get_KS()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.KSSetByteArray">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.set_KS(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.LoadData">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.QSGet">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.get_QS()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.QSSetByteArray">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.set_QS(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.SaveData">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.SignatureGet">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.get_Signature()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeEcdhReplyMessage.AllInstances.SignatureSetByteArray">
            <summary>Sets the shim of KeyExchangeEcdhReplyMessage.set_Signature(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.KeyExchangeInitMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.#ctor(Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.Bind(Renci.SshNet.Messages.Transport.IKeyExchangedAllowed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.CompressionAlgorithmsClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_CompressionAlgorithmsClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.CompressionAlgorithmsClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_CompressionAlgorithmsClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.CompressionAlgorithmsServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_CompressionAlgorithmsServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.CompressionAlgorithmsServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_CompressionAlgorithmsServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.Constructor">
            <summary>Sets the shim of KeyExchangeInitMessage.KeyExchangeInitMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.CookieGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_Cookie()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.CookieSetByteArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_Cookie(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.EncryptionAlgorithmsClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_EncryptionAlgorithmsClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.EncryptionAlgorithmsClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_EncryptionAlgorithmsClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.EncryptionAlgorithmsServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_EncryptionAlgorithmsServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.EncryptionAlgorithmsServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_EncryptionAlgorithmsServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.FirstKexPacketFollowsGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_FirstKexPacketFollows()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.FirstKexPacketFollowsSetBoolean">
            <summary>Sets the shim of KeyExchangeInitMessage.set_FirstKexPacketFollows(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.KeyExchangeAlgorithmsGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_KeyExchangeAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.KeyExchangeAlgorithmsSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_KeyExchangeAlgorithms(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.LanguagesClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_LanguagesClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.LanguagesClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_LanguagesClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.LanguagesServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_LanguagesServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.LanguagesServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_LanguagesServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.LoadData">
            <summary>Sets the shim of KeyExchangeInitMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.MacAlgorithmsClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_MacAlgorithmsClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.MacAlgorithmsClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_MacAlgorithmsClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.MacAlgorithmsServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_MacAlgorithmsServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.MacAlgorithmsServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_MacAlgorithmsServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.ReservedGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_Reserved()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.ReservedSetUInt32">
            <summary>Sets the shim of KeyExchangeInitMessage.set_Reserved(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.SaveData">
            <summary>Sets the shim of KeyExchangeInitMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.ServerHostKeyAlgorithmsGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_ServerHostKeyAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.ServerHostKeyAlgorithmsSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_ServerHostKeyAlgorithms(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.StaticConstructor">
            <summary>Sets the shim of KeyExchangeInitMessage.KeyExchangeInitMessage()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.CompressionAlgorithmsClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_CompressionAlgorithmsClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.CompressionAlgorithmsClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_CompressionAlgorithmsClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.CompressionAlgorithmsServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_CompressionAlgorithmsServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.CompressionAlgorithmsServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_CompressionAlgorithmsServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.CookieGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_Cookie()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.CookieSetByteArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_Cookie(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.EncryptionAlgorithmsClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_EncryptionAlgorithmsClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.EncryptionAlgorithmsClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_EncryptionAlgorithmsClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.EncryptionAlgorithmsServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_EncryptionAlgorithmsServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.EncryptionAlgorithmsServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_EncryptionAlgorithmsServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.FirstKexPacketFollowsGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_FirstKexPacketFollows()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.FirstKexPacketFollowsSetBoolean">
            <summary>Sets the shim of KeyExchangeInitMessage.set_FirstKexPacketFollows(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.KeyExchangeAlgorithmsGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_KeyExchangeAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.KeyExchangeAlgorithmsSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_KeyExchangeAlgorithms(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.LanguagesClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_LanguagesClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.LanguagesClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_LanguagesClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.LanguagesServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_LanguagesServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.LanguagesServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_LanguagesServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.LoadData">
            <summary>Sets the shim of KeyExchangeInitMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.MacAlgorithmsClientToServerGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_MacAlgorithmsClientToServer()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.MacAlgorithmsClientToServerSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_MacAlgorithmsClientToServer(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.MacAlgorithmsServerToClientGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_MacAlgorithmsServerToClient()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.MacAlgorithmsServerToClientSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_MacAlgorithmsServerToClient(String[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.ReservedGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_Reserved()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.ReservedSetUInt32">
            <summary>Sets the shim of KeyExchangeInitMessage.set_Reserved(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.SaveData">
            <summary>Sets the shim of KeyExchangeInitMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.ServerHostKeyAlgorithmsGet">
            <summary>Sets the shim of KeyExchangeInitMessage.get_ServerHostKeyAlgorithms()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimKeyExchangeInitMessage.AllInstances.ServerHostKeyAlgorithmsSetStringArray">
            <summary>Sets the shim of KeyExchangeInitMessage.set_ServerHostKeyAlgorithms(String[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.NewKeysMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.#ctor(Renci.SshNet.Messages.Transport.NewKeysMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.Bind(Renci.SshNet.Messages.Transport.IKeyExchangedAllowed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.Constructor">
            <summary>Sets the shim of NewKeysMessage.NewKeysMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.LoadData">
            <summary>Sets the shim of NewKeysMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.SaveData">
            <summary>Sets the shim of NewKeysMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.AllInstances.LoadData">
            <summary>Sets the shim of NewKeysMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimNewKeysMessage.AllInstances.SaveData">
            <summary>Sets the shim of NewKeysMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.ServiceAcceptMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.#ctor(Renci.SshNet.Messages.Transport.ServiceAcceptMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.Constructor">
            <summary>Sets the shim of ServiceAcceptMessage.ServiceAcceptMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.LoadData">
            <summary>Sets the shim of ServiceAcceptMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.SaveData">
            <summary>Sets the shim of ServiceAcceptMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.ServiceNameGet">
            <summary>Sets the shim of ServiceAcceptMessage.get_ServiceName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.ServiceNameSetServiceName">
            <summary>Sets the shim of ServiceAcceptMessage.set_ServiceName(ServiceName value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.AllInstances.LoadData">
            <summary>Sets the shim of ServiceAcceptMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.AllInstances.SaveData">
            <summary>Sets the shim of ServiceAcceptMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.AllInstances.ServiceNameGet">
            <summary>Sets the shim of ServiceAcceptMessage.get_ServiceName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceAcceptMessage.AllInstances.ServiceNameSetServiceName">
            <summary>Sets the shim of ServiceAcceptMessage.set_ServiceName(ServiceName value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.ServiceRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.#ctor(Renci.SshNet.Messages.Transport.ServiceRequestMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.ConstructorServiceName">
            <summary>Sets the shim of ServiceRequestMessage.ServiceRequestMessage(ServiceName serviceName)</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.LoadData">
            <summary>Sets the shim of ServiceRequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.SaveData">
            <summary>Sets the shim of ServiceRequestMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.ServiceNameGet">
            <summary>Sets the shim of ServiceRequestMessage.get_ServiceName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.ServiceNameSetServiceName">
            <summary>Sets the shim of ServiceRequestMessage.set_ServiceName(ServiceName value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.AllInstances.LoadData">
            <summary>Sets the shim of ServiceRequestMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.AllInstances.SaveData">
            <summary>Sets the shim of ServiceRequestMessage.SaveData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.AllInstances.ServiceNameGet">
            <summary>Sets the shim of ServiceRequestMessage.get_ServiceName()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimServiceRequestMessage.AllInstances.ServiceNameSetServiceName">
            <summary>Sets the shim of ServiceRequestMessage.set_ServiceName(ServiceName value)</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage">
            <summary>Shim type of Renci.SshNet.Messages.Transport.UnimplementedMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.#ctor(Renci.SshNet.Messages.Transport.UnimplementedMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.Constructor">
            <summary>Sets the shim of UnimplementedMessage.UnimplementedMessage()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.LoadData">
            <summary>Sets the shim of UnimplementedMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.SaveData">
            <summary>Sets the shim of UnimplementedMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.AllInstances.LoadData">
            <summary>Sets the shim of UnimplementedMessage.LoadData()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.ShimUnimplementedMessage.AllInstances.SaveData">
            <summary>Sets the shim of UnimplementedMessage.SaveData()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.DebugMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.InitializeStub">
            <summary>Initializes a new instance of type StubDebugMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.LoadData">
            <summary>Sets the stub of DebugMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.LoadData01">
            <summary>Sets the stub of DebugMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.SaveData">
            <summary>Sets the stub of DebugMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.SaveData01">
            <summary>Sets the stub of DebugMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDebugMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.DisconnectMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectReason,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.InitializeStub">
            <summary>Initializes a new instance of type StubDisconnectMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.LoadData">
            <summary>Sets the stub of DisconnectMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.LoadData01">
            <summary>Sets the stub of DisconnectMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.SaveData">
            <summary>Sets the stub of DisconnectMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.SaveData01">
            <summary>Sets the stub of DisconnectMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubDisconnectMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubIKeyExchangedAllowed">
            <summary>Stub type of Renci.SshNet.Messages.Transport.IKeyExchangedAllowed</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIKeyExchangedAllowed.#ctor">
            <summary>Initializes a new instance of type StubIKeyExchangedAllowed</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.IgnoreMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.InitializeStub">
            <summary>Initializes a new instance of type StubIgnoreMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.LoadData">
            <summary>Sets the stub of IgnoreMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.LoadData01">
            <summary>Sets the stub of IgnoreMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.SaveData">
            <summary>Sets the stub of IgnoreMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.SaveData01">
            <summary>Sets the stub of IgnoreMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubIgnoreMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup">
            <summary>Stub type of Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeDhGroupExchangeGroup</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.LoadData">
            <summary>Sets the stub of KeyExchangeDhGroupExchangeGroup.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.LoadData01">
            <summary>Sets the stub of KeyExchangeDhGroupExchangeGroup.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.SaveData">
            <summary>Sets the stub of KeyExchangeDhGroupExchangeGroup.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.SaveData01">
            <summary>Sets the stub of KeyExchangeDhGroupExchangeGroup.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhGroupExchangeGroup.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeDhReplyMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.LoadData">
            <summary>Sets the stub of KeyExchangeDhReplyMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.LoadData01">
            <summary>Sets the stub of KeyExchangeDhReplyMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.SaveData">
            <summary>Sets the stub of KeyExchangeDhReplyMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.SaveData01">
            <summary>Sets the stub of KeyExchangeDhReplyMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeDhReplyMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.KeyExchangeEcdhReplyMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeEcdhReplyMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.LoadData">
            <summary>Sets the stub of KeyExchangeEcdhReplyMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.LoadData01">
            <summary>Sets the stub of KeyExchangeEcdhReplyMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.SaveData">
            <summary>Sets the stub of KeyExchangeEcdhReplyMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.SaveData01">
            <summary>Sets the stub of KeyExchangeEcdhReplyMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeEcdhReplyMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.KeyExchangeInitMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeInitMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.LoadData">
            <summary>Sets the stub of KeyExchangeInitMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.LoadData01">
            <summary>Sets the stub of KeyExchangeInitMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.SaveData">
            <summary>Sets the stub of KeyExchangeInitMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.SaveData01">
            <summary>Sets the stub of KeyExchangeInitMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubKeyExchangeInitMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.NewKeysMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.InitializeStub">
            <summary>Initializes a new instance of type StubNewKeysMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.LoadData">
            <summary>Sets the stub of NewKeysMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.LoadData01">
            <summary>Sets the stub of NewKeysMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.SaveData">
            <summary>Sets the stub of NewKeysMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.SaveData01">
            <summary>Sets the stub of NewKeysMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubNewKeysMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.ServiceAcceptMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.InitializeStub">
            <summary>Initializes a new instance of type StubServiceAcceptMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.LoadData">
            <summary>Sets the stub of ServiceAcceptMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.LoadData01">
            <summary>Sets the stub of ServiceAcceptMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.SaveData">
            <summary>Sets the stub of ServiceAcceptMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.SaveData01">
            <summary>Sets the stub of ServiceAcceptMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceAcceptMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.ServiceRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.#ctor(Renci.SshNet.Messages.ServiceName)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.InitializeStub">
            <summary>Initializes a new instance of type StubServiceRequestMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.LoadData">
            <summary>Sets the stub of ServiceRequestMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.LoadData01">
            <summary>Sets the stub of ServiceRequestMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.SaveData">
            <summary>Sets the stub of ServiceRequestMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.SaveData01">
            <summary>Sets the stub of ServiceRequestMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubServiceRequestMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage">
            <summary>Stub type of Renci.SshNet.Messages.Transport.UnimplementedMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.GetBytes">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.GetBytes01">
            <summary>Sets the stub of Message.GetBytes()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.InitializeStub">
            <summary>Initializes a new instance of type StubUnimplementedMessage</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.LoadData">
            <summary>Sets the stub of UnimplementedMessage.LoadData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.LoadData01">
            <summary>Sets the stub of UnimplementedMessage.LoadData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.SaveData">
            <summary>Sets the stub of UnimplementedMessage.SaveData()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.SaveData01">
            <summary>Sets the stub of UnimplementedMessage.SaveData()</summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.ToString">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.ToString01">
            <summary>Sets the stub of Message.ToString()</summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.ZeroReaderIndexGet">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.Fakes.StubUnimplementedMessage.ZeroReaderIndex">
            <summary>Sets the stub of Message.get_ZeroReaderIndex()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.AesCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.AesCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of AesCipher.AesCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of AesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.DecryptBlockUInt32Array">
            <summary>Sets the shim of AesCipher.DecryptBlock(UInt32[] KW)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of AesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.EncryptBlockUInt32Array">
            <summary>Sets the shim of AesCipher.EncryptBlock(UInt32[] KW)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.FFmulXUInt32">
            <summary>Sets the shim of AesCipher.FFmulX(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.GenerateWorkingKeyBooleanByteArray">
            <summary>Sets the shim of AesCipher.GenerateWorkingKey(Boolean isEncryption, Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.InvMcolUInt32">
            <summary>Sets the shim of AesCipher.InvMcol(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.PackBlockByteArrayInt32">
            <summary>Sets the shim of AesCipher.PackBlock(Byte[] bytes, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.ShiftUInt32Int32">
            <summary>Sets the shim of AesCipher.Shift(UInt32 r, Int32 shift)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.StaticConstructor">
            <summary>Sets the shim of AesCipher.AesCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.SubWordUInt32">
            <summary>Sets the shim of AesCipher.SubWord(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.UnPackBlockByteArrayInt32">
            <summary>Sets the shim of AesCipher.UnPackBlock(Byte[] bytes, Int32 off)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of AesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.DecryptBlockUInt32Array">
            <summary>Sets the shim of AesCipher.DecryptBlock(UInt32[] KW)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of AesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.EncryptBlockUInt32Array">
            <summary>Sets the shim of AesCipher.EncryptBlock(UInt32[] KW)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.FFmulXUInt32">
            <summary>Sets the shim of AesCipher.FFmulX(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.GenerateWorkingKeyBooleanByteArray">
            <summary>Sets the shim of AesCipher.GenerateWorkingKey(Boolean isEncryption, Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.InvMcolUInt32">
            <summary>Sets the shim of AesCipher.InvMcol(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.PackBlockByteArrayInt32">
            <summary>Sets the shim of AesCipher.PackBlock(Byte[] bytes, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.ShiftUInt32Int32">
            <summary>Sets the shim of AesCipher.Shift(UInt32 r, Int32 shift)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.SubWordUInt32">
            <summary>Sets the shim of AesCipher.SubWord(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimAesCipher.AllInstances.UnPackBlockByteArrayInt32">
            <summary>Sets the shim of AesCipher.UnPackBlock(Byte[] bytes, Int32 off)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.ConstructorByteArrayBoolean">
            <summary>Sets the shim of Arc4Cipher.Arc4Cipher(Byte[] key, Boolean dischargeFirstBytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of Arc4Cipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.DecryptByteArray">
            <summary>Sets the shim of Arc4Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of Arc4Cipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.EncryptByteArray">
            <summary>Sets the shim of Arc4Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.MinimumSizeGet">
            <summary>Sets the shim of Arc4Cipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.ProcessBytesByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of Arc4Cipher.ProcessBytes(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.Reset">
            <summary>Sets the shim of Arc4Cipher.Reset()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.SetKeyByteArray">
            <summary>Sets the shim of Arc4Cipher.SetKey(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.StaticConstructor">
            <summary>Sets the shim of Arc4Cipher.Arc4Cipher()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of Arc4Cipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.DecryptByteArray">
            <summary>Sets the shim of Arc4Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of Arc4Cipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.EncryptByteArray">
            <summary>Sets the shim of Arc4Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.MinimumSizeGet">
            <summary>Sets the shim of Arc4Cipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.ProcessBytesByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of Arc4Cipher.ProcessBytes(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.Reset">
            <summary>Sets the shim of Arc4Cipher.Reset()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimArc4Cipher.AllInstances.SetKeyByteArray">
            <summary>Sets the shim of Arc4Cipher.SetKey(Byte[] keyBytes)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of BlowfishCipher.BlowfishCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of BlowfishCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of BlowfishCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.FUInt32">
            <summary>Sets the shim of BlowfishCipher.F(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.ProcessTableUInt32UInt32UInt32Array">
            <summary>Sets the shim of BlowfishCipher.ProcessTable(UInt32 xl, UInt32 xr, UInt32[] table)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.SetKeyByteArray">
            <summary>Sets the shim of BlowfishCipher.SetKey(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.StaticConstructor">
            <summary>Sets the shim of BlowfishCipher.BlowfishCipher()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of BlowfishCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of BlowfishCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.AllInstances.FUInt32">
            <summary>Sets the shim of BlowfishCipher.F(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.AllInstances.ProcessTableUInt32UInt32UInt32Array">
            <summary>Sets the shim of BlowfishCipher.ProcessTable(UInt32 xl, UInt32 xr, UInt32[] table)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimBlowfishCipher.AllInstances.SetKeyByteArray">
            <summary>Sets the shim of BlowfishCipher.SetKey(Byte[] key)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.CastCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.CastCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.Bits32ToIntsUInt32Int32ArrayInt32">
            <summary>Sets the shim of CastCipher.Bits32ToInts(UInt32 inData, Int32[] b, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.CastDecipherUInt32UInt32UInt32Array">
            <summary>Sets the shim of CastCipher.CastDecipher(UInt32 L16, UInt32 R16, UInt32[] result)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.CastEncipherUInt32UInt32UInt32Array">
            <summary>Sets the shim of CastCipher.CastEncipher(UInt32 L0, UInt32 R0, UInt32[] result)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of CastCipher.CastCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CastCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CastCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.F1UInt32UInt32Int32">
            <summary>Sets the shim of CastCipher.F1(UInt32 D, UInt32 Kmi, Int32 Kri)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.F2UInt32UInt32Int32">
            <summary>Sets the shim of CastCipher.F2(UInt32 D, UInt32 Kmi, Int32 Kri)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.F3UInt32UInt32Int32">
            <summary>Sets the shim of CastCipher.F3(UInt32 D, UInt32 Kmi, Int32 Kri)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.IntsTo32bitsInt32ArrayInt32">
            <summary>Sets the shim of CastCipher.IntsTo32bits(Int32[] b, Int32 i)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.SetKeyByteArray">
            <summary>Sets the shim of CastCipher.SetKey(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.StaticConstructor">
            <summary>Sets the shim of CastCipher.CastCipher()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.AllInstances.CastDecipherUInt32UInt32UInt32Array">
            <summary>Sets the shim of CastCipher.CastDecipher(UInt32 L16, UInt32 R16, UInt32[] result)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.AllInstances.CastEncipherUInt32UInt32UInt32Array">
            <summary>Sets the shim of CastCipher.CastEncipher(UInt32 L0, UInt32 R0, UInt32[] result)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CastCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CastCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCastCipher.AllInstances.SetKeyByteArray">
            <summary>Sets the shim of CastCipher.SetKey(Byte[] key)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.CipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.CipherMode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.ConstructorByteArray">
            <summary>Sets the shim of CipherMode.CipherMode(Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.InitBlockCipher">
            <summary>Sets the shim of CipherMode.Init(BlockCipher cipher)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherMode.AllInstances.InitBlockCipher">
            <summary>Sets the shim of CipherMode.Init(BlockCipher cipher)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding.Constructor">
            <summary>Sets the shim of CipherPadding.CipherPadding()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimCipherPadding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.DesCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.DesCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of DesCipher.DesCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of DesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.DesFuncInt32ArrayByteArrayInt32ByteArrayInt32">
            <summary>Sets the shim of DesCipher.DesFunc(Int32[] wKey, Byte[] input, Int32 inOff, Byte[] outBytes, Int32 outOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of DesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.GenerateWorkingKeyBooleanByteArray">
            <summary>Sets the shim of DesCipher.GenerateWorkingKey(Boolean encrypting, Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.StaticConstructor">
            <summary>Sets the shim of DesCipher.DesCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.ValidateKey">
            <summary>Sets the shim of DesCipher.ValidateKey()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of DesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of DesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.AllInstances.GenerateWorkingKeyBooleanByteArray">
            <summary>Sets the shim of DesCipher.GenerateWorkingKey(Boolean encrypting, Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimDesCipher.AllInstances.ValidateKey">
            <summary>Sets the shim of DesCipher.ValidateKey()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.ConstructorRsaKey">
            <summary>Sets the shim of RsaCipher.RsaCipher(RsaKey key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.DecryptByteArray">
            <summary>Sets the shim of RsaCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.EncryptByteArray">
            <summary>Sets the shim of RsaCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.TransformByteArray">
            <summary>Sets the shim of RsaCipher.Transform(Byte[] data)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.AllInstances.DecryptByteArray">
            <summary>Sets the shim of RsaCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.AllInstances.EncryptByteArray">
            <summary>Sets the shim of RsaCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimRsaCipher.AllInstances.TransformByteArray">
            <summary>Sets the shim of RsaCipher.Transform(Byte[] data)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.BytesToWordByteArrayInt32">
            <summary>Sets the shim of SerpentCipher.BytesToWord(Byte[] src, Int32 srcOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of SerpentCipher.SerpentCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of SerpentCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of SerpentCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib0Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib0(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib1Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib1(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib2Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib2(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib3Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib3(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib4Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib4(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib5Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib5(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib6Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib6(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Ib7Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib7(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.InverseLT">
            <summary>Sets the shim of SerpentCipher.InverseLT()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.LT">
            <summary>Sets the shim of SerpentCipher.LT()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.MakeWorkingKeyByteArray">
            <summary>Sets the shim of SerpentCipher.MakeWorkingKey(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.RotateLeftInt32Int32">
            <summary>Sets the shim of SerpentCipher.RotateLeft(Int32 x, Int32 bits)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.RotateRightInt32Int32">
            <summary>Sets the shim of SerpentCipher.RotateRight(Int32 x, Int32 bits)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb0Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb0(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb1Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb1(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb2Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb2(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb3Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb3(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb4Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb4(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb5Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb5(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb6Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb6(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.Sb7Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb7(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.StaticConstructor">
            <summary>Sets the shim of SerpentCipher.SerpentCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.WordToBytesInt32ByteArrayInt32">
            <summary>Sets the shim of SerpentCipher.WordToBytes(Int32 word, Byte[] dst, Int32 dstOff)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of SerpentCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of SerpentCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib0Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib0(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib1Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib1(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib2Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib2(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib3Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib3(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib4Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib4(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib5Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib5(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib6Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib6(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Ib7Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Ib7(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.InverseLT">
            <summary>Sets the shim of SerpentCipher.InverseLT()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.LT">
            <summary>Sets the shim of SerpentCipher.LT()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.MakeWorkingKeyByteArray">
            <summary>Sets the shim of SerpentCipher.MakeWorkingKey(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb0Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb0(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb1Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb1(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb2Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb2(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb3Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb3(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb4Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb4(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb5Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb5(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb6Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb6(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimSerpentCipher.AllInstances.Sb7Int32Int32Int32Int32">
            <summary>Sets the shim of SerpentCipher.Sb7(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of TripleDesCipher.TripleDesCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TripleDesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TripleDesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.ValidateKey">
            <summary>Sets the shim of TripleDesCipher.ValidateKey()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TripleDesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TripleDesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTripleDesCipher.AllInstances.ValidateKey">
            <summary>Sets the shim of TripleDesCipher.ValidateKey()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.Bits32ToBytesInt32ByteArrayInt32">
            <summary>Sets the shim of TwofishCipher.Bits32ToBytes(Int32 inData, Byte[] b, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.BytesTo32BitsByteArrayInt32">
            <summary>Sets the shim of TwofishCipher.BytesTo32Bits(Byte[] b, Int32 p)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.ConstructorByteArrayCipherModeCipherPadding">
            <summary>Sets the shim of TwofishCipher.TwofishCipher(Byte[] key, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TwofishCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TwofishCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.F32Int32Int32Array">
            <summary>Sets the shim of TwofishCipher.F32(Int32 x, Int32[] k32)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.Fe32_0Int32ArrayInt32">
            <summary>Sets the shim of TwofishCipher.Fe32_0(Int32[] gSBox1, Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.Fe32_3Int32ArrayInt32">
            <summary>Sets the shim of TwofishCipher.Fe32_3(Int32[] gSBox1, Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.LFSR1Int32">
            <summary>Sets the shim of TwofishCipher.LFSR1(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.LFSR2Int32">
            <summary>Sets the shim of TwofishCipher.LFSR2(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.M_b0Int32">
            <summary>Sets the shim of TwofishCipher.M_b0(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.M_b1Int32">
            <summary>Sets the shim of TwofishCipher.M_b1(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.M_b2Int32">
            <summary>Sets the shim of TwofishCipher.M_b2(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.M_b3Int32">
            <summary>Sets the shim of TwofishCipher.M_b3(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.Mx_XInt32">
            <summary>Sets the shim of TwofishCipher.Mx_X(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.Mx_YInt32">
            <summary>Sets the shim of TwofishCipher.Mx_Y(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.RS_MDS_EncodeInt32Int32">
            <summary>Sets the shim of TwofishCipher.RS_MDS_Encode(Int32 k0, Int32 k1)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.RS_remInt32">
            <summary>Sets the shim of TwofishCipher.RS_rem(Int32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.SetKeyByteArray">
            <summary>Sets the shim of TwofishCipher.SetKey(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.StaticConstructor">
            <summary>Sets the shim of TwofishCipher.TwofishCipher()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TwofishCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of TwofishCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.AllInstances.F32Int32Int32Array">
            <summary>Sets the shim of TwofishCipher.F32(Int32 x, Int32[] k32)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.ShimTwofishCipher.AllInstances.SetKeyByteArray">
            <summary>Sets the shim of TwofishCipher.SetKey(Byte[] key)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.CipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.InitializeStub">
            <summary>Initializes a new instance of type StubCipherMode</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherMode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.InitializeStub">
            <summary>Initializes a new instance of type StubCipherPadding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.Pad(System.Int32,System.Byte[])">
            <summary>Sets the stub of CipherPadding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.PadInt32ByteArray">
            <summary>Sets the stub of CipherPadding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubCipherPadding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.DesCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of BlockCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of DesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of DesCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.DecryptByteArray">
            <summary>Sets the stub of BlockCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of BlockCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of DesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of DesCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.EncryptByteArray">
            <summary>Sets the stub of BlockCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.InitializeStub">
            <summary>Initializes a new instance of type StubDesCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.MinimumSizeGet">
            <summary>Sets the stub of BlockCipher.get_MinimumSize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.ValidateKey">
            <summary>Sets the stub of DesCipher.ValidateKey()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.ValidateKey01">
            <summary>Sets the stub of DesCipher.ValidateKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubDesCipher.MinimumSize">
            <summary>Sets the stub of BlockCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.#ctor(Renci.SshNet.Security.RsaKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of RsaCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.DecryptByteArray">
            <summary>Sets the stub of RsaCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of RsaCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.EncryptByteArray">
            <summary>Sets the stub of RsaCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.InitializeStub">
            <summary>Initializes a new instance of type StubRsaCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.MinimumSizeGet">
            <summary>Sets the stub of AsymmetricCipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Fakes.StubRsaCipher.MinimumSize">
            <summary>Sets the stub of AsymmetricCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.ConstructorByteArray">
            <summary>Sets the shim of CbcCipherMode.CbcCipherMode(Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CbcCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CbcCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CbcCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCbcCipherMode.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CbcCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.ConstructorByteArray">
            <summary>Sets the shim of CfbCipherMode.CfbCipherMode(Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCfbCipherMode.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.ConstructorByteArray">
            <summary>Sets the shim of CtrCipherMode.CtrCipherMode(Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CtrCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CtrCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CtrCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimCtrCipherMode.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of CtrCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.ConstructorByteArray">
            <summary>Sets the shim of OfbCipherMode.OfbCipherMode(Byte[] iv)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of OfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of OfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.AllInstances.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of OfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.ShimOfbCipherMode.AllInstances.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of OfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CbcCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CbcCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CbcCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CbcCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.InitializeStub">
            <summary>Initializes a new instance of type StubCbcCipherMode</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCbcCipherMode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.InitializeStub">
            <summary>Initializes a new instance of type StubCfbCipherMode</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCfbCipherMode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CtrCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CtrCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of CtrCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of CtrCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.InitializeStub">
            <summary>Initializes a new instance of type StubCtrCipherMode</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubCtrCipherMode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of OfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of OfbCipherMode.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of OfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of OfbCipherMode.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.InitializeStub">
            <summary>Initializes a new instance of type StubOfbCipherMode</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Modes.Fakes.StubOfbCipherMode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.Constructor">
            <summary>Sets the shim of PKCS5Padding.PKCS5Padding()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.PadInt32ByteArray">
            <summary>Sets the shim of PKCS5Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS5Padding.AllInstances.PadInt32ByteArray">
            <summary>Sets the shim of PKCS5Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.#ctor(Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.Constructor">
            <summary>Sets the shim of PKCS7Padding.PKCS7Padding()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.PadInt32ByteArray">
            <summary>Sets the shim of PKCS7Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.ShimPKCS7Padding.AllInstances.PadInt32ByteArray">
            <summary>Sets the shim of PKCS7Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.InitializeStub">
            <summary>Initializes a new instance of type StubPKCS5Padding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.Pad(System.Int32,System.Byte[])">
            <summary>Sets the stub of PKCS5Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.PadInt32ByteArray">
            <summary>Sets the stub of PKCS5Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS5Padding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.InitializeStub">
            <summary>Initializes a new instance of type StubPKCS7Padding</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.Pad(System.Int32,System.Byte[])">
            <summary>Sets the stub of PKCS7Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.PadInt32ByteArray">
            <summary>Sets the stub of PKCS7Padding.Pad(Int32 blockSize, Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.Fakes.StubPKCS7Padding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.AsymmetricCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.#ctor(Renci.SshNet.Security.Cryptography.AsymmetricCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.Constructor">
            <summary>Sets the shim of AsymmetricCipher.AsymmetricCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.MinimumSizeGet">
            <summary>Sets the shim of AsymmetricCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimAsymmetricCipher.AllInstances.MinimumSizeGet">
            <summary>Sets the shim of AsymmetricCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.BlockCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.#ctor(Renci.SshNet.Security.Cryptography.BlockCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.BlockSizeGet">
            <summary>Sets the shim of BlockCipher.get_BlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.ConstructorByteArrayByteCipherModeCipherPadding">
            <summary>Sets the shim of BlockCipher.BlockCipher(Byte[] key, Byte blockSize, CipherMode mode, CipherPadding padding)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.DecryptByteArray">
            <summary>Sets the shim of BlockCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.EncryptByteArray">
            <summary>Sets the shim of BlockCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.MinimumSizeGet">
            <summary>Sets the shim of BlockCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.AllInstances.BlockSizeGet">
            <summary>Sets the shim of BlockCipher.get_BlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.AllInstances.DecryptByteArray">
            <summary>Sets the shim of BlockCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.AllInstances.EncryptByteArray">
            <summary>Sets the shim of BlockCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimBlockCipher.AllInstances.MinimumSizeGet">
            <summary>Sets the shim of BlockCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.Cipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.#ctor(Renci.SshNet.Security.Cryptography.Cipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.BigEndianToUInt32ByteArray">
            <summary>Sets the shim of Cipher.BigEndianToUInt32(Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.BigEndianToUInt32ByteArrayInt32">
            <summary>Sets the shim of Cipher.BigEndianToUInt32(Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.BigEndianToUInt64ByteArray">
            <summary>Sets the shim of Cipher.BigEndianToUInt64(Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.BigEndianToUInt64ByteArrayInt32">
            <summary>Sets the shim of Cipher.BigEndianToUInt64(Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.Constructor">
            <summary>Sets the shim of Cipher.Cipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.LittleEndianToUInt32ByteArray">
            <summary>Sets the shim of Cipher.LittleEndianToUInt32(Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.LittleEndianToUInt32ByteArrayInt32">
            <summary>Sets the shim of Cipher.LittleEndianToUInt32(Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.LittleEndianToUInt64ByteArray">
            <summary>Sets the shim of Cipher.LittleEndianToUInt64(Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.LittleEndianToUInt64ByteArrayInt32">
            <summary>Sets the shim of Cipher.LittleEndianToUInt64(Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt32ToBigEndianUInt32ByteArray">
            <summary>Sets the shim of Cipher.UInt32ToBigEndian(UInt32 number, Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt32ToBigEndianUInt32ByteArrayInt32">
            <summary>Sets the shim of Cipher.UInt32ToBigEndian(UInt32 number, Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt32ToLittleEndianUInt32ByteArray">
            <summary>Sets the shim of Cipher.UInt32ToLittleEndian(UInt32 number, Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt32ToLittleEndianUInt32ByteArrayInt32">
            <summary>Sets the shim of Cipher.UInt32ToLittleEndian(UInt32 number, Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt64ToBigEndianUInt64ByteArray">
            <summary>Sets the shim of Cipher.UInt64ToBigEndian(UInt64 number, Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt64ToBigEndianUInt64ByteArrayInt32">
            <summary>Sets the shim of Cipher.UInt64ToBigEndian(UInt64 number, Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt64ToLittleEndianUInt64ByteArray">
            <summary>Sets the shim of Cipher.UInt64ToLittleEndian(UInt64 number, Byte[] buffer)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.UInt64ToLittleEndianUInt64ByteArrayInt32">
            <summary>Sets the shim of Cipher.UInt64ToLittleEndian(UInt64 number, Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.CipherDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.#ctor(Renci.SshNet.Security.Cryptography.CipherDigitalSignature)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.ConstructorObjectIdentifierAsymmetricCipher">
            <summary>Sets the shim of CipherDigitalSignature.CipherDigitalSignature(ObjectIdentifier oid, AsymmetricCipher cipher)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.DerEncodeByteArray">
            <summary>Sets the shim of CipherDigitalSignature.DerEncode(Byte[] hashData)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.SignByteArray">
            <summary>Sets the shim of CipherDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.VerifyByteArrayByteArray">
            <summary>Sets the shim of CipherDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.AllInstances.DerEncodeByteArray">
            <summary>Sets the shim of CipherDigitalSignature.DerEncode(Byte[] hashData)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.AllInstances.SignByteArray">
            <summary>Sets the shim of CipherDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimCipherDigitalSignature.AllInstances.VerifyByteArrayByteArray">
            <summary>Sets the shim of CipherDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.DigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature.#ctor(Renci.SshNet.Security.Cryptography.DigitalSignature)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature.Constructor">
            <summary>Sets the shim of DigitalSignature.DigitalSignature()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimDigitalSignature.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.DsaDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.#ctor(Renci.SshNet.Security.Cryptography.DsaDigitalSignature)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.ConstructorDsaKey">
            <summary>Sets the shim of DsaDigitalSignature.DsaDigitalSignature(DsaKey key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.Dispose">
            <summary>Sets the shim of DsaDigitalSignature.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.DisposeBoolean">
            <summary>Sets the shim of DsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.SignByteArray">
            <summary>Sets the shim of DsaDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.VerifyByteArrayByteArray">
            <summary>Sets the shim of DsaDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.AllInstances.Dispose">
            <summary>Sets the shim of DsaDigitalSignature.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.AllInstances.SignByteArray">
            <summary>Sets the shim of DsaDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimDsaDigitalSignature.AllInstances.VerifyByteArrayByteArray">
            <summary>Sets the shim of DsaDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.HMac`1</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.#ctor(Renci.SshNet.Security.Cryptography.HMac{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.BlockSizeGet">
            <summary>Sets the shim of HMac`1.get_BlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.Constructor">
            <summary>Sets the shim of HMac`1.HMac`1()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.ConstructorByteArray">
            <summary>Sets the shim of HMac`1.HMac`1(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.ConstructorByteArrayInt32">
            <summary>Sets the shim of HMac`1.HMac`1(Byte[] key, Int32 hashSizeValue)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.DisposeBoolean">
            <summary>Sets the shim of HMac`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of HMac`1.HashCore(Byte[] rgb, Int32 ib, Int32 cb)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.HashFinal">
            <summary>Sets the shim of HMac`1.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.Initialize">
            <summary>Sets the shim of HMac`1.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.InternalInitialize">
            <summary>Sets the shim of HMac`1.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.KeyGet">
            <summary>Sets the shim of HMac`1.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.KeySetByteArray">
            <summary>Sets the shim of HMac`1.set_Key(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.SetKeyByteArray">
            <summary>Sets the shim of HMac`1.SetKey(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.BlockSizeGet">
            <summary>Sets the shim of HMac`1.get_BlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HMac`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of HMac`1.HashCore(Byte[] rgb, Int32 ib, Int32 cb)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.HashFinal">
            <summary>Sets the shim of HMac`1.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.Initialize">
            <summary>Sets the shim of HMac`1.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.InternalInitialize">
            <summary>Sets the shim of HMac`1.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.KeyGet">
            <summary>Sets the shim of HMac`1.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.KeySetByteArray">
            <summary>Sets the shim of HMac`1.set_Key(Byte[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimHMac`1.AllInstances.SetKeyByteArray">
            <summary>Sets the shim of HMac`1.SetKey(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.MD5Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.#ctor(Renci.SshNet.Security.Cryptography.MD5Hash)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.CanReuseTransformGet">
            <summary>Sets the shim of MD5Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of MD5Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.Constructor">
            <summary>Sets the shim of MD5Hash.MD5Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.FInt32Int32Int32">
            <summary>Sets the shim of MD5Hash.F(Int32 u, Int32 v, Int32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.GInt32Int32Int32">
            <summary>Sets the shim of MD5Hash.G(Int32 u, Int32 v, Int32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.HInt32Int32Int32">
            <summary>Sets the shim of MD5Hash.H(Int32 u, Int32 v, Int32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of MD5Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.HashFinal">
            <summary>Sets the shim of MD5Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.HashSizeGet">
            <summary>Sets the shim of MD5Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.Initialize">
            <summary>Sets the shim of MD5Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.InputBlockSizeGet">
            <summary>Sets the shim of MD5Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.InternalInitialize">
            <summary>Sets the shim of MD5Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.KInt32Int32Int32">
            <summary>Sets the shim of MD5Hash.K(Int32 u, Int32 v, Int32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.OutputBlockSizeGet">
            <summary>Sets the shim of MD5Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.ProcessBlock">
            <summary>Sets the shim of MD5Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.ProcessWordByteArrayInt32">
            <summary>Sets the shim of MD5Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.RotateLeftInt32Int32">
            <summary>Sets the shim of MD5Hash.RotateLeft(Int32 x, Int32 n)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.StaticConstructor">
            <summary>Sets the shim of MD5Hash.MD5Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.UnpackWordInt32ByteArrayInt32">
            <summary>Sets the shim of MD5Hash.UnpackWord(Int32 word, Byte[] outBytes, Int32 outOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.UpdateByte">
            <summary>Sets the shim of MD5Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.CanReuseTransformGet">
            <summary>Sets the shim of MD5Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of MD5Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of MD5Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.HashFinal">
            <summary>Sets the shim of MD5Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.HashSizeGet">
            <summary>Sets the shim of MD5Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.Initialize">
            <summary>Sets the shim of MD5Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of MD5Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.InternalInitialize">
            <summary>Sets the shim of MD5Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of MD5Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.ProcessBlock">
            <summary>Sets the shim of MD5Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.ProcessWordByteArrayInt32">
            <summary>Sets the shim of MD5Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.UnpackWordInt32ByteArrayInt32">
            <summary>Sets the shim of MD5Hash.UnpackWord(Int32 word, Byte[] outBytes, Int32 outOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimMD5Hash.AllInstances.UpdateByte">
            <summary>Sets the shim of MD5Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.RIPEMD160Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.#ctor(Renci.SshNet.Security.Cryptography.RIPEMD160Hash)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.CanReuseTransformGet">
            <summary>Sets the shim of RIPEMD160Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of RIPEMD160Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.Constructor">
            <summary>Sets the shim of RIPEMD160Hash.RIPEMD160Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.F1Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F1(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.F2Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F2(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.F3Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F3(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.F4Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F4(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.F5Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F5(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of RIPEMD160Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.HashFinal">
            <summary>Sets the shim of RIPEMD160Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.HashSizeGet">
            <summary>Sets the shim of RIPEMD160Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.Initialize">
            <summary>Sets the shim of RIPEMD160Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.InputBlockSizeGet">
            <summary>Sets the shim of RIPEMD160Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.InternalInitialize">
            <summary>Sets the shim of RIPEMD160Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.OutputBlockSizeGet">
            <summary>Sets the shim of RIPEMD160Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.ProcessBlock">
            <summary>Sets the shim of RIPEMD160Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.ProcessLengthInt64">
            <summary>Sets the shim of RIPEMD160Hash.ProcessLength(Int64 bitLength)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.ProcessWordByteArrayInt32">
            <summary>Sets the shim of RIPEMD160Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.RLInt32Int32">
            <summary>Sets the shim of RIPEMD160Hash.RL(Int32 x, Int32 n)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.UnpackWordInt32ByteArrayInt32">
            <summary>Sets the shim of RIPEMD160Hash.UnpackWord(Int32 word, Byte[] outBytes, Int32 outOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.UpdateByte">
            <summary>Sets the shim of RIPEMD160Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.CanReuseTransformGet">
            <summary>Sets the shim of RIPEMD160Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of RIPEMD160Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.F1Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F1(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.F2Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F2(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.F3Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F3(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.F4Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F4(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.F5Int32Int32Int32">
            <summary>Sets the shim of RIPEMD160Hash.F5(Int32 x, Int32 y, Int32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of RIPEMD160Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.HashFinal">
            <summary>Sets the shim of RIPEMD160Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.HashSizeGet">
            <summary>Sets the shim of RIPEMD160Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.Initialize">
            <summary>Sets the shim of RIPEMD160Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of RIPEMD160Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.InternalInitialize">
            <summary>Sets the shim of RIPEMD160Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of RIPEMD160Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.ProcessBlock">
            <summary>Sets the shim of RIPEMD160Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.ProcessLengthInt64">
            <summary>Sets the shim of RIPEMD160Hash.ProcessLength(Int64 bitLength)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.ProcessWordByteArrayInt32">
            <summary>Sets the shim of RIPEMD160Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.RLInt32Int32">
            <summary>Sets the shim of RIPEMD160Hash.RL(Int32 x, Int32 n)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.UnpackWordInt32ByteArrayInt32">
            <summary>Sets the shim of RIPEMD160Hash.UnpackWord(Int32 word, Byte[] outBytes, Int32 outOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRIPEMD160Hash.AllInstances.UpdateByte">
            <summary>Sets the shim of RIPEMD160Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.RsaDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.#ctor(Renci.SshNet.Security.Cryptography.RsaDigitalSignature)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.ConstructorRsaKey">
            <summary>Sets the shim of RsaDigitalSignature.RsaDigitalSignature(RsaKey rsaKey)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.Dispose">
            <summary>Sets the shim of RsaDigitalSignature.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.DisposeBoolean">
            <summary>Sets the shim of RsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.HashByteArray">
            <summary>Sets the shim of RsaDigitalSignature.Hash(Byte[] input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.AllInstances.Dispose">
            <summary>Sets the shim of RsaDigitalSignature.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.AllInstances.DisposeBoolean">
            <summary>Sets the shim of RsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimRsaDigitalSignature.AllInstances.HashByteArray">
            <summary>Sets the shim of RsaDigitalSignature.Hash(Byte[] input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.SHA1Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.#ctor(Renci.SshNet.Security.Cryptography.SHA1Hash)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.BigEndianToUInt32ByteArrayInt32">
            <summary>Sets the shim of SHA1Hash.BigEndianToUInt32(Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.CanReuseTransformGet">
            <summary>Sets the shim of SHA1Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of SHA1Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.Constructor">
            <summary>Sets the shim of SHA1Hash.SHA1Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.FUInt32UInt32UInt32">
            <summary>Sets the shim of SHA1Hash.F(UInt32 u, UInt32 v, UInt32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.GUInt32UInt32UInt32">
            <summary>Sets the shim of SHA1Hash.G(UInt32 u, UInt32 v, UInt32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.HUInt32UInt32UInt32">
            <summary>Sets the shim of SHA1Hash.H(UInt32 u, UInt32 v, UInt32 w)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA1Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.HashFinal">
            <summary>Sets the shim of SHA1Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.HashSizeGet">
            <summary>Sets the shim of SHA1Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.Initialize">
            <summary>Sets the shim of SHA1Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.InputBlockSizeGet">
            <summary>Sets the shim of SHA1Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.InternalInitialize">
            <summary>Sets the shim of SHA1Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.OutputBlockSizeGet">
            <summary>Sets the shim of SHA1Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.ProcessBlock">
            <summary>Sets the shim of SHA1Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.ProcessWordByteArrayInt32">
            <summary>Sets the shim of SHA1Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.UInt32ToBigEndianUInt32ByteArrayInt32">
            <summary>Sets the shim of SHA1Hash.UInt32ToBigEndian(UInt32 n, Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.UpdateByte">
            <summary>Sets the shim of SHA1Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.CanReuseTransformGet">
            <summary>Sets the shim of SHA1Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of SHA1Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA1Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.HashFinal">
            <summary>Sets the shim of SHA1Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.HashSizeGet">
            <summary>Sets the shim of SHA1Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.Initialize">
            <summary>Sets the shim of SHA1Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of SHA1Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.InternalInitialize">
            <summary>Sets the shim of SHA1Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of SHA1Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.ProcessBlock">
            <summary>Sets the shim of SHA1Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.ProcessWordByteArrayInt32">
            <summary>Sets the shim of SHA1Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA1Hash.AllInstances.UpdateByte">
            <summary>Sets the shim of SHA1Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.SHA256Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.#ctor(Renci.SshNet.Security.Cryptography.SHA256Hash)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.BE_To_UInt32ByteArrayInt32">
            <summary>Sets the shim of SHA256Hash.BE_To_UInt32(Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.CanReuseTransformGet">
            <summary>Sets the shim of SHA256Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of SHA256Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Constructor">
            <summary>Sets the shim of SHA256Hash.SHA256Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA256Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.HashFinal">
            <summary>Sets the shim of SHA256Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.HashSizeGet">
            <summary>Sets the shim of SHA256Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Initialize">
            <summary>Sets the shim of SHA256Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.InputBlockSizeGet">
            <summary>Sets the shim of SHA256Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.InternalInitialize">
            <summary>Sets the shim of SHA256Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.OutputBlockSizeGet">
            <summary>Sets the shim of SHA256Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.ProcessBlock">
            <summary>Sets the shim of SHA256Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.ProcessLengthInt64">
            <summary>Sets the shim of SHA256Hash.ProcessLength(Int64 bitLength)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.ProcessWordByteArrayInt32">
            <summary>Sets the shim of SHA256Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.StaticConstructor">
            <summary>Sets the shim of SHA256Hash.SHA256Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Sum0MajUInt32UInt32UInt32">
            <summary>Sets the shim of SHA256Hash.Sum0Maj(UInt32 x, UInt32 y, UInt32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Sum1ChUInt32UInt32UInt32">
            <summary>Sets the shim of SHA256Hash.Sum1Ch(UInt32 x, UInt32 y, UInt32 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Theta0UInt32">
            <summary>Sets the shim of SHA256Hash.Theta0(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.Theta1UInt32">
            <summary>Sets the shim of SHA256Hash.Theta1(UInt32 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.UInt32_To_BEUInt32ByteArrayInt32">
            <summary>Sets the shim of SHA256Hash.UInt32_To_BE(UInt32 n, Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.UpdateByte">
            <summary>Sets the shim of SHA256Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.CanReuseTransformGet">
            <summary>Sets the shim of SHA256Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of SHA256Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA256Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.HashFinal">
            <summary>Sets the shim of SHA256Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.HashSizeGet">
            <summary>Sets the shim of SHA256Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.Initialize">
            <summary>Sets the shim of SHA256Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of SHA256Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.InternalInitialize">
            <summary>Sets the shim of SHA256Hash.InternalInitialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of SHA256Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.ProcessBlock">
            <summary>Sets the shim of SHA256Hash.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.ProcessLengthInt64">
            <summary>Sets the shim of SHA256Hash.ProcessLength(Int64 bitLength)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.ProcessWordByteArrayInt32">
            <summary>Sets the shim of SHA256Hash.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA256Hash.AllInstances.UpdateByte">
            <summary>Sets the shim of SHA256Hash.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.SHA2HashBase</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.#ctor(Renci.SshNet.Security.Cryptography.SHA2HashBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AdjustByteCounts">
            <summary>Sets the shim of SHA2HashBase.AdjustByteCounts()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.BE_To_UInt32ByteArray">
            <summary>Sets the shim of SHA2HashBase.BE_To_UInt32(Byte[] bs)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.BE_To_UInt32ByteArrayInt32">
            <summary>Sets the shim of SHA2HashBase.BE_To_UInt32(Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.BE_To_UInt64ByteArray">
            <summary>Sets the shim of SHA2HashBase.BE_To_UInt64(Byte[] bs)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.BE_To_UInt64ByteArrayInt32">
            <summary>Sets the shim of SHA2HashBase.BE_To_UInt64(Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.CanReuseTransformGet">
            <summary>Sets the shim of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.ChUInt64UInt64UInt64">
            <summary>Sets the shim of SHA2HashBase.Ch(UInt64 x, UInt64 y, UInt64 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Constructor">
            <summary>Sets the shim of SHA2HashBase.SHA2HashBase()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Finish">
            <summary>Sets the shim of SHA2HashBase.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Initialize">
            <summary>Sets the shim of SHA2HashBase.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.MajUInt64UInt64UInt64">
            <summary>Sets the shim of SHA2HashBase.Maj(UInt64 x, UInt64 y, UInt64 z)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.ProcessBlock">
            <summary>Sets the shim of SHA2HashBase.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.ProcessLengthInt64Int64">
            <summary>Sets the shim of SHA2HashBase.ProcessLength(Int64 lowW, Int64 hiW)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.ProcessWordByteArrayInt32">
            <summary>Sets the shim of SHA2HashBase.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Sigma0UInt64">
            <summary>Sets the shim of SHA2HashBase.Sigma0(UInt64 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Sigma1UInt64">
            <summary>Sets the shim of SHA2HashBase.Sigma1(UInt64 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.StaticConstructor">
            <summary>Sets the shim of SHA2HashBase.SHA2HashBase()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Sum0UInt64">
            <summary>Sets the shim of SHA2HashBase.Sum0(UInt64 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.Sum1UInt64">
            <summary>Sets the shim of SHA2HashBase.Sum1(UInt64 x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.UInt32_To_BEUInt32ByteArrayInt32">
            <summary>Sets the shim of SHA2HashBase.UInt32_To_BE(UInt32 n, Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.UInt64_To_BEUInt64ByteArrayInt32">
            <summary>Sets the shim of SHA2HashBase.UInt64_To_BE(UInt64 n, Byte[] bs, Int32 off)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.UpdateByte">
            <summary>Sets the shim of SHA2HashBase.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.AdjustByteCounts">
            <summary>Sets the shim of SHA2HashBase.AdjustByteCounts()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.CanReuseTransformGet">
            <summary>Sets the shim of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.CanTransformMultipleBlocksGet">
            <summary>Sets the shim of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.Finish">
            <summary>Sets the shim of SHA2HashBase.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>Sets the shim of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.Initialize">
            <summary>Sets the shim of SHA2HashBase.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.ProcessBlock">
            <summary>Sets the shim of SHA2HashBase.ProcessBlock()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.ProcessLengthInt64Int64">
            <summary>Sets the shim of SHA2HashBase.ProcessLength(Int64 lowW, Int64 hiW)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.ProcessWordByteArrayInt32">
            <summary>Sets the shim of SHA2HashBase.ProcessWord(Byte[] input, Int32 inOff)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA2HashBase.AllInstances.UpdateByte">
            <summary>Sets the shim of SHA2HashBase.Update(Byte input)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.SHA384Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.#ctor(Renci.SshNet.Security.Cryptography.SHA384Hash)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.Constructor">
            <summary>Sets the shim of SHA384Hash.SHA384Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.HashFinal">
            <summary>Sets the shim of SHA384Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.HashSizeGet">
            <summary>Sets the shim of SHA384Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.Initialize">
            <summary>Sets the shim of SHA384Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.InputBlockSizeGet">
            <summary>Sets the shim of SHA384Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.OutputBlockSizeGet">
            <summary>Sets the shim of SHA384Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.AllInstances.HashFinal">
            <summary>Sets the shim of SHA384Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.AllInstances.HashSizeGet">
            <summary>Sets the shim of SHA384Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.AllInstances.Initialize">
            <summary>Sets the shim of SHA384Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of SHA384Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA384Hash.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of SHA384Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.SHA512Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.#ctor(Renci.SshNet.Security.Cryptography.SHA512Hash)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.Constructor">
            <summary>Sets the shim of SHA512Hash.SHA512Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.HashFinal">
            <summary>Sets the shim of SHA512Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.HashSizeGet">
            <summary>Sets the shim of SHA512Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.Initialize">
            <summary>Sets the shim of SHA512Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.InputBlockSizeGet">
            <summary>Sets the shim of SHA512Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.OutputBlockSizeGet">
            <summary>Sets the shim of SHA512Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.AllInstances.HashFinal">
            <summary>Sets the shim of SHA512Hash.HashFinal()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.AllInstances.HashSizeGet">
            <summary>Sets the shim of SHA512Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.AllInstances.Initialize">
            <summary>Sets the shim of SHA512Hash.Initialize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.AllInstances.InputBlockSizeGet">
            <summary>Sets the shim of SHA512Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSHA512Hash.AllInstances.OutputBlockSizeGet">
            <summary>Sets the shim of SHA512Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.StreamCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher.#ctor(Renci.SshNet.Security.Cryptography.StreamCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher.ConstructorByteArray">
            <summary>Sets the shim of StreamCipher.StreamCipher(Byte[] key)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimStreamCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher">
            <summary>Shim type of Renci.SshNet.Security.Cryptography.SymmetricCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.#ctor(Renci.SshNet.Security.Cryptography.SymmetricCipher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.ConstructorByteArray">
            <summary>Sets the shim of SymmetricCipher.SymmetricCipher(Byte[] key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.KeyGet">
            <summary>Sets the shim of SymmetricCipher.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.KeySetByteArray">
            <summary>Sets the shim of SymmetricCipher.set_Key(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.AllInstances.KeyGet">
            <summary>Sets the shim of SymmetricCipher.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.ShimSymmetricCipher.AllInstances.KeySetByteArray">
            <summary>Sets the shim of SymmetricCipher.set_Key(Byte[] value)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.AsymmetricCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.DecryptByteArray">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.EncryptByteArray">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.InitializeStub">
            <summary>Initializes a new instance of type StubAsymmetricCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.MinimumSizeGet">
            <summary>Sets the stub of AsymmetricCipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubAsymmetricCipher.MinimumSize">
            <summary>Sets the stub of AsymmetricCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.BlockCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.#ctor(System.Byte[],System.Byte,Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of BlockCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of SymmetricCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of SymmetricCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.DecryptByteArray">
            <summary>Sets the stub of BlockCipher.Decrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of BlockCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of SymmetricCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of SymmetricCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.EncryptByteArray">
            <summary>Sets the stub of BlockCipher.Encrypt(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.InitializeStub">
            <summary>Initializes a new instance of type StubBlockCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.MinimumSizeGet">
            <summary>Sets the stub of BlockCipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubBlockCipher.MinimumSize">
            <summary>Sets the stub of BlockCipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.Cipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.DecryptByteArray">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.EncryptByteArray">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.InitializeStub">
            <summary>Initializes a new instance of type StubCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.MinimumSizeGet">
            <summary>Sets the stub of Cipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipher.MinimumSize">
            <summary>Sets the stub of Cipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.CipherDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.#ctor(Renci.SshNet.Common.ObjectIdentifier,Renci.SshNet.Security.Cryptography.AsymmetricCipher)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.Hash(System.Byte[])">
            <summary>Sets the stub of CipherDigitalSignature.Hash(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.HashByteArray">
            <summary>Sets the stub of CipherDigitalSignature.Hash(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.InitializeStub">
            <summary>Initializes a new instance of type StubCipherDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.Sign(System.Byte[])">
            <summary>Sets the stub of CipherDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.SignByteArray">
            <summary>Sets the stub of CipherDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>Sets the stub of CipherDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.VerifyByteArrayByteArray">
            <summary>Sets the stub of CipherDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubCipherDigitalSignature.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.DigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.InitializeStub">
            <summary>Initializes a new instance of type StubDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.Sign(System.Byte[])">
            <summary>Sets the stub of DigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.SignByteArray">
            <summary>Sets the stub of DigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>Sets the stub of DigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.VerifyByteArrayByteArray">
            <summary>Sets the stub of DigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubDigitalSignature.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.DsaDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.#ctor(Renci.SshNet.Security.DsaKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.Dispose(System.Boolean)">
            <summary>Sets the stub of DsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.DisposeBoolean">
            <summary>Sets the stub of DsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.InitializeStub">
            <summary>Initializes a new instance of type StubDsaDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.Sign(System.Byte[])">
            <summary>Sets the stub of DsaDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.SignByteArray">
            <summary>Sets the stub of DsaDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>Sets the stub of DsaDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.VerifyByteArrayByteArray">
            <summary>Sets the stub of DsaDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubDsaDigitalSignature.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.HMac`1</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.AttachBackingFieldToKey">
            <summary>Attaches delegates to emulate StubHMac.Key as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.CanReuseTransformGet">
            <summary>Sets the stub of HashAlgorithm.get_CanReuseTransform()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.CanTransformMultipleBlocksGet">
            <summary>Sets the stub of HashAlgorithm.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.Dispose(System.Boolean)">
            <summary>Sets the stub of HMac`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.DisposeBoolean">
            <summary>Sets the stub of HMac`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of HMac`1.HashCore(Byte[] rgb, Int32 ib, Int32 cb)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashCoreByteArrayInt32Int32">
            <summary>Sets the stub of HMac`1.HashCore(Byte[] rgb, Int32 ib, Int32 cb)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashFinal">
            <summary>Sets the stub of HMac`1.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashFinal01">
            <summary>Sets the stub of HMac`1.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashGet">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashSizeGet">
            <summary>Sets the stub of HashAlgorithm.get_HashSize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.Initialize">
            <summary>Sets the stub of HMac`1.Initialize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.Initialize01">
            <summary>Sets the stub of HMac`1.Initialize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.InitializeStub">
            <summary>Initializes a new instance of type StubHMac</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.InputBlockSizeGet">
            <summary>Sets the stub of HashAlgorithm.get_InputBlockSize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.KeyGet">
            <summary>Sets the stub of HMac`1.get_Key()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.KeySetByteArray">
            <summary>Sets the stub of HMac`1.set_Key(Byte[] value)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.OutputBlockSizeGet">
            <summary>Sets the stub of HashAlgorithm.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.CanReuseTransform">
            <summary>Sets the stub of HashAlgorithm.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.CanTransformMultipleBlocks">
            <summary>Sets the stub of HashAlgorithm.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.Hash">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.HashSize">
            <summary>Sets the stub of HashAlgorithm.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.InputBlockSize">
            <summary>Sets the stub of HashAlgorithm.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.Key">
            <summary>Sets the stub of HMac`1.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubHMac`1.OutputBlockSize">
            <summary>Sets the stub of HashAlgorithm.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.RsaDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.#ctor(Renci.SshNet.Security.RsaKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.Dispose(System.Boolean)">
            <summary>Sets the stub of RsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.DisposeBoolean">
            <summary>Sets the stub of RsaDigitalSignature.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.Hash(System.Byte[])">
            <summary>Sets the stub of RsaDigitalSignature.Hash(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.HashByteArray">
            <summary>Sets the stub of RsaDigitalSignature.Hash(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.InitializeStub">
            <summary>Initializes a new instance of type StubRsaDigitalSignature</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.Sign(System.Byte[])">
            <summary>Sets the stub of CipherDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.SignByteArray">
            <summary>Sets the stub of CipherDigitalSignature.Sign(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.Verify(System.Byte[],System.Byte[])">
            <summary>Sets the stub of CipherDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.VerifyByteArrayByteArray">
            <summary>Sets the stub of CipherDigitalSignature.Verify(Byte[] input, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubRsaDigitalSignature.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.SHA256Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.CanReuseTransformGet">
            <summary>Sets the stub of SHA256Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the stub of SHA256Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.Dispose(System.Boolean)">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.DisposeBoolean">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SHA256Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the stub of SHA256Hash.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashFinal">
            <summary>Sets the stub of SHA256Hash.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashFinal01">
            <summary>Sets the stub of SHA256Hash.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashGet">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashSizeGet">
            <summary>Sets the stub of SHA256Hash.get_HashSize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.Initialize">
            <summary>Sets the stub of SHA256Hash.Initialize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.Initialize01">
            <summary>Sets the stub of SHA256Hash.Initialize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.InitializeStub">
            <summary>Initializes a new instance of type StubSHA256Hash</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.InputBlockSizeGet">
            <summary>Sets the stub of SHA256Hash.get_InputBlockSize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.OutputBlockSizeGet">
            <summary>Sets the stub of SHA256Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.CanReuseTransform">
            <summary>Sets the stub of SHA256Hash.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.CanTransformMultipleBlocks">
            <summary>Sets the stub of SHA256Hash.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.Hash">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.HashSize">
            <summary>Sets the stub of SHA256Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.InputBlockSize">
            <summary>Sets the stub of SHA256Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA256Hash.OutputBlockSize">
            <summary>Sets the stub of SHA256Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.SHA2HashBase</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.CanReuseTransformGet">
            <summary>Sets the stub of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.CanTransformMultipleBlocksGet">
            <summary>Sets the stub of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.Dispose(System.Boolean)">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.DisposeBoolean">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashCoreByteArrayInt32Int32">
            <summary>Sets the stub of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashFinal">
            <summary>Sets the stub of HashAlgorithm.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashFinal01">
            <summary>Sets the stub of HashAlgorithm.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashGet">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashSizeGet">
            <summary>Sets the stub of HashAlgorithm.get_HashSize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.Initialize">
            <summary>Sets the stub of SHA2HashBase.Initialize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.Initialize01">
            <summary>Sets the stub of SHA2HashBase.Initialize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.InitializeStub">
            <summary>Initializes a new instance of type StubSHA2HashBase</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.InputBlockSizeGet">
            <summary>Sets the stub of HashAlgorithm.get_InputBlockSize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.OutputBlockSizeGet">
            <summary>Sets the stub of HashAlgorithm.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.CanReuseTransform">
            <summary>Sets the stub of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.CanTransformMultipleBlocks">
            <summary>Sets the stub of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.Hash">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.HashSize">
            <summary>Sets the stub of HashAlgorithm.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.InputBlockSize">
            <summary>Sets the stub of HashAlgorithm.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA2HashBase.OutputBlockSize">
            <summary>Sets the stub of HashAlgorithm.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.SHA384Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.CanReuseTransformGet">
            <summary>Sets the stub of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the stub of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.Dispose(System.Boolean)">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.DisposeBoolean">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the stub of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashFinal">
            <summary>Sets the stub of SHA384Hash.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashFinal01">
            <summary>Sets the stub of SHA384Hash.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashGet">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashSizeGet">
            <summary>Sets the stub of SHA384Hash.get_HashSize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.Initialize">
            <summary>Sets the stub of SHA384Hash.Initialize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.Initialize01">
            <summary>Sets the stub of SHA384Hash.Initialize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.InitializeStub">
            <summary>Initializes a new instance of type StubSHA384Hash</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.InputBlockSizeGet">
            <summary>Sets the stub of SHA384Hash.get_InputBlockSize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.OutputBlockSizeGet">
            <summary>Sets the stub of SHA384Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.CanReuseTransform">
            <summary>Sets the stub of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.CanTransformMultipleBlocks">
            <summary>Sets the stub of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.Hash">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.HashSize">
            <summary>Sets the stub of SHA384Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.InputBlockSize">
            <summary>Sets the stub of SHA384Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA384Hash.OutputBlockSize">
            <summary>Sets the stub of SHA384Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.SHA512Hash</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.CanReuseTransformGet">
            <summary>Sets the stub of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.CanTransformMultipleBlocksGet">
            <summary>Sets the stub of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.Dispose(System.Boolean)">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.DisposeBoolean">
            <summary>Sets the stub of HashAlgorithm.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashCoreByteArrayInt32Int32">
            <summary>Sets the stub of SHA2HashBase.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashFinal">
            <summary>Sets the stub of SHA512Hash.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashFinal01">
            <summary>Sets the stub of SHA512Hash.HashFinal()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashGet">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashSizeGet">
            <summary>Sets the stub of SHA512Hash.get_HashSize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.Initialize">
            <summary>Sets the stub of SHA512Hash.Initialize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.Initialize01">
            <summary>Sets the stub of SHA512Hash.Initialize()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.InitializeStub">
            <summary>Initializes a new instance of type StubSHA512Hash</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.InputBlockSizeGet">
            <summary>Sets the stub of SHA512Hash.get_InputBlockSize()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.OutputBlockSizeGet">
            <summary>Sets the stub of SHA512Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.CanReuseTransform">
            <summary>Sets the stub of SHA2HashBase.get_CanReuseTransform()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.CanTransformMultipleBlocks">
            <summary>Sets the stub of SHA2HashBase.get_CanTransformMultipleBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.Hash">
            <summary>Sets the stub of HashAlgorithm.get_Hash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.HashSize">
            <summary>Sets the stub of SHA512Hash.get_HashSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.InputBlockSize">
            <summary>Sets the stub of SHA512Hash.get_InputBlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSHA512Hash.OutputBlockSize">
            <summary>Sets the stub of SHA512Hash.get_OutputBlockSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.StreamCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of SymmetricCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of SymmetricCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.DecryptByteArray">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of SymmetricCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of SymmetricCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.EncryptByteArray">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.InitializeStub">
            <summary>Initializes a new instance of type StubStreamCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.MinimumSizeGet">
            <summary>Sets the stub of Cipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubStreamCipher.MinimumSize">
            <summary>Sets the stub of Cipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher">
            <summary>Stub type of Renci.SshNet.Security.Cryptography.SymmetricCipher</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.Decrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of SymmetricCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.DecryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of SymmetricCipher.DecryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.DecryptByteArray">
            <summary>Sets the stub of Cipher.Decrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.Encrypt(System.Byte[])">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Sets the stub of SymmetricCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.EncryptBlockByteArrayInt32Int32ByteArrayInt32">
            <summary>Sets the stub of SymmetricCipher.EncryptBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[] outputBuffer, Int32 outputOffset)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.EncryptByteArray">
            <summary>Sets the stub of Cipher.Encrypt(Byte[] input)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.InitializeStub">
            <summary>Initializes a new instance of type StubSymmetricCipher</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.MinimumSizeGet">
            <summary>Sets the stub of Cipher.get_MinimumSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Fakes.StubSymmetricCipher.MinimumSize">
            <summary>Sets the stub of Cipher.get_MinimumSize()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimAlgorithm">
            <summary>Shim type of Renci.SshNet.Security.Algorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimAlgorithm.#ctor(Renci.SshNet.Security.Algorithm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimAlgorithm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimAlgorithm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimAlgorithm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimAlgorithm.Constructor">
            <summary>Sets the shim of Algorithm.Algorithm()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimAlgorithm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm">
            <summary>Shim type of Renci.SshNet.Security.CertificateHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.#ctor(Renci.SshNet.Security.CertificateHostAlgorithm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.ConstructorString">
            <summary>Sets the shim of CertificateHostAlgorithm.CertificateHostAlgorithm(String name)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.DataGet">
            <summary>Sets the shim of CertificateHostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.SignByteArray">
            <summary>Sets the shim of CertificateHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.VerifySignatureByteArrayByteArray">
            <summary>Sets the shim of CertificateHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.AllInstances.DataGet">
            <summary>Sets the shim of CertificateHostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.AllInstances.SignByteArray">
            <summary>Sets the shim of CertificateHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimCertificateHostAlgorithm.AllInstances.VerifySignatureByteArrayByteArray">
            <summary>Sets the shim of CertificateHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimDsaKey">
            <summary>Shim type of Renci.SshNet.Security.DsaKey</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimDsaKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimDsaKey.#ctor(Renci.SshNet.Security.DsaKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimDsaKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimDsaKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimDsaKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.Constructor">
            <summary>Sets the shim of DsaKey.DsaKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.ConstructorBigIntegerBigIntegerBigIntegerBigIntegerBigInteger">
            <summary>Sets the shim of DsaKey.DsaKey(BigInteger p, BigInteger q, BigInteger g, BigInteger y, BigInteger x)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.ConstructorByteArray">
            <summary>Sets the shim of DsaKey.DsaKey(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.DigitalSignatureGet">
            <summary>Sets the shim of DsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.Dispose">
            <summary>Sets the shim of DsaKey.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.DisposeBoolean">
            <summary>Sets the shim of DsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.GGet">
            <summary>Sets the shim of DsaKey.get_G()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.KeyLengthGet">
            <summary>Sets the shim of DsaKey.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.PGet">
            <summary>Sets the shim of DsaKey.get_P()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.PublicGet">
            <summary>Sets the shim of DsaKey.get_Public()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.PublicSetBigIntegerArray">
            <summary>Sets the shim of DsaKey.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.QGet">
            <summary>Sets the shim of DsaKey.get_Q()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.XGet">
            <summary>Sets the shim of DsaKey.get_X()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.YGet">
            <summary>Sets the shim of DsaKey.get_Y()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.DigitalSignatureGet">
            <summary>Sets the shim of DsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.Dispose">
            <summary>Sets the shim of DsaKey.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.GGet">
            <summary>Sets the shim of DsaKey.get_G()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.KeyLengthGet">
            <summary>Sets the shim of DsaKey.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.PGet">
            <summary>Sets the shim of DsaKey.get_P()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.PublicGet">
            <summary>Sets the shim of DsaKey.get_Public()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.PublicSetBigIntegerArray">
            <summary>Sets the shim of DsaKey.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.QGet">
            <summary>Sets the shim of DsaKey.get_Q()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.XGet">
            <summary>Sets the shim of DsaKey.get_X()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimDsaKey.AllInstances.YGet">
            <summary>Sets the shim of DsaKey.get_Y()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimHostAlgorithm">
            <summary>Shim type of Renci.SshNet.Security.HostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.#ctor(Renci.SshNet.Security.HostAlgorithm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.ConstructorString">
            <summary>Sets the shim of HostAlgorithm.HostAlgorithm(String name)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.NameGet">
            <summary>Sets the shim of HostAlgorithm.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.NameSetString">
            <summary>Sets the shim of HostAlgorithm.set_Name(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.AllInstances.NameGet">
            <summary>Sets the shim of HostAlgorithm.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimHostAlgorithm.AllInstances.NameSetString">
            <summary>Sets the shim of HostAlgorithm.set_Name(String value)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKey">
            <summary>Shim type of Renci.SshNet.Security.Key</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKey.#ctor(Renci.SshNet.Security.Key)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.Constructor">
            <summary>Sets the shim of Key.Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.ConstructorByteArray">
            <summary>Sets the shim of Key.Key(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.SignByteArray">
            <summary>Sets the shim of Key.Sign(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.VerifySignatureByteArrayByteArray">
            <summary>Sets the shim of Key.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.AllInstances.SignByteArray">
            <summary>Sets the shim of Key.Sign(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKey.AllInstances.VerifySignatureByteArrayByteArray">
            <summary>Sets the shim of Key.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchange">
            <summary>Shim type of Renci.SshNet.Security.KeyExchange</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchange.#ctor(Renci.SshNet.Security.KeyExchange)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchange.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchange.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchange.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CanTrustHostKeyKeyHostAlgorithm">
            <summary>Sets the shim of KeyExchange.CanTrustHostKey(KeyHostAlgorithm host)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.Constructor">
            <summary>Sets the shim of KeyExchange.KeyExchange()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CreateClientCipher">
            <summary>Sets the shim of KeyExchange.CreateClientCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CreateClientHash">
            <summary>Sets the shim of KeyExchange.CreateClientHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CreateCompressor">
            <summary>Sets the shim of KeyExchange.CreateCompressor()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CreateDecompressor">
            <summary>Sets the shim of KeyExchange.CreateDecompressor()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CreateServerCipher">
            <summary>Sets the shim of KeyExchange.CreateServerCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.CreateServerHash">
            <summary>Sets the shim of KeyExchange.CreateServerHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.Dispose">
            <summary>Sets the shim of KeyExchange.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.DisposeBoolean">
            <summary>Sets the shim of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.ExchangeHashGet">
            <summary>Sets the shim of KeyExchange.get_ExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.Finish">
            <summary>Sets the shim of KeyExchange.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.GenerateSessionKeyBigIntegerByteArrayByteArrayInt32">
            <summary>Sets the shim of KeyExchange.GenerateSessionKey(BigInteger sharedKey, Byte[] exchangeHash, Byte[] key, Int32 size)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.GenerateSessionKeyBigIntegerByteArrayCharByteArray">
            <summary>Sets the shim of KeyExchange.GenerateSessionKey(BigInteger sharedKey, Byte[] exchangeHash, Char p, Byte[] sessionId)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.HashByteArray">
            <summary>Sets the shim of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.HostKeyReceivedAddEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of KeyExchange.add_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.HostKeyReceivedRemoveEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of KeyExchange.remove_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.SendMessageMessage">
            <summary>Sets the shim of KeyExchange.SendMessage(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.SessionGet">
            <summary>Sets the shim of KeyExchange.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.SessionSetSession">
            <summary>Sets the shim of KeyExchange.set_Session(Session value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.SharedKeyGet">
            <summary>Sets the shim of KeyExchange.get_SharedKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.SharedKeySetBigInteger">
            <summary>Sets the shim of KeyExchange.set_SharedKey(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchange.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CanTrustHostKeyKeyHostAlgorithm">
            <summary>Sets the shim of KeyExchange.CanTrustHostKey(KeyHostAlgorithm host)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CreateClientCipher">
            <summary>Sets the shim of KeyExchange.CreateClientCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CreateClientHash">
            <summary>Sets the shim of KeyExchange.CreateClientHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CreateCompressor">
            <summary>Sets the shim of KeyExchange.CreateCompressor()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CreateDecompressor">
            <summary>Sets the shim of KeyExchange.CreateDecompressor()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CreateServerCipher">
            <summary>Sets the shim of KeyExchange.CreateServerCipher()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.CreateServerHash">
            <summary>Sets the shim of KeyExchange.CreateServerHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.Dispose">
            <summary>Sets the shim of KeyExchange.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.DisposeBoolean">
            <summary>Sets the shim of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.ExchangeHashGet">
            <summary>Sets the shim of KeyExchange.get_ExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.Finish">
            <summary>Sets the shim of KeyExchange.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.GenerateSessionKeyBigIntegerByteArrayByteArrayInt32">
            <summary>Sets the shim of KeyExchange.GenerateSessionKey(BigInteger sharedKey, Byte[] exchangeHash, Byte[] key, Int32 size)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.GenerateSessionKeyBigIntegerByteArrayCharByteArray">
            <summary>Sets the shim of KeyExchange.GenerateSessionKey(BigInteger sharedKey, Byte[] exchangeHash, Char p, Byte[] sessionId)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.HashByteArray">
            <summary>Sets the shim of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.HostKeyReceivedAddEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of KeyExchange.add_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.HostKeyReceivedRemoveEventHandlerOfHostKeyEventArgs">
            <summary>Sets the shim of KeyExchange.remove_HostKeyReceived(EventHandler`1&lt;HostKeyEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.SendMessageMessage">
            <summary>Sets the shim of KeyExchange.SendMessage(Message message)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.SessionGet">
            <summary>Sets the shim of KeyExchange.get_Session()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.SessionSetSession">
            <summary>Sets the shim of KeyExchange.set_Session(Session value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.SharedKeyGet">
            <summary>Sets the shim of KeyExchange.get_SharedKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.SharedKeySetBigInteger">
            <summary>Sets the shim of KeyExchange.set_SharedKey(BigInteger value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchange.AllInstances.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchange.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman">
            <summary>Shim type of Renci.SshNet.Security.KeyExchangeDiffieHellman</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.#ctor(Renci.SshNet.Security.KeyExchangeDiffieHellman)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.Constructor">
            <summary>Sets the shim of KeyExchangeDiffieHellman.KeyExchangeDiffieHellman()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.HandleServerDhReplyByteArrayBigIntegerByteArray">
            <summary>Sets the shim of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.PopulateClientExchangeValue">
            <summary>Sets the shim of KeyExchangeDiffieHellman.PopulateClientExchangeValue()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.ValidateExchangeHash">
            <summary>Sets the shim of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.AllInstances.HandleServerDhReplyByteArrayBigIntegerByteArray">
            <summary>Sets the shim of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.AllInstances.PopulateClientExchangeValue">
            <summary>Sets the shim of KeyExchangeDiffieHellman.PopulateClientExchangeValue()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.AllInstances.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellman.AllInstances.ValidateExchangeHash">
            <summary>Sets the shim of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1">
            <summary>Shim type of Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.#ctor(Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.Constructor">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroup1Sha1.KeyExchangeDiffieHellmanGroup1Sha1()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.GroupPrimeGet">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroup1Sha1.get_GroupPrime()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.NameGet">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroup1Sha1.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.AllInstances.GroupPrimeGet">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroup1Sha1.get_GroupPrime()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroup1Sha1.AllInstances.NameGet">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroup1Sha1.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256">
            <summary>Shim type of Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.#ctor(Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.Constructor">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.KeyExchangeDiffieHellmanGroupExchangeSha256()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.Finish">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.HashByteArray">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(Byte[] hashBytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.NameGet">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances.CalculateHash">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances.Finish">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances.HashByteArray">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(Byte[] hashBytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances.NameGet">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupExchangeSha256.AllInstances.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1">
            <summary>Shim type of Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.#ctor(Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.CalculateHash">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.CalculateHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.Constructor">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.KeyExchangeDiffieHellmanGroupSha1()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.Finish">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.AllInstances.CalculateHash">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.CalculateHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.AllInstances.Finish">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.Finish()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.AllInstances.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeDiffieHellmanGroupSha1.AllInstances.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeDiffieHellmanGroupSha1.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman">
            <summary>Shim type of Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.#ctor(Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.CalculateHash">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.CalculateHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.Constructor">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.KeyExchangeEllipticCurveDiffieHellman()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.NameGet">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances.CalculateHash">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.CalculateHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances.HandleServerEcdhReply">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances.NameGet">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances.Session_MessageReceivedObjectMessageEventArgsOfMessage">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.Session_MessageReceived(Object sender, MessageEventArgs`1&lt;Message&gt; e)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances.StartSessionKeyExchangeInitMessage">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyExchangeEllipticCurveDiffieHellman.AllInstances.ValidateExchangeHash">
            <summary>Sets the shim of KeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm">
            <summary>Shim type of Renci.SshNet.Security.KeyHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.#ctor(Renci.SshNet.Security.KeyHostAlgorithm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.ConstructorStringKey">
            <summary>Sets the shim of KeyHostAlgorithm.KeyHostAlgorithm(String name, Key key)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.ConstructorStringKeyByteArray">
            <summary>Sets the shim of KeyHostAlgorithm.KeyHostAlgorithm(String name, Key key, Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.DataGet">
            <summary>Sets the shim of KeyHostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.KeyGet">
            <summary>Sets the shim of KeyHostAlgorithm.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.KeySetKey">
            <summary>Sets the shim of KeyHostAlgorithm.set_Key(Key value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.SignByteArray">
            <summary>Sets the shim of KeyHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.VerifySignatureByteArrayByteArray">
            <summary>Sets the shim of KeyHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.AllInstances.DataGet">
            <summary>Sets the shim of KeyHostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.AllInstances.KeyGet">
            <summary>Sets the shim of KeyHostAlgorithm.get_Key()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.AllInstances.KeySetKey">
            <summary>Sets the shim of KeyHostAlgorithm.set_Key(Key value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.AllInstances.SignByteArray">
            <summary>Sets the shim of KeyHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimKeyHostAlgorithm.AllInstances.VerifySignatureByteArrayByteArray">
            <summary>Sets the shim of KeyHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimRsaKey">
            <summary>Shim type of Renci.SshNet.Security.RsaKey</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimRsaKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimRsaKey.#ctor(Renci.SshNet.Security.RsaKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimRsaKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimRsaKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.ShimRsaKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.Constructor">
            <summary>Sets the shim of RsaKey.RsaKey()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.ConstructorBigIntegerBigIntegerBigIntegerBigIntegerBigIntegerBigInteger">
            <summary>Sets the shim of RsaKey.RsaKey(BigInteger modulus, BigInteger exponent, BigInteger d, BigInteger p, BigInteger q, BigInteger inverseQ)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.ConstructorByteArray">
            <summary>Sets the shim of RsaKey.RsaKey(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.DGet">
            <summary>Sets the shim of RsaKey.get_D()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.DPGet">
            <summary>Sets the shim of RsaKey.get_DP()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.DQGet">
            <summary>Sets the shim of RsaKey.get_DQ()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.DigitalSignatureGet">
            <summary>Sets the shim of RsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.Dispose">
            <summary>Sets the shim of RsaKey.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.DisposeBoolean">
            <summary>Sets the shim of RsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.ExponentGet">
            <summary>Sets the shim of RsaKey.get_Exponent()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.InverseQGet">
            <summary>Sets the shim of RsaKey.get_InverseQ()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.KeyLengthGet">
            <summary>Sets the shim of RsaKey.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.ModulusGet">
            <summary>Sets the shim of RsaKey.get_Modulus()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.PGet">
            <summary>Sets the shim of RsaKey.get_P()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.PrimeExponentBigIntegerBigInteger">
            <summary>Sets the shim of RsaKey.PrimeExponent(BigInteger privateExponent, BigInteger prime)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.PublicGet">
            <summary>Sets the shim of RsaKey.get_Public()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.PublicSetBigIntegerArray">
            <summary>Sets the shim of RsaKey.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.QGet">
            <summary>Sets the shim of RsaKey.get_Q()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.DGet">
            <summary>Sets the shim of RsaKey.get_D()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.DPGet">
            <summary>Sets the shim of RsaKey.get_DP()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.DQGet">
            <summary>Sets the shim of RsaKey.get_DQ()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.DigitalSignatureGet">
            <summary>Sets the shim of RsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.Dispose">
            <summary>Sets the shim of RsaKey.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of RsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.ExponentGet">
            <summary>Sets the shim of RsaKey.get_Exponent()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.InverseQGet">
            <summary>Sets the shim of RsaKey.get_InverseQ()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.KeyLengthGet">
            <summary>Sets the shim of RsaKey.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.ModulusGet">
            <summary>Sets the shim of RsaKey.get_Modulus()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.PGet">
            <summary>Sets the shim of RsaKey.get_P()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.PublicGet">
            <summary>Sets the shim of RsaKey.get_Public()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.PublicSetBigIntegerArray">
            <summary>Sets the shim of RsaKey.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.ShimRsaKey.AllInstances.QGet">
            <summary>Sets the shim of RsaKey.get_Q()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubAlgorithm">
            <summary>Stub type of Renci.SshNet.Security.Algorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubAlgorithm.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubAlgorithm.InitializeStub">
            <summary>Initializes a new instance of type StubAlgorithm</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubAlgorithm.NameGet">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubAlgorithm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubAlgorithm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubAlgorithm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubAlgorithm.Name">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm">
            <summary>Stub type of Renci.SshNet.Security.CertificateHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.DataGet">
            <summary>Sets the stub of CertificateHostAlgorithm.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.Sign(System.Byte[])">
            <summary>Sets the stub of CertificateHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.SignByteArray">
            <summary>Sets the stub of CertificateHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>Sets the stub of CertificateHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.VerifySignatureByteArrayByteArray">
            <summary>Sets the stub of CertificateHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.Data">
            <summary>Sets the stub of CertificateHostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubCertificateHostAlgorithm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubDsaKey">
            <summary>Stub type of Renci.SshNet.Security.DsaKey</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubDsaKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubDsaKey.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubDsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubDsaKey.AttachBackingFieldToPublic">
            <summary>Attaches delegates to emulate StubDsaKey.Public as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubDsaKey.DigitalSignatureGet">
            <summary>Sets the stub of DsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubDsaKey.Dispose(System.Boolean)">
            <summary>Sets the stub of DsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubDsaKey.DisposeBoolean">
            <summary>Sets the stub of DsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubDsaKey.InitializeStub">
            <summary>Initializes a new instance of type StubDsaKey</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubDsaKey.KeyLengthGet">
            <summary>Sets the stub of DsaKey.get_KeyLength()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubDsaKey.PublicGet">
            <summary>Sets the stub of DsaKey.get_Public()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubDsaKey.PublicSetBigIntegerArray">
            <summary>Sets the stub of DsaKey.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubDsaKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubDsaKey.DigitalSignature">
            <summary>Sets the stub of DsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubDsaKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubDsaKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubDsaKey.KeyLength">
            <summary>Sets the stub of DsaKey.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubDsaKey.Public">
            <summary>Sets the stub of DsaKey.get_Public()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubHostAlgorithm">
            <summary>Stub type of Renci.SshNet.Security.HostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubHostAlgorithm.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubHostAlgorithm.DataGet">
            <summary>Sets the stub of HostAlgorithm.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubHostAlgorithm.InitializeStub">
            <summary>Initializes a new instance of type StubHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubHostAlgorithm.Sign(System.Byte[])">
            <summary>Sets the stub of HostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubHostAlgorithm.SignByteArray">
            <summary>Sets the stub of HostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>Sets the stub of HostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubHostAlgorithm.VerifySignatureByteArrayByteArray">
            <summary>Sets the stub of HostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubHostAlgorithm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubHostAlgorithm.Data">
            <summary>Sets the stub of HostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubHostAlgorithm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubHostAlgorithm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKey">
            <summary>Stub type of Renci.SshNet.Security.Key</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKey.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKey.AttachBackingFieldToPublic">
            <summary>Attaches delegates to emulate StubKey.Public as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKey.DigitalSignatureGet">
            <summary>Sets the stub of Key.get_DigitalSignature()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKey.InitializeStub">
            <summary>Initializes a new instance of type StubKey</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKey.KeyLengthGet">
            <summary>Sets the stub of Key.get_KeyLength()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKey.PublicGet">
            <summary>Sets the stub of Key.get_Public()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKey.PublicSetBigIntegerArray">
            <summary>Sets the stub of Key.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKey.DigitalSignature">
            <summary>Sets the stub of Key.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKey.KeyLength">
            <summary>Sets the stub of Key.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKey.Public">
            <summary>Sets the stub of Key.get_Public()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyExchange">
            <summary>Stub type of Renci.SshNet.Security.KeyExchange</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.CalculateHash">
            <summary>Sets the stub of KeyExchange.CalculateHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.CalculateHash01">
            <summary>Sets the stub of KeyExchange.CalculateHash()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.DisposeBoolean">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.Finish">
            <summary>Sets the stub of KeyExchange.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.Finish01">
            <summary>Sets the stub of KeyExchange.Finish()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.Hash(System.Byte[])">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.HashByteArray">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchange</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.NameGet">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Sets the stub of KeyExchange.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.StartSessionKeyExchangeInitMessage">
            <summary>Sets the stub of KeyExchange.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchange.ValidateExchangeHash">
            <summary>Sets the stub of KeyExchange.ValidateExchangeHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchange.ValidateExchangeHash01">
            <summary>Sets the stub of KeyExchange.ValidateExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchange.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchange.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchange.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchange.Name">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman">
            <summary>Stub type of Renci.SshNet.Security.KeyExchangeDiffieHellman</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.CalculateHash">
            <summary>Sets the stub of KeyExchange.CalculateHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.CalculateHash01">
            <summary>Sets the stub of KeyExchange.CalculateHash()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.DisposeBoolean">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.Finish">
            <summary>Sets the stub of KeyExchange.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.Finish01">
            <summary>Sets the stub of KeyExchange.Finish()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.HandleServerDhReplyByteArrayBigIntegerByteArray">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.Hash(System.Byte[])">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.HashByteArray">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeDiffieHellman</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.NameGet">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Sets the stub of KeyExchangeDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.StartSessionKeyExchangeInitMessage">
            <summary>Sets the stub of KeyExchangeDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.ValidateExchangeHash">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.ValidateExchangeHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellman.Name">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1">
            <summary>Stub type of Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.CalculateHash">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.CalculateHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.CalculateHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.CalculateHash()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.DisposeBoolean">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.Finish">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.Finish01">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.GroupPrimeGet">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroup1Sha1.get_GroupPrime()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.HandleServerDhReplyByteArrayBigIntegerByteArray">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.Hash(System.Byte[])">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.HashByteArray">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeDiffieHellmanGroup1Sha1</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.NameGet">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroup1Sha1.get_Name()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.StartSessionKeyExchangeInitMessage">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.ValidateExchangeHash">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.ValidateExchangeHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.GroupPrime">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroup1Sha1.get_GroupPrime()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroup1Sha1.Name">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroup1Sha1.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256">
            <summary>Stub type of Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.DisposeBoolean">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.Finish">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.Finish01">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.Finish()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.HandleServerDhReplyByteArrayBigIntegerByteArray">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.Hash(System.Byte[])">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(Byte[] hashBytes)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.HashByteArray">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(Byte[] hashBytes)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeDiffieHellmanGroupExchangeSha256</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.NameGet">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.get_Name()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.StartSessionKeyExchangeInitMessage">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.ValidateExchangeHash">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.ValidateExchangeHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupExchangeSha256.Name">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupExchangeSha256.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1">
            <summary>Stub type of Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.CalculateHash">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.CalculateHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.CalculateHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.CalculateHash()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.DisposeBoolean">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.Finish">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.Finish01">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.GroupPrimeGet">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.get_GroupPrime()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.HandleServerDhReplyByteArrayBigIntegerByteArray">
            <summary>Sets the stub of KeyExchangeDiffieHellman.HandleServerDhReply(Byte[] hostKey, BigInteger serverExchangeValue, Byte[] signature)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.Hash(System.Byte[])">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.HashByteArray">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeDiffieHellmanGroupSha1</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.NameGet">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.StartSessionKeyExchangeInitMessage">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.ValidateExchangeHash">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.ValidateExchangeHash01">
            <summary>Sets the stub of KeyExchangeDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.GroupPrime">
            <summary>Sets the stub of KeyExchangeDiffieHellmanGroupSha1.get_GroupPrime()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeDiffieHellmanGroupSha1.Name">
            <summary>Sets the stub of Algorithm.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman">
            <summary>Stub type of Renci.SshNet.Security.KeyExchangeEllipticCurveDiffieHellman</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.CalculateHash">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.CalculateHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.CalculateHash01">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.CalculateHash()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.DisposeBoolean">
            <summary>Sets the stub of KeyExchange.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.Finish">
            <summary>Sets the stub of KeyExchange.Finish()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.Finish01">
            <summary>Sets the stub of KeyExchange.Finish()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply01">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.HandleServerEcdhReply()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.Hash(System.Byte[])">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.HashByteArray">
            <summary>Sets the stub of KeyExchange.Hash(Byte[] hashData)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.InitializeStub">
            <summary>Initializes a new instance of type StubKeyExchangeEllipticCurveDiffieHellman</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.NameGet">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.get_Name()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.StartSessionKeyExchangeInitMessage">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.Start(Session session, KeyExchangeInitMessage message)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash01">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.ValidateExchangeHash()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyExchangeEllipticCurveDiffieHellman.Name">
            <summary>Sets the stub of KeyExchangeEllipticCurveDiffieHellman.get_Name()</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm">
            <summary>Stub type of Renci.SshNet.Security.KeyHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.DataGet">
            <summary>Sets the stub of KeyHostAlgorithm.get_Data()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.InitializeStub">
            <summary>Initializes a new instance of type StubKeyHostAlgorithm</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.Sign(System.Byte[])">
            <summary>Sets the stub of KeyHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.SignByteArray">
            <summary>Sets the stub of KeyHostAlgorithm.Sign(Byte[] data)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
            <summary>Sets the stub of KeyHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.VerifySignatureByteArrayByteArray">
            <summary>Sets the stub of KeyHostAlgorithm.VerifySignature(Byte[] data, Byte[] signature)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.Data">
            <summary>Sets the stub of KeyHostAlgorithm.get_Data()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubKeyHostAlgorithm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Security.Fakes.StubRsaKey">
            <summary>Stub type of Renci.SshNet.Security.RsaKey</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubRsaKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubRsaKey.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubRsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubRsaKey.AttachBackingFieldToPublic">
            <summary>Attaches delegates to emulate StubRsaKey.Public as a property with a backing field.</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubRsaKey.DigitalSignatureGet">
            <summary>Sets the stub of RsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubRsaKey.Dispose(System.Boolean)">
            <summary>Sets the stub of RsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubRsaKey.DisposeBoolean">
            <summary>Sets the stub of RsaKey.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Security.Fakes.StubRsaKey.InitializeStub">
            <summary>Initializes a new instance of type StubRsaKey</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubRsaKey.KeyLengthGet">
            <summary>Sets the stub of RsaKey.get_KeyLength()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubRsaKey.PublicGet">
            <summary>Sets the stub of RsaKey.get_Public()</summary>
        </member>
        <member name="F:Renci.SshNet.Security.Fakes.StubRsaKey.PublicSetBigIntegerArray">
            <summary>Sets the stub of RsaKey.set_Public(BigInteger[] value)</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubRsaKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubRsaKey.DigitalSignature">
            <summary>Sets the stub of RsaKey.get_DigitalSignature()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubRsaKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubRsaKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubRsaKey.KeyLength">
            <summary>Sets the stub of RsaKey.get_KeyLength()</summary>
        </member>
        <member name="P:Renci.SshNet.Security.Fakes.StubRsaKey.Public">
            <summary>Sets the stub of RsaKey.get_Public()</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult">
            <summary>Shim type of Renci.SshNet.Sftp.SftpDownloadAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.#ctor(Renci.SshNet.Sftp.SftpDownloadAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of SftpDownloadAsyncResult.SftpDownloadAsyncResult(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.DownloadedBytesGet">
            <summary>Sets the shim of SftpDownloadAsyncResult.get_DownloadedBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.DownloadedBytesSetUInt64">
            <summary>Sets the shim of SftpDownloadAsyncResult.set_DownloadedBytes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.IsDownloadCanceledGet">
            <summary>Sets the shim of SftpDownloadAsyncResult.get_IsDownloadCanceled()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.IsDownloadCanceledSetBoolean">
            <summary>Sets the shim of SftpDownloadAsyncResult.set_IsDownloadCanceled(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.UpdateUInt64">
            <summary>Sets the shim of SftpDownloadAsyncResult.Update(UInt64 downloadedBytes)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.AllInstances.DownloadedBytesGet">
            <summary>Sets the shim of SftpDownloadAsyncResult.get_DownloadedBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.AllInstances.DownloadedBytesSetUInt64">
            <summary>Sets the shim of SftpDownloadAsyncResult.set_DownloadedBytes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.AllInstances.IsDownloadCanceledGet">
            <summary>Sets the shim of SftpDownloadAsyncResult.get_IsDownloadCanceled()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.AllInstances.IsDownloadCanceledSetBoolean">
            <summary>Sets the shim of SftpDownloadAsyncResult.set_IsDownloadCanceled(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpDownloadAsyncResult.AllInstances.UpdateUInt64">
            <summary>Sets the shim of SftpDownloadAsyncResult.Update(UInt64 downloadedBytes)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFile">
            <summary>Shim type of Renci.SshNet.Sftp.SftpFile</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFile.#ctor(Renci.SshNet.Sftp.SftpFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AttributesGet">
            <summary>Sets the shim of SftpFile.get_Attributes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AttributesSetSftpFileAttributes">
            <summary>Sets the shim of SftpFile.set_Attributes(SftpFileAttributes value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.Delete">
            <summary>Sets the shim of SftpFile.Delete()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.ExtensionsGet">
            <summary>Sets the shim of SftpFile.get_Extensions()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.ExtensionsSetIDictionaryOfStringString">
            <summary>Sets the shim of SftpFile.set_Extensions(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.FullNameGet">
            <summary>Sets the shim of SftpFile.get_FullName()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.FullNameSetString">
            <summary>Sets the shim of SftpFile.set_FullName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupCanExecuteGet">
            <summary>Sets the shim of SftpFile.get_GroupCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFile.set_GroupCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupCanReadGet">
            <summary>Sets the shim of SftpFile.get_GroupCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupCanReadSetBoolean">
            <summary>Sets the shim of SftpFile.set_GroupCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupCanWriteGet">
            <summary>Sets the shim of SftpFile.get_GroupCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupCanWriteSetBoolean">
            <summary>Sets the shim of SftpFile.set_GroupCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupIdGet">
            <summary>Sets the shim of SftpFile.get_GroupId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.GroupIdSetInt32">
            <summary>Sets the shim of SftpFile.set_GroupId(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsBlockDeviceGet">
            <summary>Sets the shim of SftpFile.get_IsBlockDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsCharacterDeviceGet">
            <summary>Sets the shim of SftpFile.get_IsCharacterDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsDirectoryGet">
            <summary>Sets the shim of SftpFile.get_IsDirectory()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsNamedPipeGet">
            <summary>Sets the shim of SftpFile.get_IsNamedPipe()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsRegularFileGet">
            <summary>Sets the shim of SftpFile.get_IsRegularFile()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsSocketGet">
            <summary>Sets the shim of SftpFile.get_IsSocket()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.IsSymbolicLinkGet">
            <summary>Sets the shim of SftpFile.get_IsSymbolicLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastAccessTimeGet">
            <summary>Sets the shim of SftpFile.get_LastAccessTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastAccessTimeSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastAccessTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastAccessTimeUtcGet">
            <summary>Sets the shim of SftpFile.get_LastAccessTimeUtc()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastAccessTimeUtcSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastAccessTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastWriteTimeGet">
            <summary>Sets the shim of SftpFile.get_LastWriteTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastWriteTimeSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastWriteTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastWriteTimeUtcGet">
            <summary>Sets the shim of SftpFile.get_LastWriteTimeUtc()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LastWriteTimeUtcSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastWriteTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.LengthGet">
            <summary>Sets the shim of SftpFile.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.MoveToString">
            <summary>Sets the shim of SftpFile.MoveTo(String destFileName)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.NameGet">
            <summary>Sets the shim of SftpFile.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.NameSetString">
            <summary>Sets the shim of SftpFile.set_Name(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OthersCanExecuteGet">
            <summary>Sets the shim of SftpFile.get_OthersCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OthersCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OthersCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OthersCanReadGet">
            <summary>Sets the shim of SftpFile.get_OthersCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OthersCanReadSetBoolean">
            <summary>Sets the shim of SftpFile.set_OthersCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OthersCanWriteGet">
            <summary>Sets the shim of SftpFile.get_OthersCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OthersCanWriteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OthersCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OwnerCanExecuteGet">
            <summary>Sets the shim of SftpFile.get_OwnerCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OwnerCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OwnerCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OwnerCanReadGet">
            <summary>Sets the shim of SftpFile.get_OwnerCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OwnerCanReadSetBoolean">
            <summary>Sets the shim of SftpFile.set_OwnerCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OwnerCanWriteGet">
            <summary>Sets the shim of SftpFile.get_OwnerCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.OwnerCanWriteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OwnerCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.SetPermissionsInt16">
            <summary>Sets the shim of SftpFile.SetPermissions(Int16 mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.ToString">
            <summary>Sets the shim of SftpFile.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.UpdateStatus">
            <summary>Sets the shim of SftpFile.UpdateStatus()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.UserIdGet">
            <summary>Sets the shim of SftpFile.get_UserId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.UserIdSetInt32">
            <summary>Sets the shim of SftpFile.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.AttributesGet">
            <summary>Sets the shim of SftpFile.get_Attributes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.AttributesSetSftpFileAttributes">
            <summary>Sets the shim of SftpFile.set_Attributes(SftpFileAttributes value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.Delete">
            <summary>Sets the shim of SftpFile.Delete()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.ExtensionsGet">
            <summary>Sets the shim of SftpFile.get_Extensions()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.ExtensionsSetIDictionaryOfStringString">
            <summary>Sets the shim of SftpFile.set_Extensions(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.FullNameGet">
            <summary>Sets the shim of SftpFile.get_FullName()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.FullNameSetString">
            <summary>Sets the shim of SftpFile.set_FullName(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupCanExecuteGet">
            <summary>Sets the shim of SftpFile.get_GroupCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFile.set_GroupCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupCanReadGet">
            <summary>Sets the shim of SftpFile.get_GroupCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupCanReadSetBoolean">
            <summary>Sets the shim of SftpFile.set_GroupCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupCanWriteGet">
            <summary>Sets the shim of SftpFile.get_GroupCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupCanWriteSetBoolean">
            <summary>Sets the shim of SftpFile.set_GroupCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupIdGet">
            <summary>Sets the shim of SftpFile.get_GroupId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.GroupIdSetInt32">
            <summary>Sets the shim of SftpFile.set_GroupId(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsBlockDeviceGet">
            <summary>Sets the shim of SftpFile.get_IsBlockDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsCharacterDeviceGet">
            <summary>Sets the shim of SftpFile.get_IsCharacterDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of SftpFile.get_IsDirectory()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsNamedPipeGet">
            <summary>Sets the shim of SftpFile.get_IsNamedPipe()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsRegularFileGet">
            <summary>Sets the shim of SftpFile.get_IsRegularFile()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsSocketGet">
            <summary>Sets the shim of SftpFile.get_IsSocket()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.IsSymbolicLinkGet">
            <summary>Sets the shim of SftpFile.get_IsSymbolicLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastAccessTimeGet">
            <summary>Sets the shim of SftpFile.get_LastAccessTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastAccessTimeSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastAccessTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastAccessTimeUtcGet">
            <summary>Sets the shim of SftpFile.get_LastAccessTimeUtc()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastAccessTimeUtcSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastAccessTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastWriteTimeGet">
            <summary>Sets the shim of SftpFile.get_LastWriteTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastWriteTimeSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastWriteTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastWriteTimeUtcGet">
            <summary>Sets the shim of SftpFile.get_LastWriteTimeUtc()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LastWriteTimeUtcSetDateTime">
            <summary>Sets the shim of SftpFile.set_LastWriteTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.LengthGet">
            <summary>Sets the shim of SftpFile.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.MoveToString">
            <summary>Sets the shim of SftpFile.MoveTo(String destFileName)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.NameGet">
            <summary>Sets the shim of SftpFile.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.NameSetString">
            <summary>Sets the shim of SftpFile.set_Name(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OthersCanExecuteGet">
            <summary>Sets the shim of SftpFile.get_OthersCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OthersCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OthersCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OthersCanReadGet">
            <summary>Sets the shim of SftpFile.get_OthersCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OthersCanReadSetBoolean">
            <summary>Sets the shim of SftpFile.set_OthersCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OthersCanWriteGet">
            <summary>Sets the shim of SftpFile.get_OthersCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OthersCanWriteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OthersCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OwnerCanExecuteGet">
            <summary>Sets the shim of SftpFile.get_OwnerCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OwnerCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OwnerCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OwnerCanReadGet">
            <summary>Sets the shim of SftpFile.get_OwnerCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OwnerCanReadSetBoolean">
            <summary>Sets the shim of SftpFile.set_OwnerCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OwnerCanWriteGet">
            <summary>Sets the shim of SftpFile.get_OwnerCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.OwnerCanWriteSetBoolean">
            <summary>Sets the shim of SftpFile.set_OwnerCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.SetPermissionsInt16">
            <summary>Sets the shim of SftpFile.SetPermissions(Int16 mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.ToString01">
            <summary>Sets the shim of SftpFile.ToString()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.UpdateStatus">
            <summary>Sets the shim of SftpFile.UpdateStatus()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.UserIdGet">
            <summary>Sets the shim of SftpFile.get_UserId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFile.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of SftpFile.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes">
            <summary>Shim type of Renci.SshNet.Sftp.SftpFileAttributes</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.#ctor(Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.Constructor">
            <summary>Sets the shim of SftpFileAttributes.SftpFileAttributes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.ConstructorDateTimeDateTimeInt64Int32Int32UInt32IDictionaryOfStringString">
            <summary>Sets the shim of SftpFileAttributes.SftpFileAttributes(DateTime lastAccessTime, DateTime lastWriteTime, Int64 size, Int32 userId, Int32 groupId, UInt32 permissions, IDictionary`2&lt;String,String&gt; extensions)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.ExtensionsGet">
            <summary>Sets the shim of SftpFileAttributes.get_Extensions()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.ExtensionsSetIDictionaryOfStringString">
            <summary>Sets the shim of SftpFileAttributes.set_Extensions(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupCanExecuteGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_GroupCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupCanReadGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupCanReadSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_GroupCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupCanWriteGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupCanWriteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_GroupCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupIdGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.GroupIdSetInt32">
            <summary>Sets the shim of SftpFileAttributes.set_GroupId(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsBlockDeviceGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsBlockDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsBlockDeviceSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsBlockDevice(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsCharacterDeviceGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsCharacterDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsCharacterDeviceSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsCharacterDevice(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsDirectoryGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsDirectory()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsDirectorySetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsDirectory(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsExtensionsChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsExtensionsChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsGroupIdChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsGroupIdChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsLastAccessTimeChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsLastAccessTimeChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsLastWriteTimeChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsLastWriteTimeChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsNamedPipeGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsNamedPipe()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsNamedPipeSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsNamedPipe(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsPermissionsChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsPermissionsChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsRegularFileGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsRegularFile()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsRegularFileSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsRegularFile(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsSizeChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsSizeChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsSocketGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsSocket()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsSocketSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsSocket(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsSymbolicLinkGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsSymbolicLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsSymbolicLinkSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsSymbolicLink(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.IsUserIdChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsUserIdChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.LastAccessTimeGet">
            <summary>Sets the shim of SftpFileAttributes.get_LastAccessTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.LastAccessTimeSetDateTime">
            <summary>Sets the shim of SftpFileAttributes.set_LastAccessTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.LastWriteTimeGet">
            <summary>Sets the shim of SftpFileAttributes.get_LastWriteTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.LastWriteTimeSetDateTime">
            <summary>Sets the shim of SftpFileAttributes.set_LastWriteTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OthersCanExecuteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OthersCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OthersCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OthersCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OthersCanReadGet">
            <summary>Sets the shim of SftpFileAttributes.get_OthersCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OthersCanReadSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OthersCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OthersCanWriteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OthersCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OthersCanWriteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OthersCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OwnerCanExecuteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OwnerCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OwnerCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OwnerCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OwnerCanReadGet">
            <summary>Sets the shim of SftpFileAttributes.get_OwnerCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OwnerCanReadSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OwnerCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OwnerCanWriteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OwnerCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.OwnerCanWriteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OwnerCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.PermissionsGet">
            <summary>Sets the shim of SftpFileAttributes.get_Permissions()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.PermissionsSetUInt32">
            <summary>Sets the shim of SftpFileAttributes.set_Permissions(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.SetPermissionsInt16">
            <summary>Sets the shim of SftpFileAttributes.SetPermissions(Int16 mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.SizeGet">
            <summary>Sets the shim of SftpFileAttributes.get_Size()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.SizeSetInt64">
            <summary>Sets the shim of SftpFileAttributes.set_Size(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.StaticConstructor">
            <summary>Sets the shim of SftpFileAttributes.SftpFileAttributes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.UserIdGet">
            <summary>Sets the shim of SftpFileAttributes.get_UserId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.UserIdSetInt32">
            <summary>Sets the shim of SftpFileAttributes.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.ExtensionsGet">
            <summary>Sets the shim of SftpFileAttributes.get_Extensions()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.ExtensionsSetIDictionaryOfStringString">
            <summary>Sets the shim of SftpFileAttributes.set_Extensions(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupCanExecuteGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_GroupCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupCanReadGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupCanReadSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_GroupCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupCanWriteGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupCanWriteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_GroupCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupIdGet">
            <summary>Sets the shim of SftpFileAttributes.get_GroupId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.GroupIdSetInt32">
            <summary>Sets the shim of SftpFileAttributes.set_GroupId(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsBlockDeviceGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsBlockDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsBlockDeviceSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsBlockDevice(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsCharacterDeviceGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsCharacterDevice()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsCharacterDeviceSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsCharacterDevice(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsDirectory()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsDirectorySetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsDirectory(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsExtensionsChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsExtensionsChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsGroupIdChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsGroupIdChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsLastAccessTimeChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsLastAccessTimeChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsLastWriteTimeChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsLastWriteTimeChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsNamedPipeGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsNamedPipe()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsNamedPipeSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsNamedPipe(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsPermissionsChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsPermissionsChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsRegularFileGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsRegularFile()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsRegularFileSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsRegularFile(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsSizeChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsSizeChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsSocketGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsSocket()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsSocketSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsSocket(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsSymbolicLinkGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsSymbolicLink()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsSymbolicLinkSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_IsSymbolicLink(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.IsUserIdChangedGet">
            <summary>Sets the shim of SftpFileAttributes.get_IsUserIdChanged()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.LastAccessTimeGet">
            <summary>Sets the shim of SftpFileAttributes.get_LastAccessTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.LastAccessTimeSetDateTime">
            <summary>Sets the shim of SftpFileAttributes.set_LastAccessTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.LastWriteTimeGet">
            <summary>Sets the shim of SftpFileAttributes.get_LastWriteTime()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.LastWriteTimeSetDateTime">
            <summary>Sets the shim of SftpFileAttributes.set_LastWriteTime(DateTime value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OthersCanExecuteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OthersCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OthersCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OthersCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OthersCanReadGet">
            <summary>Sets the shim of SftpFileAttributes.get_OthersCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OthersCanReadSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OthersCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OthersCanWriteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OthersCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OthersCanWriteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OthersCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OwnerCanExecuteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OwnerCanExecute()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OwnerCanExecuteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OwnerCanExecute(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OwnerCanReadGet">
            <summary>Sets the shim of SftpFileAttributes.get_OwnerCanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OwnerCanReadSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OwnerCanRead(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OwnerCanWriteGet">
            <summary>Sets the shim of SftpFileAttributes.get_OwnerCanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.OwnerCanWriteSetBoolean">
            <summary>Sets the shim of SftpFileAttributes.set_OwnerCanWrite(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.PermissionsGet">
            <summary>Sets the shim of SftpFileAttributes.get_Permissions()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.PermissionsSetUInt32">
            <summary>Sets the shim of SftpFileAttributes.set_Permissions(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.SetPermissionsInt16">
            <summary>Sets the shim of SftpFileAttributes.SetPermissions(Int16 mode)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.SizeGet">
            <summary>Sets the shim of SftpFileAttributes.get_Size()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.SizeSetInt64">
            <summary>Sets the shim of SftpFileAttributes.set_Size(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.UserIdGet">
            <summary>Sets the shim of SftpFileAttributes.get_UserId()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileAttributes.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of SftpFileAttributes.set_UserId(Int32 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream">
            <summary>Shim type of Renci.SshNet.Sftp.SftpFileStream</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.#ctor(Renci.SshNet.Sftp.SftpFileStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of SftpFileStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of SftpFileStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.CanReadGet">
            <summary>Sets the shim of SftpFileStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.CanSeekGet">
            <summary>Sets the shim of SftpFileStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.CanWriteGet">
            <summary>Sets the shim of SftpFileStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.Close">
            <summary>Sets the shim of SftpFileStream.Close()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.DisposeBoolean">
            <summary>Sets the shim of SftpFileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.EndReadIAsyncResult">
            <summary>Sets the shim of SftpFileStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.EndWriteIAsyncResult">
            <summary>Sets the shim of SftpFileStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.Flush">
            <summary>Sets the shim of SftpFileStream.Flush()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.FlushReadBuffer">
            <summary>Sets the shim of SftpFileStream.FlushReadBuffer()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.FlushWriteBuffer">
            <summary>Sets the shim of SftpFileStream.FlushWriteBuffer()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.HandleGet">
            <summary>Sets the shim of SftpFileStream.get_Handle()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.IsAsyncGet">
            <summary>Sets the shim of SftpFileStream.get_IsAsync()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.LengthGet">
            <summary>Sets the shim of SftpFileStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.NameGet">
            <summary>Sets the shim of SftpFileStream.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.NameSetString">
            <summary>Sets the shim of SftpFileStream.set_Name(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.PositionGet">
            <summary>Sets the shim of SftpFileStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.PositionSetInt64">
            <summary>Sets the shim of SftpFileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.ReadByte">
            <summary>Sets the shim of SftpFileStream.ReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SftpFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of SftpFileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of SftpFileStream.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.SetLengthInt64">
            <summary>Sets the shim of SftpFileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.SetupRead">
            <summary>Sets the shim of SftpFileStream.SetupRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.SetupWrite">
            <summary>Sets the shim of SftpFileStream.SetupWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.TimeoutGet">
            <summary>Sets the shim of SftpFileStream.get_Timeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.TimeoutSetTimeSpan">
            <summary>Sets the shim of SftpFileStream.set_Timeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of SftpFileStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.WriteByteByte">
            <summary>Sets the shim of SftpFileStream.WriteByte(Byte value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of SftpFileStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the shim of SftpFileStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.CanReadGet">
            <summary>Sets the shim of SftpFileStream.get_CanRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of SftpFileStream.get_CanSeek()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of SftpFileStream.get_CanWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.Close">
            <summary>Sets the shim of SftpFileStream.Close()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SftpFileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.EndReadIAsyncResult">
            <summary>Sets the shim of SftpFileStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.EndWriteIAsyncResult">
            <summary>Sets the shim of SftpFileStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.Flush">
            <summary>Sets the shim of SftpFileStream.Flush()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.FlushReadBuffer">
            <summary>Sets the shim of SftpFileStream.FlushReadBuffer()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.FlushWriteBuffer">
            <summary>Sets the shim of SftpFileStream.FlushWriteBuffer()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.HandleGet">
            <summary>Sets the shim of SftpFileStream.get_Handle()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.IsAsyncGet">
            <summary>Sets the shim of SftpFileStream.get_IsAsync()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.LengthGet">
            <summary>Sets the shim of SftpFileStream.get_Length()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.NameGet">
            <summary>Sets the shim of SftpFileStream.get_Name()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.NameSetString">
            <summary>Sets the shim of SftpFileStream.set_Name(String value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.PositionGet">
            <summary>Sets the shim of SftpFileStream.get_Position()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of SftpFileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.ReadByte">
            <summary>Sets the shim of SftpFileStream.ReadByte()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SftpFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of SftpFileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of SftpFileStream.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of SftpFileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.SetupRead">
            <summary>Sets the shim of SftpFileStream.SetupRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.SetupWrite">
            <summary>Sets the shim of SftpFileStream.SetupWrite()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.TimeoutGet">
            <summary>Sets the shim of SftpFileStream.get_Timeout()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.TimeoutSetTimeSpan">
            <summary>Sets the shim of SftpFileStream.set_Timeout(TimeSpan value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of SftpFileStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileStream.AllInstances.WriteByteByte">
            <summary>Sets the shim of SftpFileStream.WriteByte(Byte value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation">
            <summary>Shim type of Renci.SshNet.Sftp.SftpFileSytemInformation</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.#ctor(Renci.SshNet.Sftp.SftpFileSytemInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AvailableBlocksGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_AvailableBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AvailableBlocksSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_AvailableBlocks(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AvailableNodesGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_AvailableNodes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AvailableNodesSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_AvailableNodes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.BlockSizeGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_BlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.BlockSizeSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_BlockSize(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.ConstructorUInt64UInt64UInt64UInt64UInt64UInt64UInt64UInt64UInt64UInt64UInt64">
            <summary>Sets the shim of SftpFileSytemInformation.SftpFileSytemInformation(UInt64 bsize, UInt64 frsize, UInt64 blocks, UInt64 bfree, UInt64 bavail, UInt64 files, UInt64 ffree, UInt64 favail, UInt64 sid, UInt64 flag, UInt64 namemax)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.FreeBlocksGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_FreeBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.FreeBlocksSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_FreeBlocks(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.FreeNodesGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_FreeNodes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.FreeNodesSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_FreeNodes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.IsReadOnlyGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_IsReadOnly()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.MaxNameLenghtGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_MaxNameLenght()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.MaxNameLenghtSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_MaxNameLenght(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.SidGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_Sid()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.SidSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_Sid(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.SupportsSetUidGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_SupportsSetUid()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.TotalBlocksGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_TotalBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.TotalBlocksSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_TotalBlocks(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.TotalNodesGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_TotalNodes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.TotalNodesSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_TotalNodes(UInt64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.AvailableBlocksGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_AvailableBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.AvailableBlocksSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_AvailableBlocks(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.AvailableNodesGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_AvailableNodes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.AvailableNodesSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_AvailableNodes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.BlockSizeGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_BlockSize()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.BlockSizeSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_BlockSize(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.FreeBlocksGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_FreeBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.FreeBlocksSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_FreeBlocks(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.FreeNodesGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_FreeNodes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.FreeNodesSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_FreeNodes(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_IsReadOnly()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.MaxNameLenghtGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_MaxNameLenght()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.MaxNameLenghtSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_MaxNameLenght(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.SidGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_Sid()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.SidSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_Sid(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.SupportsSetUidGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_SupportsSetUid()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.TotalBlocksGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_TotalBlocks()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.TotalBlocksSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_TotalBlocks(UInt64 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.TotalNodesGet">
            <summary>Sets the shim of SftpFileSytemInformation.get_TotalNodes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpFileSytemInformation.AllInstances.TotalNodesSetUInt64">
            <summary>Sets the shim of SftpFileSytemInformation.set_TotalNodes(UInt64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult">
            <summary>Shim type of Renci.SshNet.Sftp.SftpListDirectoryAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.#ctor(Renci.SshNet.Sftp.SftpListDirectoryAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.SftpListDirectoryAsyncResult(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.FilesReadGet">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.get_FilesRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.FilesReadSetInt32">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.set_FilesRead(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.UpdateInt32">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.Update(Int32 filesRead)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.AllInstances.FilesReadGet">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.get_FilesRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.AllInstances.FilesReadSetInt32">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.set_FilesRead(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpListDirectoryAsyncResult.AllInstances.UpdateInt32">
            <summary>Sets the shim of SftpListDirectoryAsyncResult.Update(Int32 filesRead)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult">
            <summary>Shim type of Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.#ctor(Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.SftpSynchronizeDirectoriesAsyncResult(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.FilesReadGet">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.get_FilesRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.FilesReadSetInt32">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.set_FilesRead(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.UpdateInt32">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.Update(Int32 filesRead)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.AllInstances.FilesReadGet">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.get_FilesRead()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.AllInstances.FilesReadSetInt32">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.set_FilesRead(Int32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpSynchronizeDirectoriesAsyncResult.AllInstances.UpdateInt32">
            <summary>Sets the shim of SftpSynchronizeDirectoriesAsyncResult.Update(Int32 filesRead)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult">
            <summary>Shim type of Renci.SshNet.Sftp.SftpUploadAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.#ctor(Renci.SshNet.Sftp.SftpUploadAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.ConstructorAsyncCallbackObject">
            <summary>Sets the shim of SftpUploadAsyncResult.SftpUploadAsyncResult(AsyncCallback asyncCallback, Object state)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.IsUploadCanceledGet">
            <summary>Sets the shim of SftpUploadAsyncResult.get_IsUploadCanceled()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.IsUploadCanceledSetBoolean">
            <summary>Sets the shim of SftpUploadAsyncResult.set_IsUploadCanceled(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.UpdateUInt64">
            <summary>Sets the shim of SftpUploadAsyncResult.Update(UInt64 uploadedBytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.UploadedBytesGet">
            <summary>Sets the shim of SftpUploadAsyncResult.get_UploadedBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.UploadedBytesSetUInt64">
            <summary>Sets the shim of SftpUploadAsyncResult.set_UploadedBytes(UInt64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.AllInstances.IsUploadCanceledGet">
            <summary>Sets the shim of SftpUploadAsyncResult.get_IsUploadCanceled()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.AllInstances.IsUploadCanceledSetBoolean">
            <summary>Sets the shim of SftpUploadAsyncResult.set_IsUploadCanceled(Boolean value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.AllInstances.UpdateUInt64">
            <summary>Sets the shim of SftpUploadAsyncResult.Update(UInt64 uploadedBytes)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.AllInstances.UploadedBytesGet">
            <summary>Sets the shim of SftpUploadAsyncResult.get_UploadedBytes()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSftpUploadAsyncResult.AllInstances.UploadedBytesSetUInt64">
            <summary>Sets the shim of SftpUploadAsyncResult.set_UploadedBytes(UInt64 value)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession">
            <summary>Shim type of Renci.SshNet.Sftp.SubsystemSession</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.#ctor(Renci.SshNet.Sftp.SubsystemSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.ChannelNumberGet">
            <summary>Sets the shim of SubsystemSession.get_ChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.ChannelNumberSetUInt32">
            <summary>Sets the shim of SubsystemSession.set_ChannelNumber(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Connect">
            <summary>Sets the shim of SubsystemSession.Connect()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.ConstructorSessionStringTimeSpanEncoding">
            <summary>Sets the shim of SubsystemSession.SubsystemSession(Session session, String subsystemName, TimeSpan operationTimeout, Encoding encoding)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Disconnect">
            <summary>Sets the shim of SubsystemSession.Disconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.DisconnectedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of SubsystemSession.add_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.DisconnectedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of SubsystemSession.remove_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Dispose">
            <summary>Sets the shim of SubsystemSession.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.DisposeBoolean">
            <summary>Sets the shim of SubsystemSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.EncodingGet">
            <summary>Sets the shim of SubsystemSession.get_Encoding()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.EncodingSetEncoding">
            <summary>Sets the shim of SubsystemSession.set_Encoding(Encoding value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of SubsystemSession.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of SubsystemSession.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.RaiseErrorException">
            <summary>Sets the shim of SubsystemSession.RaiseError(Exception error)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.SendDataByteArray">
            <summary>Sets the shim of SubsystemSession.SendData(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of SubsystemSession.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of SubsystemSession.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.WaitHandleWaitHandleTimeSpan">
            <summary>Sets the shim of SubsystemSession.WaitHandle(WaitHandle waitHandle, TimeSpan operationTimeout)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.ChannelNumberGet">
            <summary>Sets the shim of SubsystemSession.get_ChannelNumber()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.ChannelNumberSetUInt32">
            <summary>Sets the shim of SubsystemSession.set_ChannelNumber(UInt32 value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.Connect">
            <summary>Sets the shim of SubsystemSession.Connect()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.Disconnect">
            <summary>Sets the shim of SubsystemSession.Disconnect()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.DisconnectedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of SubsystemSession.add_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.DisconnectedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of SubsystemSession.remove_Disconnected(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.Dispose">
            <summary>Sets the shim of SubsystemSession.Dispose()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SubsystemSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.EncodingGet">
            <summary>Sets the shim of SubsystemSession.get_Encoding()</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.EncodingSetEncoding">
            <summary>Sets the shim of SubsystemSession.set_Encoding(Encoding value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.ErrorOccurredAddEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of SubsystemSession.add_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.ErrorOccurredRemoveEventHandlerOfExceptionEventArgs">
            <summary>Sets the shim of SubsystemSession.remove_ErrorOccurred(EventHandler`1&lt;ExceptionEventArgs&gt; value)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.RaiseErrorException">
            <summary>Sets the shim of SubsystemSession.RaiseError(Exception error)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.SendDataByteArray">
            <summary>Sets the shim of SubsystemSession.SendData(Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.Session_DisconnectedObjectEventArgs">
            <summary>Sets the shim of SubsystemSession.Session_Disconnected(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.Session_ErrorOccuredObjectExceptionEventArgs">
            <summary>Sets the shim of SubsystemSession.Session_ErrorOccured(Object sender, ExceptionEventArgs e)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.ShimSubsystemSession.AllInstances.WaitHandleWaitHandleTimeSpan">
            <summary>Sets the shim of SubsystemSession.WaitHandle(WaitHandle waitHandle, TimeSpan operationTimeout)</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.StubSftpDownloadAsyncResult">
            <summary>Stub type of Renci.SshNet.Sftp.SftpDownloadAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpDownloadAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpDownloadAsyncResult.InitializeStub">
            <summary>Initializes a new instance of type StubSftpDownloadAsyncResult</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpDownloadAsyncResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpDownloadAsyncResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpDownloadAsyncResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.StubSftpListDirectoryAsyncResult">
            <summary>Stub type of Renci.SshNet.Sftp.SftpListDirectoryAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpListDirectoryAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpListDirectoryAsyncResult.InitializeStub">
            <summary>Initializes a new instance of type StubSftpListDirectoryAsyncResult</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpListDirectoryAsyncResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpListDirectoryAsyncResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpListDirectoryAsyncResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.StubSftpSynchronizeDirectoriesAsyncResult">
            <summary>Stub type of Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpSynchronizeDirectoriesAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpSynchronizeDirectoriesAsyncResult.InitializeStub">
            <summary>Initializes a new instance of type StubSftpSynchronizeDirectoriesAsyncResult</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpSynchronizeDirectoriesAsyncResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpSynchronizeDirectoriesAsyncResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpSynchronizeDirectoriesAsyncResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.StubSftpUploadAsyncResult">
            <summary>Stub type of Renci.SshNet.Sftp.SftpUploadAsyncResult</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpUploadAsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSftpUploadAsyncResult.InitializeStub">
            <summary>Initializes a new instance of type StubSftpUploadAsyncResult</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpUploadAsyncResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpUploadAsyncResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSftpUploadAsyncResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.Fakes.StubSubsystemSession">
            <summary>Stub type of Renci.SshNet.Sftp.SubsystemSession</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.#ctor(Renci.SshNet.Session,System.String,System.TimeSpan,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.Dispose(System.Boolean)">
            <summary>Sets the stub of SubsystemSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.DisposeBoolean">
            <summary>Sets the stub of SubsystemSession.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.InitializeStub">
            <summary>Initializes a new instance of type StubSubsystemSession</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.OnChannelOpen">
            <summary>Sets the stub of SubsystemSession.OnChannelOpen()</summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.OnChannelOpen01">
            <summary>Sets the stub of SubsystemSession.OnChannelOpen()</summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.OnDataReceived(System.UInt32,System.Byte[])">
            <summary>Sets the stub of SubsystemSession.OnDataReceived(UInt32 dataTypeCode, Byte[] data)</summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.OnDataReceivedUInt32ByteArray">
            <summary>Sets the stub of SubsystemSession.OnDataReceived(UInt32 dataTypeCode, Byte[] data)</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.Fakes.StubSubsystemSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
